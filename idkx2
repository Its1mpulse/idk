local a=Vector3.new(1,0,1) local b=Vector3.new(0,25.1,0) local function e(_)local a=_*a local _=a.Magnitude if _>0.1 then a*=100/_ end a+=b return a end local g="shp" local t=true local o=true local b=true local n=true local d=true local w=false local q=true local h=game:GetService("Players").RespawnTime+0.5 local z=3 local f=2 local v=game:GetService("Players").LocalPlayer local _=game:GetService("RunService") local i=_.Stepped local l=_.Heartbeat local c=_.RenderStepped local j=game:GetService("StarterGui") local r=game:GetService("Workspace") local A=CFrame.new local y=Vector3.new local u=y(0,0,0) local x=math.huge local B=v.Character if not(B and B.Parent)then return end B.Destroying:Connect(function()B=nil end) local function K(_,b,a)if typeof(_)=="Instance"then for _,_ in pairs(_:GetChildren())do if(_.Name==b)and _:IsA(a)then return _ end end end return nil end local function a(b,_)b.CustomPhysicalProperties=PhysicalProperties.new(0.0001,0.0001,0.0001,0.0001,0.0001) local c=Instance.new("Attachment",b) c.Orientation=u c.Position=u c.Name="att0_"..b.Name local a=Instance.new("Attachment",_) a.Orientation=u a.Position=u a.Name="att1_".._.Name if(f==1)or(f==2)then local _=Instance.new("AlignPosition",c) _.ApplyAtCenterOfMass=false _.MaxForce=x _.MaxVelocity=x _.ReactionForceEnabled=false _.Responsiveness=200 _.Attachment1=a _.Attachment0=c _.Name="AlignPositionRtrue" _.RigidityEnabled=true end if(f==2)or(f==3)then local _=Instance.new("AlignPosition",c) _.ApplyAtCenterOfMass=false _.MaxForce=x _.MaxVelocity=x _.ReactionForceEnabled=false _.Responsiveness=200 _.Attachment1=a _.Attachment0=c _.Name="AlignPositionRfalse" _.RigidityEnabled=false end local _=Instance.new("AlignOrientation",c) _.MaxAngularVelocity=x _.MaxTorque=x _.PrimaryAxisOnly=false _.ReactionTorqueEnabled=false _.Responsiveness=200 _.Attachment1=a _.Attachment0=c _.RigidityEnabled=false if type(e)=="function"then local a=u local _=i:Connect(function()b.Velocity=a end) local a=l:Connect(function()a=b.Velocity b.Velocity=e(a)end) b.Destroying:Connect(function()b=nil _:Disconnect() a:Disconnect()end)end end local function m()local a=r.CurrentCamera.CFrame local _=v.Character v.Character=nil v.Character=_ local b=nil b=r.CurrentCamera.Changed:Connect(function(_)if(_~="Parent")and(_~="CFrame")then return end r.CurrentCamera.CFrame=a b:Disconnect()end)end local k=(z==4)or(z==5) local _=(z==0)or(z==4) local f=(z==0)or(z==2)or(z==3) hatcollide=hatcollide and(z==0) w=w and K(v,"Backpack","Backpack") local e=getfenv() local p=e.sethiddenproperty or e.set_hidden_property or e.set_hidden_prop or e.sethiddenprop local e=e.setsimulationradius or e.set_simulation_radius or e.set_sim_radius or e.setsimradius or e.set_simulation_rad or e.setsimulationrad if p and(g=="shp")then spawn(function()while B and l:Wait()do p(v,"SimulationRadius",x)end end)elseif e and(g=="ssr")then spawn(function()while B and l:Wait()do e(x)end end)end t=t and function(_)if _:IsA("HingeConstraint")or _:IsA("BallSocketConstraint")then _.Parent=nil end end if t then for _,_ in pairs(B:GetDescendants())do t(_)end B.DescendantAdded:Connect(t)end if f then m()end if z==0 then wait(h) if not B then return end end if b then for _,_ in pairs(B:GetChildren())do if _:IsA("LocalScript")then _.Disabled=true end end elseif o then local _=K(B,"Animate","LocalScript") if _ and(not _.Disabled)then _.Disabled=true else o=false end end if w then for _,_ in pairs(w:GetChildren())do if _:IsA("Tool")then _.Parent=B end end end pcall(function()settings().Physics.AllowSleep=false settings().Physics.PhysicsEnvironmentalThrottle=Enum.EnviromentalPhysicsThrottle.Disabled end) local b={} for _,_ in pairs(B:GetDescendants())do if _.ClassName=="Script"then table.insert(b,_)end end local e={} for _,a in pairs(B:GetDescendants())do if a:IsA("BasePart")then local d=tostring(_) local c=true while c do c=false for _,_ in pairs(b)do if _.Name==d then c=true end end if c then d=d.."_"end end table.insert(e,d) Instance.new("Script",a).Name=d end end B.Archivable=true local b=B:FindFirstChildOfClass("Humanoid") if b then for _,_ in pairs(b:GetPlayingAnimationTracks())do _:Stop()end end local g=B:Clone() if b and d then b:ChangeState(Enum.HumanoidStateType.Physics) if k then wait(1.6)end end if b and b.Parent and k then b:Destroy()end if not B then return end local l=K(B,"Head","BasePart") local d=K(B,"Torso","BasePart")or K(B,"UpperTorso","BasePart") local b=K(B,"HumanoidRootPart","BasePart") if hatcollide and B:FindFirstChildOfClass("Accessory")then local _=B:FindFirstChildOfClass("BodyColors")or K(B,"Health","Script") if not(d and b and _)then return end d:Destroy() b:Destroy() if p then for _,_ in pairs(B:GetChildren())do if _:IsA("Accessory")then p(_,"BackendAccoutrementState",0)end end end _:Destroy()end for _,_ in pairs(g:GetDescendants())do if _:IsA("BasePart")then _.Transparency=1 _.Anchored=false end end local p=Instance.new("Model",B) p.Name=p.ClassName p.Destroying:Connect(function()p=nil end) for _,a in pairs(B:GetChildren())do if a~=p then if w and a:IsA("Tool")then for _,_ in pairs(a:GetDescendants())do if _ and _.Parent and _:IsA("BasePart")then local _=Instance.new("BodyVelocity",_) _.Velocity=u _.MaxForce=y(1000,1000,1000) _.P=1250 _.Name="bv_"..a.Name end end end a.Parent=p end end if _ then p:BreakJoints()else if l and d then for _,a in pairs(p:GetDescendants())do if a:IsA("Weld")or a:IsA("Snap")or a:IsA("Glue")or a:IsA("Motor")or a:IsA("Motor6D")then local _=false if(a.Part0==d)and(a.Part1==l)then _=true end if(a.Part0==l)and(a.Part1==d)then _=true end if _ then if q then q=a end else a:Destroy()end end end end if z==3 then spawn(function()wait(h) if p then p:BreakJoints()end end)end end g.Parent=B for _,_ in pairs(g:GetChildren())do _.Parent=B end g:Destroy() local d={} for a,_ in pairs(p:GetDescendants())do if _:IsA("BasePart")then a=tostring(a) _.Destroying:Connect(function()d[a]=nil end) d[a]=_ end end local _=nil local function b()if p then for _,_ in pairs(d)do _.CanCollide=false end else _:Disconnect()end end _=i:Connect(b) b() for _,c in pairs(p:GetDescendants())do if(c.ClassName=="Script")and table.find(e,c.Name)then local b=c.Parent if b:IsA("BasePart")then for _,_ in pairs(B:GetDescendants())do if(_.ClassName=="Script")and(_.Name==c.Name)and(not _:IsDescendantOf(p))then local _=_.Parent if(_.ClassName==b.ClassName)and(_.Name==b.Name)then a(b,_) break end end end end end end if(typeof(q)=="Instance")and l then local b={} local a=nil a=q.Changed:Connect(function(_)if(_=="Parent")and not q.Parent then a:Disconnect() for _,_ in pairs(b)do _.Enabled=true end end end) for _,a in pairs(l:GetDescendants())do if a:IsA("AlignPosition")or a:IsA("AlignOrientation")then _=tostring(_) b[_]=a a.Destroying:Connect(function()b[_]=nil end) a.Enabled=false end end end for _,_ in pairs(B:GetDescendants())do if _ and _.Parent then if _.ClassName=="Script"then if table.find(e,_.Name)then _:Destroy()end elseif not _:IsDescendantOf(p)then if _:IsA("Decal")then _.Transparency=1 elseif _:IsA("ForceField")then _.Visible=false elseif _:IsA("Sound")then _.Playing=false elseif _:IsA("BillboardGui")or _:IsA("SurfaceGui")or _:IsA("ParticleEmitter")or _:IsA("Fire")or _:IsA("Smoke")or _:IsA("Sparkles")then _.Enabled=false end end end end if o then local _=K(B,"Animate","LocalScript") if _ then _.Disabled=false end end if w then for _,_ in pairs(B:GetChildren())do if _:IsA("Tool")then _.Parent=w end end end local b=p:FindFirstChildOfClass("Humanoid") if b then b.Destroying:Connect(function()b=nil end)end local d=B:FindFirstChildOfClass("Humanoid") if d then d.Destroying:Connect(function()d=nil end)end if d then r.CurrentCamera.CameraSubject=d local a=nil local function _()a:Disconnect() if B and d then r.CurrentCamera.CameraSubject=d end end a=c:Connect(_) if b then b.Changed:Connect(function(_)if d and(_=="Jump")then d.Jump=b.Jump end end)else m()end end local _=Instance.new("BindableEvent",B) _.Event:Connect(function()_:Destroy() j:SetCore("ResetButtonCallback",true) if k then B:BreakJoints() return end if b and(b.Health>0)then p:BreakJoints() b.Health=0 end if f then m()end end) j:SetCore("ResetButtonCallback",_) spawn(function()while B do if b and d then d.Jump=b.Jump end wait()end j:SetCore("ResetButtonCallback",true)end) n=n and d and(d.RigType==Enum.HumanoidRigType.R15) if n then local c=K(B,"HumanoidRootPart","BasePart")or K(B,"UpperTorso","BasePart")or K(B,"LowerTorso","BasePart")or K(B,"Head","BasePart")or B:FindFirstChildWhichIsA("BasePart") if c then local a=c.CFrame local f={head={Name="Head",Size=y(2,1,1),R15={Head=0}},torso={Name="Torso",Size=y(2,2,1),R15={UpperTorso=0.2,LowerTorso=-0.8}},root={Name="HumanoidRootPart",Size=y(2,2,1),R15={HumanoidRootPart=0}},leftArm={Name="Left Arm",Size=y(1,2,1),R15={LeftHand=-0.85,LeftLowerArm=-0.2,LeftUpperArm=0.4}},rightArm={Name="Right Arm",Size=y(1,2,1),R15={RightHand=-0.85,RightLowerArm=-0.2,RightUpperArm=0.4}},leftLeg={Name="Left Leg",Size=y(1,2,1),R15={LeftFoot=-0.85,LeftLowerLeg=-0.15,LeftUpperLeg=0.6}},rightLeg={Name="Right Leg",Size=y(1,2,1),R15={RightFoot=-0.85,RightLowerLeg=-0.15,RightUpperLeg=0.6}}} for _,_ in pairs(B:GetChildren())do if _:IsA("BasePart")then for _,_ in pairs(_:GetChildren())do if _:IsA("Motor6D")then _.Part0=nil end end end end c.Archivable=true for _,b in pairs(f)do local e=c:Clone() e:ClearAllChildren() e.Name=b.Name e.Size=b.Size e.CFrame=a e.Anchored=false e.Transparency=1 e.CanCollide=false for b,_ in pairs(b.R15)do local d=K(B,b,"BasePart") local a=K(d,"att1_"..b,"Attachment") if d then local c=Instance.new("Weld",d) c.Name="Weld_"..b c.Part0=e c.Part1=d c.C0=A(0,_,0) c.C1=A(0,0,0) d.Massless=true d.Name="R15_"..b d.Parent=e if a then a.Parent=e a.Position=y(0,_,0)end end end e.Parent=B f[_]=e end local c={neck={Parent=f.torso,Name="Neck",Part0=f.torso,Part1=f.head,C0=A(0,1,0,-1,0,0,0,0,1,0,1,-0),C1=A(0,-0.5,0,-1,0,0,0,0,1,0,1,-0)},rootJoint={Parent=f.root,Name="RootJoint",Part0=f.root,Part1=f.torso,C0=A(0,0,0,-1,0,0,0,0,1,0,1,-0),C1=A(0,0,0,-1,0,0,0,0,1,0,1,-0)},rightShoulder={Parent=f.torso,Name="Right Shoulder",Part0=f.torso,Part1=f.rightArm,C0=A(1,0.5,0,0,0,1,0,1,-0,-1,0,0),C1=A(-0.5,0.5,0,0,0,1,0,1,-0,-1,0,0)},leftShoulder={Parent=f.torso,Name="Left Shoulder",Part0=f.torso,Part1=f.leftArm,C0=A(-1,0.5,0,0,0,-1,0,1,0,1,0,0),C1=A(0.5,0.5,0,0,0,-1,0,1,0,1,0,0)},rightHip={Parent=f.torso,Name="Right Hip",Part0=f.torso,Part1=f.rightLeg,C0=A(1,-1,0,0,0,1,0,1,-0,-1,0,0),C1=A(0.5,1,0,0,0,1,0,1,-0,-1,0,0)},leftHip={Parent=f.torso,Name="Left Hip",Part0=f.torso,Part1=f.leftLeg,C0=A(-1,-1,0,0,0,-1,0,1,0,1,0,0),C1=A(-0.5,1,0,0,0,-1,0,1,0,1,0,0)}} for _,a in pairs(c)do local b=Instance.new("Motor6D") for a,_ in pairs(a)do b[a]=_ end c[_]=b end d.RigType=Enum.HumanoidRigType.R6 d.HipHeight=0 end end game.Players.LocalPlayer.Character.Animate:Destroy() wait(0.5) local H=false KEYHOLD=false s=script local I=0 SCRIPT,scrpt,Scrpt,SCRPT,Script=s,s,s,s,s IT=Instance.new CF=CFrame.new VT=Vector3.new RAD=math.rad C3=Color3.new UD2=UDim2.new BRICKC=BrickColor.new ANGLES=CFrame.Angles EULER=CFrame.fromEulerAnglesXYZ COS=math.cos ACOS=math.acos SIN=math.sin ASIN=math.asin SQRT=math.sqrt ABS=math.abs MRANDOM=math.random FLOOR=math.floor HUGE=math.huge radian=math.rad random=math.random Vec3=Vector3.new Inst=Instance.new cFrame=CFrame.new Euler=CFrame.fromEulerAnglesXYZ vt=Vector3.new bc=BrickColor.new br=BrickColor.random it=Instance.new angles=CFrame.Angles Cf=CFrame.new A=CFrame.new Cos=math.cos Sin=math.sin Abs=math.abs Rad=math.rad Animation_Speed=3 local u=game:GetService("Players").LocalPlayer local _=u local _=_ local na=0 local Q=na local ga=0 local M=0 local ca=0 local L=0 local q=false local f=u.Name local _=false local c=game:GetService("Players").LocalPlayer local _=u.UserId local X={Value="None"} local ba={Value="rbxassetid://3247404955"} local P=false local m=50 WALKSPEEDVALUE=m local T={} local j={Value=0} local i=false local J=nil local C=game:GetService("Players").LocalPlayer.Character local h,_,_,_,_=u:GetMouse(),u:GetMouse(),u:GetMouse(),u:GetMouse(),u:GetMouse() local _=1 local _=Instance.new("Part") local _a=C.Humanoid _a.Animator:Destroy() _a:SetStateEnabled(Enum.HumanoidStateType.Dead,false) local _=C["Left Arm"] local _=C["Right Arm"] local _=C["Left Leg"] local _=C["Right Leg"] local b=C.Head local p=C.Torso local R=C.HumanoidRootPart local ja=R.RootJoint local ma=p["Neck"] local ha=p["Right Shoulder"] local ia=p["Left Shoulder"] local la=p["Right Hip"] local ka=p["Left Hip"] local _=nil local _=nil local y=game:GetObjects("rbxassetid://9708309400")[1] y.Parent=C local d=y.Base.Color local l=false local e=Instance.new("Folder") e.Parent=C local x=Instance.new("Part") x.Name="eeeblock" x.CanCollide=false x.Transparency=1 x.CFrame=p.CFrame x.Parent=workspace local S=Instance.new("Sound",x) S.Volume=1 S.Pitch=1 S.SoundId=ba.Value S:Play() S.Name="eee" S.Looped=true S.TimePosition=j.Value S.DescendantAdded:Connect(function(_)if H then wait(math.huge)end if _:IsA("SoundEffect")then _.Enabled=false _:GetPropertyChangedSignal("Enabled"):Connect(function()if H then wait(math.huge)end if _.Enabled~=false then _.Enabled=false end end)end game:GetService("Debris"):AddItem(_,.01)end) function T:FireServer(_,a)X.Value=_ if ba.Value~="rbxassetid://"..a then ba.Value="rbxassetid://"..a j.Value=0 S.Volume=1 S.Pitch=1 S.SoundId=ba.Value S.TimePosition=j.Value end end local da=CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)) local Z=CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)) local V=CFrame.new(-0.5,0,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0)) local U=CFrame.new(0.5,0,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0)) local A,z,G,E=da,Z,V,U local D,B,r,_,k=CFrame.Angles,math.rad,math.cos,Vector3.new,math.sin local O={roto=da,neco=Z,rico=V,leco=U} local fa={welds={rot=ja,net=ma,rt=ha,lt=ia,lh=ka,rh=la}} local ea={necksnap=false,cf=CFrame.new,ang=CFrame.Angles,radt=math.rad,c3r=Color3.new,cosp=math.cos,rand=math.random,abs=math.abs,flor=math.floor,v3=Vector3.new,sin=math.sin,ra=math.rad} local _=setmetatable({},{__index=function(_,_)return game:service(_)end}) local _=_.Players NewInstance=function(a,_,b)local c=Instance.new(a) c.Parent=_ if(b)then for _,a in next,b do pcall(function()c[_]=a end)end end return c end function chatfunc(_,a)local b=string.gsub(_,"​","") local _=coroutine.wrap(function()local _=x:FindFirstChild("TalkingBillBoard") if _ then _:Destroy()end local _=Instance.new("BillboardGui",x) _.Size=UDim2.new(0,9999,2,0) _.StudsOffset=Vector3.new(0,5,0) _.Adornee=x _.Name="TalkingBillBoard" local e=Instance.new("TextLabel",_) e.BackgroundTransparency=1 e.BorderSizePixel=0 e.Text="" e.Font="Bangers" e.TextScaled=true e.TextStrokeTransparency=0 coroutine.resume(coroutine.create(function()while not H do local a,_,b=Color3:ToHSV(y.NeonParts.Color) e.TextColor3=Color3.fromHSV(a,_,b/2) swait()end end)) e.TextStrokeColor3=d e.Size=UDim2.new(1,0,1,0) local c=Instance.new("TextLabel",_) c.BackgroundTransparency=1 c.BorderSizePixel=0 c.Text="" c.Font="Bangers" c.TextScaled=true c.TextStrokeTransparency=0 coroutine.resume(coroutine.create(function()while not H do c.TextColor3=y.NeonParts.Color swait()end end)) c.TextStrokeColor3=d c.Size=UDim2.new(1,0,1,0) coroutine.resume(coroutine.create(function()while not H and _~=nil do swait() if a then local _={"Code","Arial","Cartoon","Gotham","Highway","JosefinSans","Legacy","Nunito","Merriweather","Roboto","SciFi","SourceSans","Ubuntu"} local _=_[math.random(1,#_)] e.Font=_ c.Font=_ end e.Position=UDim2.new(0,math.random(-3,3),0,math.random(-3,3)) c.Position=UDim2.new(0,math.random(-3,3),0,math.random(-3,3))end end)) for _=1,string.len(b)do swait(2) e.Text=string.sub(b,1,_) c.Text=string.sub(b,1,_)end swait(120) for _=1,50 do swait() e.Position=e.Position-UDim2.new(0,math.random(-3,3),0,math.random(-3,3)) c.Position=e.Position-UDim2.new(0,math.random(-3,3),0,math.random(-3,3)) e.Rotation=e.Rotation+math.random(-2,2) c.Rotation=c.Rotation+math.random(-2,2) e.TextStrokeTransparency=_/50 e.TextTransparency=e.TextStrokeTransparency c.TextStrokeTransparency=e.TextStrokeTransparency c.TextTransparency=e.TextStrokeTransparency end _:Destroy()end) _()end function onChatted(_)chatfunc(_,true)end c.Chatted:connect(onChatted) local n=nil local o=nil local a=false local _=false local _=nil local _=nil local _=false local W="Idle" local _=1 local _=false local _=true local aa=(R.Velocity*Vector3.new(1,0,1)).Magnitude local g=0 _a.WalkSpeed=m local t=CFrame.new()*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)) local v=CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)) local w=CFrame.new(-.5,0,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0)) local F=CFrame.new(.5,0,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0)) function QFCF(_)local _,_,_,i,b,d,c,h,g,e,f,a=_:components() local _=i+h+a if _>0 then local _=math.sqrt(1+_) local a=0.5/_ return(f-g)*a,(d-e)*a,(c-b)*a,_*0.5 else local _=0 if h>i then _=1 end if a>(_==0 and i or h)then _=2 end if _==0 then local _=math.sqrt(i-h-a+1) local a=0.5/_ return 0.5*_,(c+b)*a,(e+d)*a,(f-g)*a elseif _==1 then local _=math.sqrt(h-a-i+1) local a=0.5/_ return(b+c)*a,0.5*_,(f+g)*a,(d-e)*a elseif _==2 then local _=math.sqrt(a-i-h+1) local a=0.5/_ return(d+e)*a,(g+f)*a,0.5*_,(c-b)*a end end end function QTCF(_,b,a,f,n,l,e)local c,d,m=f+f,n+n,l+l local i,k,j=e*c,e*d,e*m local g=f*c local h=f*d local f=f*m local e=n*d local c=n*m local d=l*m return CFrame.new(_,b,a,1-(e+d),h-j,f+k,h+j,1-(g+d),c-i,f-k,c+i,1-(g+e))end function QS(e,a,b)local _=e[1]*a[1]+e[2]*a[2]+e[3]*a[3]+e[4]*a[4] local d,c if _>=0.0001 then if(1-_)>0.0001 then local a=math.acos(_) local _=1/math.sin(a) d=math.sin((1-b)*a)*_ c=math.sin(b*a)*_ else d=1-b c=b end else if(1+_)>0.0001 then local a=math.acos(-_) local _=1/math.sin(a) d=math.sin((b-1)*a)*_ c=math.sin(b*a)*_ else d=b-1 c=b end end return e[1]*d+a[1]*c,e[2]*d+a[2]*c,e[3]*d+a[3]*c,e[4]*d+a[4]*c end function Clerp(_,b,i)local d={QFCF(_)} local c={QFCF(b)} local _,a,f=_.x,_.y,_.z local b,e,g=b.x,b.y,b.z local h=1-i return QTCF(h*_+i*b,h*a+i*e,h*f+i*g,QS(d,c,i))end local Y={} function Y.nub(b,a,_)return b:Lerp(a,_)end function Y.Clerp(a,b,_)return a:Lerp(b,_)end Qlerp=function(_,a,b)return _:Lerp(a,math.clamp(b,0,1))end ArtificialHB=Instance.new("BindableEvent",script) ArtificialHB.Name="Heartbeat" script:WaitForChild("Heartbeat") frame=1/60 tf=0 allowframeloss=false tossremainder=false lastframe=tick() script.Heartbeat:Fire() game:GetService("RunService").Heartbeat:Connect(function(a,_)tf=tf+a if tf>=frame then if allowframeloss then script.Heartbeat:Fire() lastframe=tick()else for _=1,math.floor(tf/frame)do script.Heartbeat:Fire()end lastframe=tick()end if tossremainder then tf=0 else tf=tf-frame*math.floor(tf/frame)end end end) function swait(_)if _==0 or _==nil then ArtificialHB.Event:Wait()else for _=0,_ do ArtificialHB.Event:Wait()end end end function Swait(_)if _==0 or _==nil then ArtificialHB.Event:Wait()else for _=0,_ do ArtificialHB.Event:Wait()end end end SWAIT=Swait local _=Instance.new("Sound") local N=game.Players.LocalPlayer.Character local K=K(K(K(N,"Starslayer Railgun","Accessory"),"Handle","BasePart"),"att1_Handle","Attachment") K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45) local _=1 function AttackGyro()local _=Instance.new("BodyGyro",R) _.D=25 _.P=20000 _.MaxTorque=Vector3.new(0,4000000,0) _.CFrame=CFrame.new(R.Position,h.Hit.p) coroutine.resume(coroutine.create(function()repeat if H then wait(math.huge)end swait() _.CFrame=CFrame.new(R.Position,h.Hit.p)until P==false _:Destroy()end))end coroutine.resume(coroutine.create(function()while not H do for _=0,1,(1/60)do swait() if not l then y.NeonParts.Color=Color3.fromHSV(_,1,1) if X.Value=="iNSaNiTY"then y.NeonParts.Color=Color3.fromHSV(math.random(0,19)/20,1,1)elseif X.Value=="Err0r"then y.NeonParts.Color=Color3.fromRGB(0,math.clamp(S.PlaybackLoudness-255,0,255),0)elseif X.Value=="Glitch"then y.NeonParts.Color=Color3.fromHSV(_,1,math.clamp((S.PlaybackLoudness/255)-.5,0,1))elseif X.Value=="Alastor"then y.NeonParts.Color=Color3.new(S.PlaybackLoudness/500,0,0)elseif X.Value=="kArmA"then y.NeonParts.Color=Color3.new(1,1,1)elseif X.Value=="petfroge"then y.NeonParts.Color=BrickColor.Random().Color end end end end end)) function attackone()P=true m=16 AttackGyro() for _=0,.5,.05 do swait() ja.C0=Clerp(ja.C0,da*CFrame.new(0+.5*math.cos(na/50),0,0-.5*math.sin(na/50))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(30)),.7/3) ma.C0=Clerp(ma.C0,v*CFrame.new()*CFrame.Angles(math.rad(15),math.rad(0),math.rad(-30)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(90),math.rad(0),math.rad(30))*w,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(30),math.rad(0),math.rad(0))*F,1/3) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.cos(na/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(na/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(na/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(na/41)),math.rad(0),math.rad(0)),.7/3)end for _=0,.5,.075 do swait() ja.C0=Clerp(ja.C0,da*CFrame.new(0+.5*math.cos(na/50),0,0-.5*math.sin(na/50))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(30)),.7/3) ma.C0=Clerp(ma.C0,v*CFrame.new()*CFrame.Angles(math.rad(10),math.rad(0),math.rad(-60)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(160),math.rad(-20),math.rad(60))*w,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(40),math.rad(5),math.rad(5))*F,1/3) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.cos(na/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(na/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(na/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(na/41)),math.rad(0),math.rad(0)),.7/3)end m=50 P=false end local d=false iyflyspeed=1 function sFLY()if not i then d=false else local e={F=0,B=0,L=0,R=0,Q=0,E=0} local b={F=0,B=0,L=0,R=0,Q=0,E=0} local a=0 local function _()d=true n=Instance.new('BodyGyro',R) o=Instance.new('BodyVelocity',R) n.MaxTorque=Vector3.new(math.huge,math.huge,math.huge) n.P=1e4 n.CFrame=R.CFrame o.Velocity=Vector3.new(0,0,0) o.MaxForce=Vector3.new(math.huge,math.huge,math.huge) coroutine.resume(coroutine.create(function()repeat if H then wait(math.huge)end game:GetService("RunService").RenderStepped:Wait() if not l then if e.L+e.R~=0 or e.F+e.B~=0 or e.Q+e.E~=0 then a=50 elseif not(e.L+e.R~=0 or e.F+e.B~=0 or e.Q+e.E~=0)and a~=0 then a=0 end if(e.L+e.R)~=0 or(e.F+e.B)~=0 or(e.Q+e.E)~=0 then o.Velocity=((workspace.CurrentCamera.CoordinateFrame.lookVector*(e.F+e.B))+((workspace.CurrentCamera.CoordinateFrame*CFrame.new(e.L+e.R,(e.F+e.B+e.Q+e.E)*0.2,0).Position)-workspace.CurrentCamera.CoordinateFrame.p))*a b={F=e.F,B=e.B,L=e.L,R=e.R}elseif(e.L+e.R)==0 and(e.F+e.B)==0 and(e.Q+e.E)==0 and a~=0 then o.Velocity=((workspace.CurrentCamera.CoordinateFrame.lookVector*(b.F+b.B))+((workspace.CurrentCamera.CoordinateFrame*CFrame.new(b.L+b.R,(b.F+b.B+e.Q+e.E)*0.2,0).Position)-workspace.CurrentCamera.CoordinateFrame.p))*a else o.Velocity=Vector3.new(0,0,0)end n.CFrame=workspace.CurrentCamera.CoordinateFrame end until not d e={F=0,B=0,L=0,R=0,Q=0,E=0} b={F=0,B=0,L=0,R=0,Q=0,E=0} a=0 if not l then for _,_ in pairs(R:GetChildren())do if _:IsA("BodyMover")then _:Destroy()end end R.CFrame=CFrame.new(R.Position)end end))end local a=c:GetMouse() a.KeyDown:connect(function(_)if H then wait(math.huge)end if _:lower()=='w'then e.F=iyflyspeed elseif _:lower()=='s'then e.B=-iyflyspeed elseif _:lower()=='a'then e.L=-iyflyspeed elseif _:lower()=='d'then e.R=iyflyspeed elseif _:lower()=='e'then e.Q=iyflyspeed*2 elseif _:lower()=='q'then e.E=-iyflyspeed*2 end end) a.KeyUp:connect(function(_)if H then wait(math.huge)end if _:lower()=='w'then e.F=0 elseif _:lower()=='s'then e.B=0 elseif _:lower()=='a'then e.L=0 elseif _:lower()=='d'then e.R=0 elseif _:lower()=='e'then e.Q=0 elseif _:lower()=='q'then e.E=0 end end) _()end end h.Button1Down:Connect(function()if H then wait(math.huge)end if not P and(X.Value~="Fave"and X.Value~="Smog"and X.Value~="corrupt"and X.Value~="MaddoxLCv3"and X.Value~="uwuman"and X.Value~="snakeskid"and X.Value~="Regele"and X.Value~="Uncolored"and X.Value~="Memer"and X.Value~="Sit"and X.Value~="Krump"and X.Value~="OOOOO"and X.Value~="nulled"and X.Value~="uwu")then attackone()end end) h.KeyDown:Connect(function(_)if H then wait(math.huge)end _=_:lower() if _=="m"then if ba.Value~="rbxassetid://3247404955"and ba.Value~="rbxassetid://9204489547"and ba.Value~="rbxassetid://9491494389"and ba.Value~="rbxassetid://9491642076"and ba.Value~="rbxassetid://9391448581"and ba.Value~="rbxassetid://1844218195"and ba.Value~="rbxassetid://278501300"and ba.Value~="rbxassetid://4921647660"and ba.Value~="rbxassetid://5015421167"and ba.Value~="rbxassetid://844654533"and ba.Value~="rbxassetid://6516420854"and ba.Value~="rbxassetid://1382488262"and ba.Value~="rbxassetid://170282324"and ba.Value~="rbxassetid://436219295"and ba.Value~="rbxassetid://436447939"and ba.Value~="rbxassetid://6338935488"and ba.Value~="rbxassetid://2728389795"and ba.Value~="rbxassetid://7576995029"and ba.Value~="rbxassetid://6941075541"and ba.Value~="rbxassetid://6049110238"and ba.Value~="rbxassetid://5805753966"and ba.Value~="rbxassetid://5310699007"and ba.Value~="rbxassetid://6323766331"and ba.Value~="rbxassetid://5368276808"and ba.Value~="rbxassetid://5177243035"and ba.Value~="rbxassetid://556122490"and ba.Value~="rbxassetid://6431602336"and ba.Value~="rbxassetid://5703266925"and ba.Value~="rbxassetid://5106599506"and ba.Value~="rbxassetid://6190635423"and ba.Value~="rbxassetid://4185475912"and ba.Value~="rbxassetid://5315171837"and ba~="rbxassetid://5089636816"and ba.Value~="rbxassetid://6768783121"and ba.Value~="rbxassetid://4835535512"and ba.Value~="rbxassetid://5089636816"and ba.Value~="rbxassetid://1280010741"and ba.Value~="rbxassetid://5355210927"and ba.Value~="rbxassetid://2581112923"and ba.Value~="rbxassetid://481104377"and ba.Value~="rbxassetid://2920078671"and ba.Value~="rbxassetid://2297862957"and ba.Value~="rbxassetid://1338971957"and ba.Value~="rbxassetid://5460732000"and ba.Value~="rbxassetid://4557673096"and ba.Value~="rbxassetid://348832364"and ba.Value~="rbxassetid://1143392568"then T:FireServer("None",3247404955)elseif ba.Value=="rbxassetid://3247404955"then T:FireServer("FurLC",6941075541)elseif ba.Value=="rbxassetid://6941075541"then T:FireServer("ILord",6049110238)elseif ba.Value=="rbxassetid://6049110238"then T:FireServer("uwuman",7576995029)elseif ba.Value=="rbxassetid://7576995029"then T:FireServer("snakeskid",6516420854)elseif ba.Value=="rbxassetid://6516420854"then T:FireServer("BloodWater",5015421167)elseif ba.Value=="rbxassetid://5015421167"then T:FireServer("upside_down",436447939)elseif ba.Value=="rbxassetid://436447939"then T:FireServer("floating_man",436219295)elseif ba.Value=="rbxassetid://436219295"then T:FireServer("Err0r",481104377)elseif ba.Value=="rbxassetid://481104377"then T:FireServer("CyberV1",170282324)elseif ba.Value=="rbxassetid://170282324"then T:FireServer("CyberV2",4921647660)elseif ba.Value=="rbxassetid://4921647660"then T:FireServer("Kicksher",278501300)elseif ba.Value=="rbxassetid://278501300"then T:FireServer("Uncolored",844654533)elseif ba.Value=="rbxassetid://844654533"then T:FireServer("Glitch",2297862957)elseif ba.Value=="rbxassetid://2297862957"then T:FireServer("Chill",1338971957)elseif ba.Value=="rbxassetid://1338971957"then T:FireServer("V1",2581112923)elseif ba.Value=="rbxassetid://2581112923"then T:FireServer("walking_man",5355210927)elseif ba.Value=="rbxassetid://5355210927"then T:FireServer("SpeedOfLight",1280010741)elseif ba.Value=="rbxassetid://1280010741"then T:FireServer("floating_man_x2",5089636816)elseif ba.Value=="rbxassetid://5089636816"then T:FireServer("hi",4835535512)elseif ba.Value=="rbxassetid://4835535512"then T:FireServer("Lord",4185475912)elseif ba.Value=="rbxassetid://4185475912"then T:FireServer("Regele",2728389795)elseif ba.Value=="rbxassetid://2728389795"then T:FireServer("friday",6190635423)elseif ba.Value=="rbxassetid://6190635423"then T:FireServer("MaddoxLC",6768783121)elseif ba.Value=="rbxassetid://6768783121"then T:FireServer("MaddoxLCv2",6338935488)elseif ba.Value=="rbxassetid://6338935488"then T:FireServer("MaddoxLCv3",1382488262)elseif ba.Value=="rbxassetid://1382488262"then T:FireServer("MaddoxLCv3_8",9491642076)elseif ba.Value=="rbxassetid://9491642076"then T:FireServer("MaddoxLCv3_9",9391448581)elseif ba.Value=="rbxassetid://9391448581"then T:FireServer("MaddoxLCv3_10",1844218195)elseif ba.Value=="rbxassetid://1844218195"then T:FireServer("MaddoxLCv3_11",9204489547)elseif ba.Value=="rbxassetid://9204489547"then T:FireServer("MaddoxLCv3_13",9491494389)elseif ba.Value=="rbxassetid://9491494389"then T:FireServer("HoneyLC",1143392568)elseif ba.Value=="rbxassetid://1143392568"then T:FireServer("SolidLC",348832364)elseif ba.Value=="rbxassetid://348832364"then T:FireServer("itseem",5106599506)elseif ba.Value=="rbxassetid://5106599506"then T:FireServer("uwu",5703266925)elseif ba.Value=="rbxassetid://5703266925"then T:FireServer("sis",6431602336)elseif ba.Value=="rbxassetid://6431602336"then T:FireServer("nebula",556122490)elseif ba.Value=="rbxassetid://556122490"then T:FireServer("purple",5177243035)elseif ba.Value=="rbxassetid://5177243035"then T:FireServer("addict",5368276808)elseif ba.Value=="rbxassetid://5368276808"then T:FireServer("omg",6323766331)elseif ba.Value=="rbxassetid://6323766331"then T:FireServer("hell",5310699007)elseif ba.Value=="rbxassetid://5310699007"then T:FireServer("corrupt",5805753966)elseif ba.Value=="rbxassetid://5805753966"then T:FireServer("None",3247404955)end elseif _=="y"then if X.Value~="Fave"then T:FireServer("Fave",290182215)else T:FireServer("None",3247404955)end elseif _=="r"then if X.Value~="Sit"then T:FireServer("Sit",5563485991)else T:FireServer("None",3247404955)end elseif _=="g"then if X.Value~="Memer"then T:FireServer("Memer",5599930438)else T:FireServer("None",3247404955)end elseif _=="t"then if X.Value~="Krump"then T:FireServer("Krump",1511734302)else T:FireServer("None",3247404955)end elseif _=="h"then if X.Value~="Smog"then T:FireServer("Smog",1511734302)else T:FireServer("None",3247404955)end elseif _=="p"then if X.Value~="nulled"then T:FireServer("nulled",1496130120)else T:FireServer("None",3247404955)end elseif _=="u"then if X.Value~="OOOOO"then T:FireServer("OOOOO",2681542649)else T:FireServer("None",3247404955)end elseif _=="f"then i=not i if u.Name==f then sFLY()end end end) coroutine.wrap(function()while not H do swait() if g<360 then g=g+2 else g=0 end end end)() J=Instance.new("Part") J.Name="antivoid" J.Size=Vector3.new(400,10,400) J.Anchored=true J.Transparency=1 J.Position=Vector3.new(R.Position.X,workspace.FallenPartsDestroyHeight+5,R.Position.Z) J.Parent=workspace coroutine.resume(coroutine.create(function()while not H do swait() if not l then if J:IsDescendantOf(workspace)then J.Position=Vector3.new(R.Position.X,workspace.FallenPartsDestroyHeight+5,R.Position.Z)else pcall(function()J:Destroy()end) J=Instance.new("Part") J.Name="antivoid" J.Size=Vector3.new(400,10,400) J.Anchored=true J.Transparency=1 J.Position=Vector3.new(R.Position.X,workspace.FallenPartsDestroyHeight+5,R.Position.Z) J.Parent=workspace end end end end)) W1=Instance.new("Weld",x) W1.Part0=x W1.Part1=p while not H do if not l then if not a then j.Value=S.TimePosition end _a.HipHeight=0 _a.Sit=false _a.DisplayName="​" _a.PlatformStand=i _a.UseJumpPower=true _a.JumpPower=50 _a.BreakJointsOnDeath=false _a.DisplayDistanceType="Viewer" _a.WalkSpeed=m _a:SetStateEnabled(Enum.HumanoidStateType.Dead,false) _a:SetStateEnabled(Enum.HumanoidStateType.Physics,false) _a:SetStateEnabled(Enum.HumanoidStateType.Swimming,false) _a:SetStateEnabled(Enum.HumanoidStateType.Flying,false) _a:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false) _a:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false) _a:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false) for _,_ in pairs(C:GetDescendants())do if _:IsA("BasePart")then if not _:IsDescendantOf(e)and _~=R then _.Anchored=false elseif _==R and u.Name==f then _.Anchored=false elseif _==R and u.Name~=f then _.Anchored=true end end end _a.MaxHealth=999 if _a.Health<999 then _a.Health=_a.Health+3 elseif _a.Health>999 then _a.Health=999 end for _,_ in pairs(C:GetChildren())do if _:IsA("BasePart")and _.Anchored==false and _.Position.Y<(workspace.FallenPartsDestroyHeight+50)then local a=Instance.new("BodyPosition") local _=Instance.new("BodyGyro") local b=math.huge a.MaxForce=Vector3.new(b,b,b) _.MaxTorque=Vector3.new(b,b,b) local b=nil for _,_ in pairs(workspace:GetDescendants())do if not _:IsDescendantOf(C)and _:IsA("SpawnLocation")then b=_ end end if b then R.CFrame=CFrame.new(b.Position.X,b.Position.Y+(b.Size.Y/2)+6,b.Position.Z)else local _=workspace:FindFirstChild("Base") if not _ then _=workspace:FindFirstChild("Baseplate")end if _ then R.CFrame=CFrame.new(math.clamp(R.Position.X,(-_.Size.X/2)+5,(_.Size.X/2)-5),_.Position.Y+(_.Size.Y/2)+6,math.clamp(R.Position.Z,(-_.Size.X/2)+5,(_.Size.X/2)-5))else R.CFrame=CFrame.new(math.clamp(R.Position.X,-100,100),30,math.clamp(R.Position.Z,-100,100))end end a.Position=R.Position a.Parent=R _.CFrame=R.CFrame _.Parent=R game:GetService("Debris"):AddItem(a,1) game:GetService("Debris"):AddItem(_,1)end end aa=(R.Velocity).Magnitude na=na+1 Q=Q+1 ga=ga+1 M=M+1 local _=25 if X.Value=="None"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,A*CFrame.new(.5*math.cos(M/50),0,-.5*math.sin(M/50))*CFrame.Angles(0,math.rad(2*math.cos(M/50)),0),.25) ma.C0=Clerp(ma.C0,z*CFrame.Angles(math.rad(20),math.rad(5*math.cos(M/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(135+8.5*math.cos(M/50)),0,math.rad(25))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(25+8.5*math.cos(M/50)),0,math.rad(-25-5*math.cos(M/25)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5+.1*math.cos(M/50),-.5)*CFrame.Angles(math.rad(-15+9*math.cos(M/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(M/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.05*math.sin(M/50),0)*CFrame.Angles(math.rad(-15-9*math.cos(M/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(M/41)),0,0),.25)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,A*CFrame.new(.5*math.cos(M/50),0,-.5*math.sin(M/50))*CFrame.Angles(math.rad(40),math.rad(2*math.cos(M/50)),0),.25) ma.C0=Clerp(ma.C0,z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(5*math.cos(M/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(5+2*math.cos(M/19)))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(M/19)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(M/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(M/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(M/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(M/41)),0,0),.25)end _a.HipHeight=3 K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="FurLC"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_/3.125 then W="Idle" _a.HipHeight=3 L+=1 ja.C0=Y.nub(ja.C0,da*CFrame.new(0+.5*math.cos(L/50),0,0-.5*math.sin(L/30))*CFrame.Angles(math.rad(2),math.rad(0),math.rad(0+2*math.cos(L/80))),.7/3) ma.C0=Y.nub(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),.7/3) ha.C0=Y.nub(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(135-10*math.cos(L/88)),math.rad(0+10*math.cos(L/77)),math.rad(20+10*math.cos(L/82)))*V,.7/3) ia.C0=Y.nub(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(4+5*math.cos(L/37)),math.rad(14.5+5*math.cos(L/47)),math.rad(-15.5+5*math.cos(L/40)))*U,.7/3) la.C0=Y.nub(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.cos(L/45)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(L/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Y.nub(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(L/45)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(L/41)),math.rad(0),math.rad(0)),.7/3)elseif aa>=_/3.125 then W="Walk" _a.HipHeight=3 L+=1 ja.C0=Y.nub(ja.C0,da*CFrame.new(0+.5*math.cos(L/50),0,0-.5*math.sin(L/30))*CFrame.Angles(math.rad(40),math.rad(0),math.rad(0+2*math.cos(L/80))),.7/3) ma.C0=Y.nub(ma.C0,Z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),.7/3) ha.C0=Y.nub(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(5+2*math.cos(L/19)))*V,.7/3) ia.C0=Y.nub(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(-5-2*math.cos(L/19)))*U,.7/3) la.C0=Y.nub(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(L/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(L/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Y.nub(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(L/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(L/41)),math.rad(0),math.rad(0)),.7/3)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="Chill"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3-.5*math.sin(na/9))*CFrame.Angles(math.rad(-20),math.rad(0),math.rad(0)),.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.05,0)*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.25,.5,-.1)*CFrame.Angles(math.rad(45),math.rad(-45),math.rad(0))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1,.75,.1)*CFrame.Angles(math.rad(-165),math.rad(0),math.rad(40))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-12.5),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(12.5),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3)elseif aa>=_ then ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3-.5*math.sin(na/9))*CFrame.Angles(math.rad(45),math.rad(0),math.rad(0)),.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.05,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,-.1)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(0))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(135),math.rad(0),math.rad(0))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+5*math.sin(na/9))),1/2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-5-5*math.sin(na/9))),1/2)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="Err0r"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3+.5*math.cos(na/15))*CFrame.Angles(math.rad(0),math.rad(-10*math.cos(na/30)),math.rad(0)),0.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(-15*math.cos(na/30)),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(135+-15*math.cos(na/30)),math.rad(0),math.rad(25+15*math.cos(na/30)))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(5),math.rad(5),math.rad(-10+15*math.cos(na/30)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(10+10*math.sin(na/15))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-10-10*math.sin(na/15))),1/3)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3+.5*math.cos(na/15))*CFrame.Angles(math.rad(40),math.rad(-5*math.cos(na/30)),math.rad(0)),0.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),0.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(5+2*math.cos(na/19)))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(-5-2*math.cos(na/19)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-20+9*math.cos(na/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(na/37)),math.rad(0),math.rad(0)),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(na/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(na/41)),math.rad(0),math.rad(0)),0.7/3)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="upside_down"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_ then W="Idle" ca+=1 _a.HipHeight=3 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*CFrame.new(0,0,.5*r(ca/15))*D(-45*.5,B(6*r(ca/15)),0),0.05) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*D(0,B(0+6*r(ca/30)),0),.25) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,CFrame.new(1.5,.5,0)*D(B(-180),B(-35),B(-45+0*r(ca/30)))*O.rico,.25) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,CFrame.new(-1.5,.5,0)*D(B(180),B(35),B(45+0*r(ca/30)))*O.leco,.25) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,CFrame.new(1,-1,-.01)*D(B(15),B(80),B(25+0*k(ca/15))),.25) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,CFrame.new(-1,-1,-.01)*D(0,B(-80),B(0-0*k(ca/15))),.25)elseif aa>=_ then W="Walk" ca+=1 _a.HipHeight=3 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*ea.cf(0,0,0-.5*ea.sin(ca/18))*ea.ang(ea.radt(28.947),ea.radt(0),ea.radt(0)),0.7/3) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*ea.cf(0,0,0)*ea.ang(ea.radt(-8),ea.radt(0),ea.radt(0)),.7/3) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,ea.cf(1,.5,-.25)*ea.ang(0,ea.radt(-10),ea.radt(-90))*O.rico,.25) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,ea.cf(-1.5,0.5,0)*ea.ang(ea.radt(-20),ea.radt(0),ea.radt(-10-10*ea.cosp(ca/18)))*O.leco,0.7/3) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,ea.cf(1,-1,-0.01)*ea.ang(ea.radt(-30),ea.radt(80),ea.radt(10+10*ea.cosp(ca/18))),1/3) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,ea.cf(-1,-1,-0.01)*ea.ang(ea.radt(-20),ea.radt(-80),ea.radt(-10-10*ea.cosp(ca/18))),1/3)end end elseif X.Value=="CyberV1"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_ then W="Idle" ca+=1 _a.HipHeight=3 ja.C0=Clerp(ja.C0,t*CFrame.new(0,0,0+0.25*math.cos(na/12))*CFrame.Angles(math.rad(4+2.5*math.sin(na/12)),math.rad(0),math.rad(0)),1/Animation_Speed) ma.C0=Clerp(ma.C0,v*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(15+4.5*math.sin(na/12)),math.rad(0),math.rad(0-4*math.sin(na/12))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CFrame.new(1,0.5+0.025*math.cos(na/12),-1)*CFrame.Angles(math.rad(0),math.rad(0-7.5*math.sin(na/12)),math.rad(-90+7.5*math.sin(na/12)))*w,1/Animation_Speed) ia.C0=Clerp(ia.C0,CFrame.new(-1,0+0.025*math.cos(na/12),-1)*CFrame.Angles(math.rad(25),math.rad(0+7.5*math.sin(na/12)),math.rad(90-7.5*math.sin(na/12)))*F,1/Animation_Speed) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-7.5*math.sin(na/12)),math.rad(75),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(na/12)),math.rad(0),math.rad(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(-7.5*math.sin(na/12)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(na/12)),math.rad(0),math.rad(0)),1/Animation_Speed)elseif aa>=_ then W="Walk" ca+=1 _a.HipHeight=3 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*ea.cf(0,0,0-.5*ea.sin(ca/18))*ea.ang(ea.radt(28.947),ea.radt(0),ea.radt(0)),0.7/3) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*ea.cf(0,0,0)*ea.ang(ea.radt(-8),ea.radt(0),ea.radt(0)),.7/3) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,ea.cf(1,.5,-.25)*ea.ang(0,ea.radt(-10),ea.radt(-90))*O.rico,.25) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,ea.cf(-1.5,0.5,0)*ea.ang(ea.radt(-20),ea.radt(0),ea.radt(-10-10*ea.cosp(ca/18)))*O.leco,0.7/3) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,ea.cf(1,-1,-0.01)*ea.ang(ea.radt(-30),ea.radt(80),ea.radt(10+10*ea.cosp(ca/18))),1/3) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,ea.cf(-1,-1,-0.01)*ea.ang(ea.radt(-20),ea.radt(-80),ea.radt(-10-10*ea.cosp(ca/18))),1/3)end K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="CyberV2"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" _a.HipHeight=3 ja.C0=Clerp(ja.C0,t*CFrame.new(0,0,0+0.25*math.cos(na/12))*CFrame.Angles(math.rad(4+2.5*math.sin(na/12)),math.rad(0),math.rad(0)),1/Animation_Speed) ma.C0=Clerp(ma.C0,v*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(15+4.5*math.sin(na/12)),math.rad(0),math.rad(0-4*math.sin(na/12))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(na/50)),math.rad(0),math.rad(0))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1,0+0.025*math.cos(na/12),-1)*CFrame.Angles(math.rad(25),math.rad(0+7.5*math.sin(na/12)),math.rad(90-7.5*math.sin(na/12)))*F,1/Animation_Speed) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-7.5*math.sin(na/12)),math.rad(75),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(na/12)),math.rad(0),math.rad(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(-7.5*math.sin(na/12)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(na/12)),math.rad(0),math.rad(0)),1/Animation_Speed)elseif aa>=_ then W="Walk" _a.HipHeight=3 ja.C0=Clerp(ja.C0,t*CFrame.new(0,0,0+0.25*math.cos(na/12))*CFrame.Angles(math.rad(15+2.5*math.sin(na/12)),math.rad(0),math.rad(2.5+2.5*math.sin(na/12))),1/Animation_Speed) ma.C0=Clerp(ma.C0,v*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-10+4.5*math.sin(na/12)),math.rad(0),math.rad(-2.5-2.5*math.sin(na/12))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(na/50)),math.rad(0),math.rad(0))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1,0+0.025*math.cos(na/12),-1)*CFrame.Angles(math.rad(25),math.rad(0+7.5*math.sin(na/12)),math.rad(90-7.5*math.sin(na/12)))*F,1/Animation_Speed) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-25-2.5*math.sin(na/12)),math.rad(75),math.rad(0))*CFrame.Angles(math.rad(-8-5.5*math.sin(na/12)),math.rad(0),math.rad(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(-2.5*math.sin(na/12)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(na/12)),math.rad(0),math.rad(0)),1/Animation_Speed)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="BloodWater"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" _a.HipHeight=3 ma.C0=Clerp(ma.C0,Z*CF(0,0,0)*ANGLES(RAD(7+6.5*SIN(Q/24)),RAD(10*SIN(Q/24)),RAD(6*SIN(Q/24))),0.5/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(120+6.5*SIN(Q/34)),RAD(5*SIN(Q/34)),RAD(10*SIN(Q/34)))*ANGLES(RAD(5),RAD(0),RAD(0))*V,0.5/Animation_Speed) ja.C0=Clerp(ja.C0,da*CF(0,0,1.5+0.5*COS(Q/32))*ANGLES(RAD(0),RAD(0),RAD(10)),0.4/Animation_Speed) ia.C0=Clerp(ia.C0,CF(-1.5,0.5,0)*ANGLES(RAD(1),RAD(0),RAD(22))*U,0.4/Animation_Speed) la.C0=Clerp(la.C0,CF(1,-0.4,-0.5)*ANGLES(RAD(0+6.5*SIN(Q/12)),RAD(90),RAD(40*SIN(Q/34)))*ANGLES(RAD(-3),RAD(0-1*COS(Q/36)),RAD(-10-2*COS(Q/39))),0.2) ka.C0=Clerp(ka.C0,CF(-1,-1,0)*ANGLES(RAD(10+4.6*SIN(Q/12)),RAD(-90),RAD(20*SIN(Q/34)))*ANGLES(RAD(-3),RAD(0-1*COS(Q/36)),RAD(10+6*COS(Q/31))),0.2)elseif aa>=_ then W="Walk" _a.HipHeight=3 ja.C0=Clerp(ja.C0,da*CF(0,0,-0.1)*ANGLES(RAD(5),RAD(0),RAD(0)),0.15/Animation_Speed) ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(MRANDOM(-15,25)-2.5*SIN(Q/12)),RAD(MRANDOM(-15,25)),RAD(MRANDOM(-15,25))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.55,0.5,0.5)*ANGLES(RAD(250),RAD(20),RAD(-80))*V,1/Animation_Speed) ia.C0=Clerp(ia.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-35*COS(Q/WALKSPEEDVALUE)),RAD(0),RAD(-5))*U,0.35/Animation_Speed) la.C0=Clerp(la.C0,CF(1,-1-0.15*COS(Q/WALKSPEEDVALUE*2),-0.2+0.2*COS(Q/WALKSPEEDVALUE))*ANGLES(RAD(0),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(-15)),2/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-0.15*COS(Q/WALKSPEEDVALUE*2),-0.2+-0.2*COS(Q/WALKSPEEDVALUE))*ANGLES(RAD(0),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(15)),2/Animation_Speed)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="Kicksher"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,da*CF(0,0,4+0.6*COS(Q/12))*ANGLES(RAD(-10),RAD(5),RAD(0)),0.6/Animation_Speed) ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(20-2.5*SIN(Q/12)),RAD(-5),RAD(0)),0.5/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(20),RAD(-20),RAD(30))*V,0.15/Animation_Speed) ia.C0=Clerp(ia.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-20),RAD(20),RAD(-30))*U,0.15/Animation_Speed) la.C0=Clerp(la.C0,CF(1,-0.8,-0.01)*ANGLES(RAD(0),RAD(90),RAD(25+10*COS(Q/12)))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-0.8,-0.01)*ANGLES(RAD(0),RAD(-90),RAD(-10-10*COS(Q/12)))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,da*CF(0,0,4+0.6*COS(Q/12))*ANGLES(RAD(20),RAD(0),RAD(0)),0.6/Animation_Speed) ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(-20-2.5*SIN(Q/12)),RAD(0),RAD(0)),0.5/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(-20),RAD(0),RAD(30))*V,0.15/Animation_Speed) ia.C0=Clerp(ia.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-20),RAD(0),RAD(-30))*U,0.15/Animation_Speed) la.C0=Clerp(la.C0,CF(1,-0.8,-0.01)*ANGLES(RAD(0),RAD(90),RAD(-25+10*COS(Q/12)))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-0.8,-0.01)*ANGLES(RAD(0),RAD(-90),RAD(20-10*COS(Q/12)))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed)end end elseif X.Value=="Uncolored"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" snap=math.random(1,3) if snap==1 then ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*angles(math.rad(math.random(-10000,10000)),math.rad(math.random(-10000,10000)),math.rad(math.random(-10000,10000))),1/Animation_Speed)end ja.C0=Clerp(ja.C0,da*CF(0,0,2+.5*COS(Q/32))*ANGLES(RAD(-25+2*Cos(na/42)),RAD(0),RAD(0)),1/Animation_Speed) ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(-2.5+1*COS(Q/12)),RAD(MRANDOM(-5,5)),RAD(0)),1/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(-30),RAD(0),RAD(15-5.5*COS(Q/20)))*V,1/Animation_Speed) ia.C0=Clerp(ia.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-30),RAD(0),RAD(-15+5.5*COS(Q/20)))*U,1/Animation_Speed) la.C0=Clerp(la.C0,CF(1,-1,-0.2)*ANGLES(RAD(-30+2*Cos(na/32)),RAD(80),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1,-0.2)*ANGLES(RAD(-30+2*Cos(na/46)),RAD(-80),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,da*CF(0-.25*Cos(na/63)+.92*Sin(na/95),0,4-2*SIN(Q/53))*ANGLES(RAD(70),RAD(0-R.RotVelocity.y),RAD(0-R.RotVelocity.Y*4.5+3*COS(Q/47))),0.15/Animation_Speed) ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(15-2.5*SIN(Q/12)),RAD(0),RAD(0)),0.15/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(12-4.10*SIN(Q/12)))*V,0.15/Animation_Speed) ia.C0=Clerp(ia.C0,CF(-.75,0.5,0.5)*ANGLES(RAD(-25+math.random(-23,23)),RAD(0+math.random(-23,23)),RAD(45+math.random(-23,23)))*U,0.15/Animation_Speed) la.C0=Clerp(la.C0,CF(1,-.5-0.02*SIN(Q/12),-0.5)*ANGLES(RAD(-10-2.5*SIN(Q/21)),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-0.02*SIN(Q/12),-0.01)*ANGLES(RAD(-20-2.5*SIN(Q/51)),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed)end K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="floating_man"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_ then W="Idle" ca+=1 _a.HipHeight=3 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*CFrame.new(0+.5*r(ca/18),0,3-.5*k(ca/18))*D(ea.ra(0),ea.ra(0),ea.ra(0)),0.7/3) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*D(ea.ra(5*r(ca/18)),0,0),.25) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,CFrame.new(1.5,0.5,0)*D(ea.ra(00),ea.ra(0),ea.ra(10+10*k(ca/18)))*O.rico,0.7/3) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,CFrame.new(-1.5,0.5,0)*D(ea.ra(0),ea.ra(0),ea.ra(-10-10*k(ca/18)))*O.leco,0.7/3) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,CFrame.new(1,-0.5,-0.6)*D(ea.ra(0),ea.ra(90),ea.ra(0))*D(ea.ra(1.5),ea.ra(0),ea.ra(-20-5*r(ca/34))),.2/3) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,CFrame.new(-1,-1,0)*D(ea.ra(0),ea.ra(-90),ea.ra(0))*D(ea.ra(1),ea.ra(0),ea.ra(20+2*r(ca/38))),.2/3)elseif aa>=_ then W="Walk" ca+=1 _a.HipHeight=3 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*ea.cf(0,0,0-.5*ea.sin(ca/18))*ea.ang(ea.radt(28.947),ea.radt(0),ea.radt(0)),0.7/3) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*ea.cf(0,0,0)*ea.ang(ea.radt(-8),ea.radt(0),ea.radt(0)),.7/3) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,ea.cf(1.5,0.5,0)*ea.ang(ea.radt(-20),ea.radt(0),ea.radt(10+10*ea.cosp(ca/18)))*O.rico,0.7/3) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,ea.cf(-1.5,0.5,0)*ea.ang(ea.radt(-20),ea.radt(0),ea.radt(-10-10*ea.cosp(ca/18)))*O.leco,0.7/3) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,ea.cf(1,-1,-0.01)*ea.ang(ea.radt(-30),ea.radt(80),ea.radt(10+10*ea.cosp(ca/18))),1/3) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,ea.cf(-1,-1,-0.01)*ea.ang(ea.radt(-20),ea.radt(-80),ea.radt(-10-10*ea.cosp(ca/18))),1/3)end K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="Alastor"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3-.5*math.sin(na/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(na/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45+8.5*math.cos(na/50)),math.rad(0),math.rad(45-5*math.cos(na/25)))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-15+9*math.cos(na/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(na/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(na/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(na/41)),math.rad(0),math.rad(0)),.7/3)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,da*CFrame.new(0+.5*math.cos(na/50),0,3-.5*math.sin(na/50))*CFrame.Angles(math.rad(45),math.rad(0),math.rad(0)),.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(na/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(90-4*math.sin(na/25)),math.rad(5+2*math.sin(na/25+math.random(-0.25,3))),math.rad(-2+5*math.sin(na/25)))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(na/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(na/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(na/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(na/41)),math.rad(0),math.rad(0)),.7/3)end end elseif X.Value=="Glitch"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3+.5*math.cos(na/9))*CFrame.Angles(math.rad(-2.5*math.sin(na/9)),math.rad(0),math.rad(0)),1/2) ma.C0=Clerp(ma.C0,Z*CFrame.new()*CFrame.Angles(math.rad(10-10*math.sin(na/9)),math.rad(0),math.rad(0)),1/2) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+.25*math.sin(na/9),0)*CFrame.Angles(math.rad(135+5*math.sin(na/9)),math.rad(0),math.rad(25))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+.25*math.sin(na/9),0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-10+10*math.cos(na/9)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+5*math.sin(na/9))),1/2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-5-5*math.sin(na/9))),1/2)elseif aa>=_ then ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3+.5*math.cos(na/9))*CFrame.Angles(math.rad(20-2.5*math.sin(na/9)),math.rad(0),math.rad(0)),1/2) ma.C0=Clerp(ma.C0,Z*CFrame.new()*CFrame.Angles(math.rad(-10-10*math.sin(na/9)),math.rad(0),math.rad(0)),1/2) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+.25*math.sin(na/9),0)*CFrame.Angles(math.rad(-50+5*math.sin(na/9)),math.rad(0),math.rad(0))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+.25*math.sin(na/9),0)*CFrame.Angles(math.rad(110),math.rad(0),math.rad(0))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+5*math.sin(na/9))),1/2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-5-5*math.sin(na/9))),1/2)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="SolidLC"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_ then W="Idle" if q then ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(20),math.rad(10*math.sin(na/100)),0),1) q=false else ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(20),math.rad(10*math.sin(na/100)),0),.25)end if math.random(1,60)==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.cos(na/100))+math.random(-20,20)),math.rad(math.random(-20,20))),1)end ja.C0=Clerp(ja.C0,da*CFrame.new(0+.5*math.cos(na/50),0,3-.5*math.sin(na/50))*CFrame.Angles(math.rad(-25+5*math.sin(na/50)),0,0),.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(30+5*math.sin(na/50)),math.rad(0),math.rad(0)),0.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20+8.5*math.cos(na/50)),math.rad(0),math.rad(-25-5*math.cos(na/25)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-5+9*math.cos(na/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(na/37)),math.rad(0),math.rad(0)),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(13-9*math.cos(na/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(na/41)),math.rad(0),math.rad(0)),0.7/3)elseif aa>=_ then K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45) if q then ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(20),math.rad(10*math.sin(na/100)),0),1) q=false else ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(20),math.rad(10*math.sin(na/100)),0),.25)end if math.random(1,60)==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.cos(na/100))+math.random(-20,20)),math.rad(math.random(-20,20))),1)end ja.C0=Clerp(ja.C0,da*CFrame.new(0+.5*math.cos(na/50),0,3-.5*math.sin(na/50))*CFrame.Angles(math.rad(40),0,0),.25) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(na/19)))*U,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(na/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(na/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(na/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(na/41)),0,0),.25)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-55)end elseif X.Value=="HoneyLC"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_/3.125 then W="Idle" _a.HipHeight=0 la.C0=Clerp(la.C0,CFrame.new(1,0.2-0.1*math.cos(na/20),-0.3)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(3),math.rad(15-2*math.cos(na/56)),math.rad(50-2*math.cos(na/32))),.1) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-0.1*math.cos(na/20),0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(3),math.rad(-1-2*math.cos(na/56)),math.rad(20+2*math.cos(na/32))),.1) ja.C0=Clerp(ja.C0,da*CFrame.new(0,-0+0.03*math.cos(na/32),-1.2+0.1*math.cos(na/20))*CFrame.Angles(math.rad(45-2*math.cos(na/32)),math.rad(0),math.rad(-30+2*math.cos(na/56))),.1) ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(23-2*math.cos(na/37)),math.rad(0+5*math.cos(na/43)-5*math.cos(na/0.25)),math.rad(22-2*math.cos(na/56))),.1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.025*math.cos(na/45),0)*CFrame.Angles(math.rad(5+3*math.cos(na/43)),math.rad(-14-5*math.cos(na/52)),math.rad(63+9*math.cos(na/45))),.1) ia.C0=Clerp(ia.C0,CFrame.new(-1.35,1+0.025*math.cos(na/45),-0.2)*CFrame.Angles(math.rad(148-2*math.cos(na/51)),math.rad(0-4*math.cos(na/64)),math.rad(22-2*math.cos(na/45))),.1)elseif aa>=_/3.125 then W="Walk" _a.HipHeight=0 ja.C0=Clerp(ja.C0,da*CFrame.new(0-0.15*math.cos(na/47),-0.5,0.5+0.1*math.cos(na/28))*CFrame.Angles(math.rad(70),math.rad(0-R.RotVelocity.Y),math.rad(0-R.RotVelocity.Y*4.5+3*math.cos(na/47))),.2/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(na/52)),math.rad(0-3*math.cos(na/37)),math.rad(0+2*math.cos(na/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(na/59)),math.rad(-20+7*math.cos(na/62)),math.rad(20+5*math.cos(na/50)))*V,.2/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.1*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(na/55)),math.rad(20+8*math.cos(na/67)),math.rad(-20-4*math.cos(na/29)))*U,.2/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(na/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(na/38))),.2/3)end end elseif X.Value=="itseem"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" _a.HipHeight=1.5 local _=math.random(1,60) local a=false if _==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0-.5*math.sin(na/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(na/12),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(na/12)),math.rad(0),math.rad(5))*w,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5+0.1*math.cos(na/12),-0)*CFrame.Angles(math.rad(15-1.5*math.cos(na/12)),math.rad(0-6*math.cos(na/12)),math.rad(0-6*math.cos(na/12)))*F,1/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.sin(na/50))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.sin(na/50))),1/3)elseif aa>=_ then W="Walk" _a.HipHeight=1.5 local _=math.random(1,60) local a=false if _==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0-.5*math.sin(na/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(na/12),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(na/12)),math.rad(0),math.rad(5))*w,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5+0.1*math.cos(na/12),-0)*CFrame.Angles(math.rad(15-1.5*math.cos(na/12)),math.rad(0-6*math.cos(na/12)),math.rad(0-6*math.cos(na/12)))*F,1/3) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(na/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(na/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(na/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(na/41)),math.rad(0),math.rad(0)),.7/3)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-55)end elseif X.Value=="uwu"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_/3.125 then W="Idle" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-.5*math.sin(na/25))*CFrame.Angles(math.rad(-90+5*math.cos(na/25)),math.rad(0),math.rad(0)),.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.1,0)*CFrame.Angles(math.rad(25+5*math.cos(na/25)),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1,.75,.1)*CFrame.Angles(math.rad(-165.1-5*math.cos(na/25)),math.rad(0),math.rad(-40))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1,.75,.1)*CFrame.Angles(math.rad(-165-5*math.cos(na/25)),math.rad(0),math.rad(40))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0+10*math.cos(na/25)),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(25+10*math.cos(na/25)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3)elseif aa>=_/3.125 then W="Walk" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-.5*math.sin(na/25))*CFrame.Angles(math.rad(-90+5*math.cos(na/25)),math.rad(0),math.rad(0)),.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.1,0)*CFrame.Angles(math.rad(25+5*math.cos(na/25)),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1,.75,.1)*CFrame.Angles(math.rad(-165.1-5*math.cos(na/25)),math.rad(0),math.rad(-40))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1,.75,.1)*CFrame.Angles(math.rad(-165-5*math.cos(na/25)),math.rad(0),math.rad(40))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0+10*math.cos(na/25)),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(25+10*math.cos(na/25)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3)end K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="nebula"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_/3.125 then W="Idle" _a.HipHeight=1.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0-.5*math.sin(na/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(140+5*math.cos(Q/32)),math.rad(0),math.rad(0))*V,0.8/10) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5))*U,0.8/10) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(80+10*math.sin(na/78)),math.rad(0))*CFrame.Angles(math.rad(-3+1*math.sin(na/58)),math.rad(0),math.rad(2.5+8*math.sin(na/43))),0.8) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(0),math.rad(-80-10*math.sin(na/81)),math.rad(0))*CFrame.Angles(math.rad(-3+1*math.sin(na/63)),math.rad(0),math.rad(0+15*math.sin(na/49))),0.8)elseif aa>=_/3.125 then W="Walk" _a.HipHeight=1.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0-0.15*math.cos(na/47),-0.5,0.5+0.1*math.cos(na/28))*CFrame.Angles(math.rad(70),math.rad(0-R.RotVelocity.Y),math.rad(0-R.RotVelocity.Y*4.5+3*math.cos(na/47))),.2/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(na/52)),math.rad(0-3*math.cos(na/37)),math.rad(0+2*math.cos(na/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(na/59)),math.rad(-20+7*math.cos(na/62)),math.rad(20+5*math.cos(na/50)))*V,.2/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.1*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(na/55)),math.rad(20+8*math.cos(na/67)),math.rad(-20-4*math.cos(na/29)))*U,.2/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(na/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(na/38))),.2/3)end end elseif X.Value=="purple"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then if math.random(1,32+S.PlaybackLoudness/7)==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(math.random(-100000-S.PlaybackLoudness/7,100000+S.PlaybackLoudness/7)),math.rad(math.random(-99999-S.PlaybackLoudness/7,99999+S.PlaybackLoudness/7)),math.rad(math.random(-200-S.PlaybackLoudness/7,48375935+S.PlaybackLoudness/7))),1/2)end if math.random(1,20+S.PlaybackLoudness/7)==1 then ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.sin(na/12),0)*CFrame.Angles(math.rad(math.random(-90-S.PlaybackLoudness/7,90+S.PlaybackLoudness/7)),math.rad(math.random(-30-S.PlaybackLoudness/7,30+S.PlaybackLoudness/7)),math.rad(math.random(-50-S.PlaybackLoudness/7,50+S.PlaybackLoudness/7)))*V,1/2) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.05*math.sin(na/12),0)*CFrame.Angles(math.rad(math.random(-10000-S.PlaybackLoudness/7,10000+S.PlaybackLoudness/7)),math.rad(math.random(-900-S.PlaybackLoudness/7,900+S.PlaybackLoudness/7)),math.rad(math.random(-20-S.PlaybackLoudness/7,20+S.PlaybackLoudness/7)))*U,1/2)end _a.HipHeight=1.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,1.5+1*math.cos(na/39))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10)),0.8) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1/2) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(na/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(40+S.PlaybackLoudness/7.5),math.rad(0),math.rad(-10))*U,1) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(80+10*math.sin(na/78)),math.rad(0))*CFrame.Angles(math.rad(-3+1*math.sin(na/58)),math.rad(0),math.rad(2.5+8*math.sin(na/43))),0.8) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(0),math.rad(-80-10*math.sin(na/81)),math.rad(0))*CFrame.Angles(math.rad(-3+1*math.sin(na/63)),math.rad(0),math.rad(0+15*math.sin(na/49))),0.8)elseif aa>=_ then W="Walk" _a.HipHeight=1.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0-0.15*math.cos(na/47),-0.5,0.5+0.1*math.cos(na/28))*CFrame.Angles(math.rad(70),math.rad(0-R.RotVelocity.Y),math.rad(0-R.RotVelocity.Y*4.5+3*math.cos(na/47))),.2/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(na/52)),math.rad(0-3*math.cos(na/37)),math.rad(0+2*math.cos(na/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(na/59)),math.rad(-20+7*math.cos(na/62)),math.rad(20+5*math.cos(na/50)))*V,.2/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.1*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(na/55)),math.rad(20+8*math.cos(na/67)),math.rad(-20-4*math.cos(na/29)))*U,.2/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(na/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(na/38))),.2/3)end end elseif X.Value=="addict"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then if math.random(1,20+S.PlaybackLoudness/7)==1 then ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.sin(na/12),0)*CFrame.Angles(math.rad(math.random(-90-S.PlaybackLoudness/7,90+S.PlaybackLoudness/7)),math.rad(math.random(-30-S.PlaybackLoudness/7,30+S.PlaybackLoudness/7)),math.rad(math.random(-50-S.PlaybackLoudness/7,50+S.PlaybackLoudness/7)))*V,1/2) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.05*math.sin(na/12),0)*CFrame.Angles(math.rad(math.random(-10000-S.PlaybackLoudness/7,10000+S.PlaybackLoudness/7)),math.rad(math.random(-900-S.PlaybackLoudness/7,900+S.PlaybackLoudness/7)),math.rad(math.random(-20-S.PlaybackLoudness/7,20+S.PlaybackLoudness/7)))*U,1/2)end _a.HipHeight=1.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,1.5+1*math.cos(na/39))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10)),0.8) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(15-2.5*math.sin(Q/12)),math.rad(math.random(-25,25)),math.rad(0)),0.15) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.sin(na/12),0)*CFrame.Angles(math.rad(100+2*math.cos(na/12)),math.rad(0),math.rad(15+3*math.cos(na/12)-3*math.sin(na/12)))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0))*V,1/2) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(0),math.rad(math.random(-25,25)),math.rad(-12))*U,0.15) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-17+9.4*math.cos(na/26)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.5,-0.5)*CFrame.Angles(math.rad(-22+10.8*math.cos(na/32)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1)elseif aa>=_ then W="Walk" _a.HipHeight=1.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0-0.15*math.cos(na/47),-0.5,0.5+0.1*math.cos(na/28))*CFrame.Angles(math.rad(70),math.rad(0-R.RotVelocity.Y),math.rad(0-R.RotVelocity.Y*4.5+3*math.cos(na/47))),.2/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(na/52)),math.rad(0-3*math.cos(na/37)),math.rad(0+2*math.cos(na/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(na/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.1*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(na/55)),math.rad(20+8*math.cos(na/67)),math.rad(-20-4*math.cos(na/29)))*U,.2/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(na/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(na/38))),.2/3)end end elseif X.Value=="omg"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" _a.HipHeight=0 ja.C0=Clerp(ja.C0,da*CFrame.new(0,-0.1,-0.1+0.05*math.cos(na/12))*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),0.15/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(160),0,math.rad(15-5*math.sin(na/25)))*V,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.025*math.cos(na/12),0)*CFrame.Angles(math.rad(0),math.rad(0+7.5*math.sin(na/12)),math.rad(-12-7.5*math.sin(na/12)))*U,0.15/3) la.C0=Clerp(la.C0,CFrame.new(1,-1-0.05*math.cos(na/12),-0.01)*CFrame.Angles(math.rad(20),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),0.15/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-0.05*math.cos(na/12),-0.01)*CFrame.Angles(math.rad(5),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),0.15/3) ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(20),math.rad(-10-2.5*math.sin(na/10)),math.rad(20*math.cos(na/10))),1/3)elseif aa>=_ then _a.HipHeight=0 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-0.175+0.025*math.cos(na/3.5)+-math.sin(na/3.5)/7)*CFrame.Angles(math.rad(9-2.5*math.cos(na/3.5)),math.rad(0),math.rad(10*math.cos(na/7))),0.15) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(0+math.random(-15,15)),math.rad(0+math.random(-15,15)),math.rad(0+math.random(-15,15))),0.35/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.925-0.5*math.cos(na/7)/2,0.5*math.cos(na/7)/2)*CFrame.Angles(math.rad(-15-35*math.cos(na/7))+-math.sin(na/7)/2.5,math.rad(90-2*math.cos(na/7)),math.rad(0))*CFrame.Angles(math.rad(0+2.5*math.cos(na/7)),math.rad(0),math.rad(0)),0.3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.925+0.5*math.cos(na/7)/2,-0.5*math.cos(na/7)/2)*CFrame.Angles(math.rad(-15+35*math.cos(na/7))+math.sin(na/7)/2.5,math.rad(-90-2*math.cos(na/7)),math.rad(0))*CFrame.Angles(math.rad(0-2.5*math.cos(na/7)),math.rad(0),math.rad(0)),0.3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-60-5*math.cos(na/12)),math.rad(0-2.5*math.cos(na/12)),math.rad(5+2.5*math.cos(na/12)))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1,0.5+0.05*math.sin(na/30),0.025*math.cos(na/20))*CFrame.Angles(math.rad(-70)*math.cos(na/7),math.rad(-90),math.rad(-5)),0.1)end end elseif X.Value=="hell"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then _a.HipHeight=2.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3-.5*math.sin(na/50))*CFrame.Angles(math.rad(50+4*math.sin(na/100)),math.rad(0),math.rad(0)),0.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20),math.rad(10*math.cos(na/100)),math.rad(0)),1) if math.random(1,60)==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.cos(na/100))+math.random(-20,20)),math.rad(math.random(-20,20))),1)end ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(40.6-4*math.sin(na/50)),math.rad(0),math.rad(0))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(40),math.rad(0),math.rad(-10-10*math.sin(na/50)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(5+10*math.sin(na/45))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-5-10*math.sin(na/45))),1/3)elseif aa>=_ then W="Walk" _a.HipHeight=2.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0-0.15*math.cos(na/47),-0.5,0.5+0.1*math.cos(na/28))*CFrame.Angles(math.rad(70),math.rad(0-R.RotVelocity.Y),math.rad(0-R.RotVelocity.Y*4.5+3*math.cos(na/47))),.2/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(na/52)),math.rad(0-3*math.cos(na/37)),math.rad(0+2*math.cos(na/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(na/59)),math.rad(-20+7*math.cos(na/62)),math.rad(20+5*math.cos(na/50)))*V,.2/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.1*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(na/55)),math.rad(20+8*math.cos(na/67)),math.rad(-20-4*math.cos(na/29)))*U,.2/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(na/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(na/38))),.2/3)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="corrupt"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" _a.HipHeight=2 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,.5*math.cos(ga/50))*CFrame.Angles(math.rad(25),math.rad(2*math.cos(ga/50)),0),.25) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(15),math.rad(0),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(25),0,math.rad(5+2*math.cos(ga/50)))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(25),0,math.rad(-5-2*math.sin(ga/50)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(9*math.cos(ga/50)),math.rad(80),0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-5+9*math.sin(ga/50)),math.rad(-80),0),.25)elseif aa>=_ then W="Walk" _a.HipHeight=2 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,.5*math.cos(ga/50))*CFrame.Angles(math.rad(30),0,0),.25) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(-5),math.rad(0),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-15),0,math.rad(5+2*math.cos(ga/50)))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-15),0,math.rad(-5-2*math.sin(ga/50)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-10+9*math.cos(ga/50)),math.rad(80),0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15+9*math.sin(ga/50)),math.rad(-80),0),.25)end K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="sis"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_/3.125 then W="Idle" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3-.5*math.sin(na/50))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20),math.rad(10*math.cos(na/100)),math.rad(0)),1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-199-4*math.sin(na/50)),math.rad(0),math.rad(10))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(20),math.rad(0),math.rad(-10-10*math.sin(na/50)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.sin(na/50))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.sin(na/50))),1/3)elseif aa>=_/3.125 then W="Walk" ja.C0=Clerp(ja.C0,da*CFrame.new(0-0.15*math.cos(na/47),-0.5,0.5+0.1*math.cos(na/28))*CFrame.Angles(math.rad(70),math.rad(0-R.RotVelocity.Y),math.rad(0-R.RotVelocity.Y*4.5+3*math.cos(na/47))),.2/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(na/52)),math.rad(0-3*math.cos(na/37)),math.rad(0+2*math.cos(na/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(na/59)),math.rad(-20+7*math.cos(na/62)),math.rad(20+5*math.cos(na/50)))*V,.2/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5+0.1*math.cos(na/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(na/55)),math.rad(20+8*math.cos(na/67)),math.rad(-20-4*math.cos(na/29)))*U,.2/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(na/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(na/38))),.2/3)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="V1"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if W=="Walk"and aa>_/1.5 then ja.C1=Clerp(ja.C1,t*CFrame.new(0,0,0.1+0.05*math.cos(na/6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)-b.RotVelocity.Y/30),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,.95-.2*math.sin(na/12),-.15*math.sin(na/12))*CFrame.Angles(math.rad(-5),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-10+35*math.cos(na/12))),0.6/3) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,.95+.2*math.sin(na/12),.15*math.sin(na/12))*CFrame.Angles(math.rad(-5),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10+35*math.cos(na/12))),0.6/3)end if aa<_ then W="Idle" _a.HipHeight=0 _a.WalkSpeed=10 ja.C0=Clerp(ja.C0,t*CFrame.new(0,0,0+0.05*math.cos(na/12))*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),1/3) ma.C0=Clerp(ma.C0,v*CFrame.new()*CFrame.Angles(math.rad(-15-3*math.cos(na/12)),math.rad(5),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(na/12),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(na/12)),math.rad(0),math.rad(5))*w,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5+0.1*math.cos(na/12),-0)*CFrame.Angles(math.rad(15-1.5*math.cos(na/12)),math.rad(0-6*math.cos(na/12)),math.rad(0-6*math.cos(na/12)))*F,1/3) la.C0=Clerp(la.C0,CFrame.new(1,-1.1-0.05*math.cos(na/12),0)*CFrame.Angles(math.rad(15),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1.1-0.05*math.cos(na/12),0)*CFrame.Angles(math.rad(10),math.rad(-70),math.rad(0))*CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1/3)elseif aa>=_ then W="Walk" _a.HipHeight=0 _a.WalkSpeed=10 ja.C0=Clerp(ja.C0,t*CFrame.new(0,0,0+0.05*math.cos(na/12))*CFrame.Angles(math.rad(20),math.rad(0+2.5*math.cos(na/12)),math.rad(0-2.5*math.cos(na/12))),1/3) ma.C0=Clerp(ma.C0,v*CFrame.new()*CFrame.Angles(math.rad(-20-3*math.cos(na/12)),math.rad(0-2.5*math.cos(na/12)),math.rad(0-2.5*math.cos(na/12))),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-60-5*math.cos(na/12)),math.rad(0-2.5*math.cos(na/12)),math.rad(5+2.5*math.cos(na/12)))*w,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0-0.2*math.cos(na/12))*CFrame.Angles(math.rad(20-45*math.cos(na/12)),math.rad(0-10*math.cos(na/12)),math.rad(0+2.5*math.cos(na/12)))*F,1/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(85),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-85),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1/3)end end elseif X.Value=="SpeedOfLight"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then _a.HipHeight=1.5 W="Idle" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,math.cos(na/15))*CFrame.Angles(math.rad(20*math.sin(na/15)),0,0),.25) ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(10-5*math.cos(na/12)),math.rad(10*math.cos(na/12)),math.rad(5*math.cos(na/12))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(na/12),0)*CFrame.Angles(math.rad(-75+1.75*math.cos(na/12)),0,math.rad(5))*V,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1,0.5,-0.6)*CFrame.Angles(math.rad(165),math.rad(0),math.rad(50))*U,0.15/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.4,-0.5)*CFrame.Angles(math.rad(0+6.5*math.sin(na/12)),math.rad(90),math.rad(40*math.sin(na/34)))*CFrame.Angles(math.rad(-3),math.rad(0-1*math.cos(na/36)),math.rad(-10-2*math.cos(na/39))),0.2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(10+4.6*math.sin(na/12)),math.rad(-90),math.rad(20*math.sin(na/34)))*CFrame.Angles(math.rad(-3),math.rad(0-1*math.cos(na/36)),math.rad(10+6*math.cos(na/31))),0.2)elseif aa>=_ then _a.HipHeight=1.5 W="Walk" ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(10-2*math.sin(na/3)),math.rad(0),math.rad(0-5*math.sin(na/6))),0.8) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20),math.rad(0),math.rad(-12))*U,0.8) ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-0.1+0.15*math.sin(na/3))*CFrame.Angles(math.rad(15+3*math.sin(na/3)),math.rad(0),math.rad(0+5*math.sin(na/6))),0.8) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5+70*math.sin(na/6))),0.8) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(5+70*math.sin(na/6))),0.8)end end elseif X.Value=="MaddoxLC"then HipVal=3 change=1 _=25 ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if P==false then if aa<_ then W="Idle" _a.HipHeight=HipVal ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0-.5*math.sin(na/20))*CFrame.Angles(math.rad(-30.9-5*math.cos(na/20)),0,0),.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(35-2*math.cos(na/20)),math.rad(0),math.rad(0)),0.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(130),math.rad(0),math.rad(15))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20+8.5*math.cos(na/20)),math.rad(0),math.rad(-25-5*math.cos(na/20)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0+38*math.cos(na/20)),math.rad(80),math.rad(0))*CFrame.Angles(0,0,math.rad(15-25*math.cos(na/20))),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-30.9+38*math.cos(na/20)),math.rad(-80),math.rad(0))*CFrame.Angles(0,0,math.rad(-15+25*math.cos(na/20))),0.7/3)elseif aa>=_ then W="Walk" _a.HipHeight=HipVal ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0-.5*math.sin(na/20))*CFrame.Angles(math.rad(40-1*math.cos(na/20)),0,0),.25) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(na/19)))*U,.25) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-50+35*math.cos(na/20)),math.rad(80),math.rad(0))*CFrame.Angles(0,0,math.rad(15-25*math.cos(na/20))),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-35+35*math.cos(na/20)),math.rad(-80),math.rad(0))*CFrame.Angles(0,0,math.rad(-15+25*math.cos(na/20))),0.7/3)end end elseif X.Value=="MaddoxLCv2"then HipVal=3 change=1 _=25 ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if P==false then if aa<_ then W="Idle" _a.HipHeight=HipVal moving=false ca+=1 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*CFrame.new(0,0,0+.5*math.cos(ca/25))*CFrame.Angles(math.rad(0-1*math.cos(ca/54*1.2)),math.rad(0-2*math.cos(ca/54*1.5)),math.rad(-35)),1) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(0-3*math.cos(ca/54*1.2)),math.rad(0-4*math.cos(ca/54*1.5)),math.rad(35)),1) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(75+8.5*math.cos(ca/25)),math.rad(-20),math.rad(40))*O.rico,1) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(25+8.5*math.cos(ca/25)),math.rad(0),math.rad(-25-5*math.cos(ca/25)))*O.leco,1) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.sin(ca/25)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.sin(ca/25)),math.rad(0),math.rad(0)),1) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15+9*math.sin(ca/25)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.sin(ca/25)),math.rad(0),math.rad(0)),1)elseif aa>=_ then W="Walk" _a.HipHeight=HipVal moving=true ca+=1 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*CFrame.new(0,0,0+.5*math.cos(ca/25))*CFrame.Angles(math.rad(45),math.rad(0-2*math.cos(ca/54*1.5)),math.rad(-30)),1) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-45-3*math.cos(ca/54*1.2)),math.rad(0-4*math.cos(ca/54*1.5)),math.rad(30)),1) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(-2),math.rad(14))*O.rico,1) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,CFrame.new(-.5,.5,-.5)*CFrame.Angles(math.rad(89),math.rad(0),math.rad(89))*O.leco,1) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,CFrame.new(1,-.5,0)*CFrame.Angles(math.rad(-15+9*math.sin(ca/25)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.sin(ca/25)),math.rad(0),math.rad(0)),1) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,CFrame.new(-1,-1,-.7)*CFrame.Angles(math.rad(-15+9*math.sin(ca/25)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.sin(ca/25)),math.rad(0),math.rad(0)),1)end end elseif X.Value=="walking_man"then local b=0 ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then _a.HipHeight=0 _a.WalkSpeed=50 local _=math.random(1,60) local a=false if _==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0+0.05*math.cos(na/12))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-0)),1/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(20-2.5*math.sin(b/12)),math.rad(0),math.rad(30*math.cos(na/12))),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(20),math.rad(0),math.rad(-10-10*math.sin(b/50)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1-0.05*math.cos(na/12),-0.01)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-0.05*math.cos(na/12),-0.01)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),1/3)elseif aa>=_ then W="Walk" _a.HipHeight=0 _a.WalkSpeed=50 ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(10-2*math.sin(na/3)),math.rad(0),math.rad(0-5*math.sin(na/6))),0.8) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20),math.rad(0),math.rad(-12))*U,0.8) ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-0.1+0.15*math.sin(na/3))*CFrame.Angles(math.rad(15+3*math.sin(na/3)),math.rad(0),math.rad(0+5*math.sin(na/6))),0.8) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5+70*math.sin(na/6))),0.8) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(5+70*math.sin(na/6))),0.8)end end elseif X.Value=="floating_man_x2"then _a.HipHeight=1.5 ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_/3.125 then W="Idle" _a.HipHeight=1.5 ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(7+6.5*math.sin(na/24)),math.rad(10*math.sin(na/24)),math.rad(-55+0*math.sin(na/24))),0.5/3) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1/3) ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,1*math.cos(na/15))*CFrame.Angles(math.rad(-45*.5*math.sin(na/15)),0,0),.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(0-5.5*math.sin(na/12)),math.rad(5*math.sin(na/12)),math.rad(-22+4.4*math.sin(na/12)))*U,0.15) la.C0=Clerp(la.C0,CFrame.new(1,-0.4,-0.5)*CFrame.Angles(math.rad(0+6.5*math.sin(na/12)),math.rad(90),math.rad(40*math.sin(na/34)))*CFrame.Angles(math.rad(-3),math.rad(0-1*math.cos(na/36)),math.rad(-10-2*math.cos(na/39))),0.2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(10+4.6*math.sin(na/12)),math.rad(-90),math.rad(20*math.sin(na/34)))*CFrame.Angles(math.rad(-3),math.rad(0-1*math.cos(na/36)),math.rad(10+6*math.cos(na/31))),0.2)elseif aa>=_ then W="Walk" _a.HipHeight=1.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0-.5*math.sin(na/12))*CFrame.Angles(math.rad(40+1*math.cos(na/12)),0,0),.25) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(na/19)))*U,.25) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-5-9*math.cos(na/12)),math.rad(80),math.rad(0)),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-9-9*math.cos(na/12)),math.rad(-80),math.rad(0)),0.7/3)end end elseif X.Value=="hi"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then _a.HipHeight=1 if aa<_ then local _=false ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-.5*math.sin(na/12.5))*CFrame.Angles(math.rad(40),0,0),.25) if _ then ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(-25),math.rad(10*math.sin(na/25)),0),1) _=false else ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(-25),math.rad(10*math.sin(na/25)),0),.25)end ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(40),0,math.rad(-10-10*math.sin(na/25)))*U,.25) la.C0=Clerp(la.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10*math.sin(na/25))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10*math.sin(na/25))),.25)elseif aa>=_ then W="Walk" _a.HipHeight=1 local _=false ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-.5*math.sin(na/12.5))*CFrame.Angles(math.rad(40),0,0),.25) if _ then ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(-25),math.rad(10*math.sin(na/25)),0),1) _=false else ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(-25),math.rad(10*math.sin(na/25)),0),.25)end ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*V,1/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(90-4*math.sin(na/25)),math.rad(5+2*math.sin(na/25+math.random(-0.25,3))),math.rad(-2+5*math.sin(na/25)))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-30-4*math.sin(na/25-math.random(0.25,3))),math.rad(80),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-4*math.sin(na/25-math.random(-0.25,3))),math.rad(-80),math.rad(0)),.7/3)end end elseif X.Value=="Lord"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" _a.HipHeight=2 ja.C0=Clerp(ja.C0,da*CFrame.new(0,math.cos(na/25),-math.sin(na/25))*CFrame.Angles(math.rad(5*math.sin(na/25)),0,0),.25) ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(5*math.cos(na/25)),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(160),0,math.rad(15-5*math.sin(na/25)))*V,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-15+5*math.sin(na/25)))*U,.25) la.C0=Clerp(la.C0,CFrame.new(1,-1-.1*math.sin(na/25),-.01)*CFrame.Angles(0,math.rad(80),0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.5-.25*math.sin(na/25),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)elseif aa>=_ then _a.HipHeight=2 ja.C0=Clerp(ja.C0,da*CFrame.new(0,math.cos(na/25),-math.sin(na/25))*CFrame.Angles(math.rad(5*math.sin(na/25)),0,math.rad(70)),.25) ma.C0=Clerp(ma.C0,Z*CFrame.Angles(0,0,math.rad(-70))*CFrame.Angles(math.rad(5*math.cos(na/25)),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1,.5,-.25)*CFrame.Angles(0,math.rad(-10),math.rad(-90))*V,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-20+5*math.sin(na/25)))*U,.25) la.C0=Clerp(la.C0,CFrame.new(1,-1-.1*math.sin(na/25),-.01)*CFrame.Angles(0,math.rad(80),0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.5-.25*math.sin(na/25),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)end end elseif X.Value=="Regele"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" _a.HipHeight=3 ca+=1 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*CFrame.new(0,math.cos(ca/18),-math.sin(ca/18))*CFrame.Angles(math.rad(5*math.sin(ca/25)),0,0),.25) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*CFrame.Angles(math.rad(5*math.cos(ca/18)),0,0),.25) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(0,0,math.rad(15-5*math.sin(ca/18)))*O.rico,.25) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-15+5*math.sin(ca/18)))*O.leco,.25) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,CFrame.new(1,-1-.1*math.sin(ca/18),-.01)*CFrame.Angles(0,math.rad(80),0),.25) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,CFrame.new(-1,-.5-.25*math.sin(ca/18),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)elseif aa>=_ then _a.HipHeight=3 ca+=1 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*CFrame.new(0,math.cos(ca/18),-math.sin(ca/18))*CFrame.Angles(math.rad(5*math.sin(ca/18)),0,math.rad(70)),.25) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*CFrame.Angles(0,0,math.rad(-70))*CFrame.Angles(math.rad(5*math.cos(ca/18)),0,0),.25) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,CFrame.new(1,.5,-.25)*CFrame.Angles(0,math.rad(-10),math.rad(-90))*O.rico,.25) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-20+5*math.sin(ca/18)))*O.leco,.25) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,CFrame.new(1,-1-.1*math.sin(ca/18),-.01)*CFrame.Angles(0,math.rad(80),0),.25) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,CFrame.new(-1,-.5-.25*math.sin(ca/18),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)end K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="friday"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_/3.125 then W="Idle" _a.HipHeight=2.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0+.5*math.cos(na/4))*CFrame.Angles(math.rad(0),math.rad(-10*math.cos(na/13)),math.rad(0)),0.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(-15*math.cos(na/13)),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(135+-15*math.cos(na/13)),math.rad(0),math.rad(25+15*math.cos(na/13)))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(5),math.rad(5),math.rad(-10+15*math.cos(na/13)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(10+10*math.sin(na/4))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-10-10*math.sin(na/4))),1/3)elseif aa>=_/3.125 then W="Walk" _a.HipHeight=2.5 ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,0+.5*math.cos(na/15))*CFrame.Angles(math.rad(40),math.rad(-5*math.cos(na/30)),math.rad(0)),0.7/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),0.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(5+2*math.cos(na/19)))*V,0.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(-5-2*math.cos(na/19)))*U,0.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-20+9*math.cos(na/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(na/37)),math.rad(0),math.rad(0)),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(na/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(na/41)),math.rad(0),math.rad(0)),0.7/3)end K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="ILord"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then _a.HipHeight=2.3 W="Idle" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-.5*math.sin(na/25))*CFrame.Angles(math.rad(20),0,0),.25) if q then ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(20),math.rad(10*math.sin(na/50)),0),1) q=false else ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(20),math.rad(10*math.sin(na/50)),0),.25)end if math.random(1,60)==1 then ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.sin(na/50))+math.random(-20,20)),math.rad(math.random(-20,20))),1)end ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-10),0,0)*V,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(na/25)))*U,.25) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.cos(na/25))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.cos(na/25))),.25)elseif aa>=_ then _a.HipHeight=2.3 W="Walk" ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-.5*math.sin(na/25))*CFrame.Angles(math.rad(20),0,0),.25) if q then ma.C0=Clerp(ma.C0,Z,1) q=false else ma.C0=Clerp(ma.C0,Z,.25)end if math.random(1,60)==1 then ma.C0=Clerp(ma.C0,Z*CFrame.Angles(math.rad(math.random(-20,20)),math.rad(math.random(-20,20)),math.rad(math.random(-20,20))),1)end ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-10),0,0)*V,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(na/25)))*U,.25) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.cos(na/25))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.cos(na/25))),.25)end end elseif X.Value=="kArmA"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" local _=math.random(1,60) local a=false if _==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3-.5*math.sin(na/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(na/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(20),math.rad(5+2*math.sin(na/25+math.random(-0.25,3))),math.rad(-2+5*math.sin(na/25)))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-20-4*math.sin(na/25-math.random(0.25,3))),math.rad(80),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-10-4*math.sin(na/25-math.random(-0.25,3))),math.rad(-80),math.rad(0)),.7/3)elseif aa>=_ then W="Walk" local _=math.random(1,60) local a=false if _==1 then ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,3-.5*math.sin(na/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(25-math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(na/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*V,.7/3) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(90-4*math.sin(na/25)),math.rad(5+2*math.sin(na/25+math.random(-0.25,3))),math.rad(-2+5*math.sin(na/25)))*U,.7/3) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-30-4*math.sin(na/25-math.random(0.25,3))),math.rad(80),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-4*math.sin(na/25-math.random(-0.25,3))),math.rad(-80),math.rad(0)),.7/3)end end elseif X.Value=="uwuman"then ja.C1=Clerp(ja.C1,da*CFrame.new(0,0,0),0.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if P==false then if aa<_/3.125 then W="Idle" _a.HipHeight=3 ca+=1 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*CFrame.new(0,.25*math.cos(ca/16),.4*math.sin(ca/16))*CFrame.Angles(math.rad(10-2.5*math.cos(ca/16)),0,0),.1) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*CFrame.Angles(math.rad(16.5-1.5*math.cos(ca/16)),math.rad(2.5-5.5*math.cos(ca/16)),math.rad(-16.5*math.cos(ca/15+.4*math.cos(ca/20)))),.1) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,CFrame.new(1.45,.6+.05*math.sin(ca/16),0)*CFrame.Angles(math.rad(5+5*math.cos(ca/16)),math.rad(-5),math.rad(28+4*math.sin(ca/16)))*O.rico,.1) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,CFrame.new(-1.45,.6+.05*math.sin(ca/16),0)*CFrame.Angles(math.rad(5+5*math.cos(ca/16)),math.rad(5),math.rad(-28-4*math.sin(ca/16)))*O.leco,.1) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,CFrame.new(1,-.45+.1*math.sin(ca/16),-.4)*CFrame.Angles(math.rad(-21.5+10*math.sin(ca/16)),math.rad(65),math.rad(2.5)),.1) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,CFrame.new(-1,-.85+.1*math.sin(ca/16),-.1)*CFrame.Angles(math.rad(-11.5+5*math.sin(ca/16)),math.rad(-65),math.rad(-2.5)),.1)elseif aa>=_/3.125 then W="Walk" _a.HipHeight=3 ca+=1 local _=((R.Velocity*R.CFrame.RightVector).X+(R.Velocity*R.CFrame.RightVector).Z)/50 local a=((R.Velocity*R.CFrame.LookVector).X+(R.Velocity*R.CFrame.LookVector).Z)/50 fa.welds.rot.C0=Y.Clerp(fa.welds.rot.C0,O.roto*CFrame.new(0,0,.6*math.sin(ca/16)*_*a)*CFrame.new(_+(1.5*_)*math.sin(ca/16),a-a*math.cos(ca/16),-.185+.045*math.cos(ca/56))*CFrame.Angles(math.rad((-15*a*math.sin(ca/16))+(a*20)),math.rad(-_*50),math.rad(math.cos(ca/16))),.1) fa.welds.net.C0=Y.Clerp(fa.welds.net.C0,O.neco*CFrame.Angles(math.rad((25+20*a*math.sin(ca/16))+(-a)*18),math.rad(_*5),math.rad(-_*45-1)),.1) fa.welds.rt.C0=Y.Clerp(fa.welds.rt.C0,CFrame.new(1.45+.0*math.cos(ca/16),.5,0)*CFrame.Angles(math.rad((10*a*math.cos(ca/16))-a*25),math.rad(a*5),math.rad(18-(_*28)+a*-10*math.sin(ca/16)))*O.rico,.1) fa.welds.lt.C0=Y.Clerp(fa.welds.lt.C0,CFrame.new(-1.45+.0*math.cos(ca/16),.5,0)*CFrame.Angles(math.rad((10*a*math.cos(ca/16))-a*25),math.rad(-a*5),math.rad(-18-(_*28)+a*10*math.sin(ca/16)))*O.leco,.1) fa.welds.rh.C0=Y.Clerp(fa.welds.rh.C0,CFrame.new(1,-.8,-.15)*CFrame.Angles(math.rad(-20-(20*math.cos(ca/16))*a),math.rad(85),math.rad((5*a)-_*15)),.1) fa.welds.lh.C0=Y.Clerp(fa.welds.lh.C0,CFrame.new(-1,-.6,-.3)*CFrame.Angles(math.rad(-20-(20*math.cos(ca/16))*a),math.rad(-85),math.rad((-5*a)-_*15)),.1)end K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="MaddoxLCv3"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ja.C0=Qlerp(ja.C0,da*CFrame.new(0,-.08*math.sin(ga/60),-.1+.1*math.cos(ga/60))*CFrame.Angles(math.rad(5*math.sin(ga/60)),0,math.rad(-5)),.25) ma.C0=Qlerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(4+2*math.sin(ga/60)),0,math.rad(5)),.25) ha.C0=Qlerp(ha.C0,CFrame.new(1.5,0.5+.1*math.cos(ga/60),0)*CFrame.Angles(math.rad(-2*math.cos(ga/60)),0,math.rad(5*math.cos(ga/60)))*V,.25) ia.C0=Qlerp(ia.C0,CFrame.new(-1.5,0.5+.1*math.cos(ga/60),0)*CFrame.Angles(math.rad(-2*math.cos(ga/60)),0,math.rad(-5*math.cos(ga/60)))*U,.25) la.C0=Qlerp(la.C0,CFrame.new(1,-.9-.1*math.cos(ga/60),-0.01)*CFrame.Angles(0,math.rad(85),math.rad(5*math.sin(ga/60))),.25) ka.C0=Qlerp(ka.C0,CFrame.new(-1,-.9-.1*math.cos(ga/60),-0.01)*CFrame.Angles(0,math.rad(-85),math.rad(-5*math.sin(ga/60))),.25)elseif aa>=_ then W="Walk" K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ja.C0=Qlerp(ja.C0,da*CFrame.new(0,0,.055*math.sin(ga/5))*CFrame.Angles(math.rad(15),0,math.rad(5*math.sin(ga/10))),.25) ma.C0=Qlerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(-5),0,math.rad(-5*math.sin(ga/10))),.25) ha.C0=Qlerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(25*math.sin(ga/10)),0,math.rad(5))*V,.25) ia.C0=Qlerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-25*math.sin(ga/10)),0,math.rad(-5))*U,.25) la.C0=Qlerp(la.C0,CFrame.new(1,-.8-.25*math.cos(ga/10),-.35+.3*math.sin(ga/10))*CFrame.Angles(0,math.rad(90-5*math.sin(ga/10)),math.rad(-45*math.sin(ga/10))),.25) ka.C0=Qlerp(ka.C0,CFrame.new(-1,-.8+.25*math.cos(ga/10),-.35-.3*math.sin(ga/10))*CFrame.Angles(0,math.rad(-90-5*math.sin(ga/10)),math.rad(-45*math.sin(ga/10))),.25)end end elseif X.Value=="MaddoxLCv3_8"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,A*CFrame.new(0,0,.5*math.cos(ga/24))*CFrame.Angles(math.rad(-14*math.sin(ga/24)),0,0),.25) ma.C0=Clerp(ma.C0,z*CFrame.Angles(math.rad(3*math.cos(ga/24)),0,math.rad(5*math.sin(ga/48))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(135+15*math.sin(ga/24)),0,math.rad(26))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5+.3*math.cos(ga/24),0)*CFrame.Angles(math.rad(-14*math.sin(ga/24)),0,math.rad(-10+10*math.sin(ga/24)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+15*math.sin(ga/24))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(0,math.rad(-80),math.rad(-5-15*math.sin(ga/24))),.25)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,A*CFrame.new(0,0,.5*math.cos(ga/24))*CFrame.Angles(math.rad(45-5*math.sin(ga/24)),0,0),.25) ma.C0=Clerp(ma.C0,z*CFrame.Angles(math.rad(-45+3*math.sin(ga/24)),0,math.rad(5*math.sin(ga/48))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45-3*math.sin(ga/24)),0,0)*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45-3*math.sin(ga/24)),0,0)*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(-15)),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(0,math.rad(-80),math.rad(15)),.25)end _a.HipHeight=2 K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="MaddoxLCv3_9"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,A*CFrame.new(0,0,0.5*math.sin(ga/15))*CFrame.Angles(math.rad(-15*math.cos(ga/30)),math.rad(-15*math.cos(ga/30)),0),.25) ma.C0=Clerp(ma.C0,z*CFrame.Angles(math.rad(15*math.sin(ga/30)),0,math.rad(-15*math.sin(ga/30))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5-.125*math.sin(ga/30),0)*CFrame.Angles(math.rad(135+-15*math.cos(ga/30)),0,math.rad(25+15*math.cos(ga/30)))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5-.125*math.cos(ga/30),0)*CFrame.Angles(math.rad(15*math.cos(ga/30)),math.rad(5),math.rad(-10+15*math.cos(ga/30)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5+.25*math.sin(ga/30),-.5)*CFrame.Angles(math.rad(-15),math.rad(80),math.rad(15+15*math.sin(ga/30))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.25*math.cos(ga/30),0)*CFrame.Angles(0,math.rad(-80),math.rad(-10-10*math.sin(ga/30))),.25)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,A*CFrame.new(0,0,0.5*math.sin(ga/15))*CFrame.Angles(math.rad(45),math.rad(0-2*math.sin(ga/30)),0),.25) ma.C0=Clerp(ma.C0,z*CFrame.new(0,0,0+1-1)*CFrame.Angles(math.rad(-45+3*math.sin(ga/54*1.2)),math.rad(0-4*math.sin(ga/30)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(-2),0)*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(2),0)*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5+.1*math.cos(ga/15),-.5)*CFrame.Angles(math.rad(-15+9*math.cos(ga/15)),math.rad(80),0)*CFrame.Angles(0,0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.1*math.sin(ga/15),0)*CFrame.Angles(math.rad(-15+9*math.cos(ga/15)),math.rad(-80),0)*CFrame.Angles(0,0,0),.25)end _a.HipHeight=2 K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="MaddoxLCv3_10"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,A*CFrame.new(0,.5*math.sin(ga/50),.5*math.cos(ga/50))*CFrame.Angles(math.rad(15*math.cos(ga/50)),0,0),.25) ma.C0=Clerp(ma.C0,z*CFrame.Angles(math.rad(20-13*math.cos(ga/50)),math.rad(5*math.cos(ga/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(.6,.4,-.8)*CFrame.Angles(math.rad(-10+2*math.cos(ga/50)),0,math.rad(-90))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-.6,.4,-.7)*CFrame.Angles(math.rad(5*math.cos(ga/50)),0,math.rad(90))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5+.1*math.cos(ga/50),-.5)*CFrame.Angles(0,math.rad(80),0)*CFrame.Angles(0,0,math.rad(-3+15*math.sin(ga/50))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.9+.1*math.sin(ga/50),0)*CFrame.Angles(0,math.rad(-80),0)*CFrame.Angles(0,0,math.rad(-3-15*math.sin(ga/50))),.25)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,A*CFrame.new(0,0,.5*math.cos(ga/50))*CFrame.Angles(math.rad(56),math.rad(2*math.cos(ga/50)),0),.25) ma.C0=Clerp(ma.C0,z*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(5*math.cos(ga/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-16),0,math.rad(5+2*math.cos(ga/19)))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-16),0,math.rad(-5-2*math.cos(ga/19)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(ga/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(ga/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(ga/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(ga/41)),0,0),.25)end _a.HipHeight=2 K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="MaddoxLCv3_11"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,A*CFrame.new(0,0,.5*math.sin(ga/15))*CFrame.Angles(math.rad(7.5*math.cos(ga/15)),0,0),.25) ma.C0=Clerp(ma.C0,z*CFrame.Angles(math.rad(15+5*math.cos(ga/15)),math.rad(10*math.cos(ga/15*.5)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5-.25*math.cos(ga/15),0)*CFrame.Angles(0,0,math.rad(15-17*math.cos(ga/15)))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5-.25*math.cos(ga/15),0)*CFrame.Angles(0,0,math.rad(-15+17*math.cos(ga/15)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5+.1*math.cos(ga/15),-.5)*CFrame.Angles(math.rad(-15),math.rad(80),0)*CFrame.Angles(math.rad(-3+5*math.cos(ga/15)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.05*math.sin(ga/15),0)*CFrame.Angles(0,math.rad(-80),0)*CFrame.Angles(math.rad(-3+5*math.cos(ga/15)),0,0),.25)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,A*CFrame.new(0,0,.5*math.sin(ga/15))*CFrame.Angles(math.rad(56),0,0),.25) ma.C0=Clerp(ma.C0,z*CFrame.Angles(math.rad(-45+5*math.cos(ga/15)),math.rad(10*math.cos(ga/15*.5)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5-.125*math.cos(ga/15),0)*CFrame.Angles(math.rad(-16),0,math.rad(4-5*math.cos(ga/15)))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5-.125*math.cos(ga/15),0)*CFrame.Angles(math.rad(-16),0,math.rad(-4+5*math.cos(ga/15)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5+.1*math.cos(ga/15),-.5)*CFrame.Angles(math.rad(-15),math.rad(80),0)*CFrame.Angles(math.rad(-3+5*math.cos(ga/15)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.05*math.sin(ga/15),0)*CFrame.Angles(0,math.rad(-80),0)*CFrame.Angles(math.rad(-3+5*math.cos(ga/15)),0,0),.25)end _a.HipHeight=2 K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0)end elseif X.Value=="MaddoxLCv3_13"then ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,A*CFrame.new(0,-.25*math.sin(ga/18),1*math.cos(ga/18))*CFrame.Angles(math.rad(7.5*math.cos(ga/18)),math.rad(7.5*math.sin(ga/18*.5)),0),.25) ma.C0=Clerp(ma.C0,z*CFrame.Angles(math.rad(15+5*math.sin(ga/18)),math.rad(5*math.sin(ga/18*.5)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+.25*math.sin(ga/18),0)*CFrame.Angles(math.rad(170-1*math.sin(ga/18)),0,math.rad(0))*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,.5+.25*math.cos(ga/18),0)*CFrame.Angles(math.rad(-17*math.sin(ga/18)),0,math.rad(-15))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5-.1*math.cos(ga/18),-.5)*CFrame.Angles(math.rad(5-25*math.sin(ga/18)),math.rad(80),0)*CFrame.Angles(math.rad(-3),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-.05*math.sin(ga/18),0)*CFrame.Angles(math.rad(-25*math.sin(ga/18)),math.rad(-80),0)*CFrame.Angles(math.rad(-3),0,0),.25)elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,A*CFrame.new(0,0,1*math.cos(ga/18))*CFrame.Angles(math.rad(60),0,math.rad(0-2*math.sin(ga/18*.5))),.25) ma.C0=Clerp(ma.C0,z*CFrame.new(0,0,0+1-1)*CFrame.Angles(math.rad(-60+3*math.sin(ga/18*.5)),math.rad(0+4*math.sin(ga/18*.5)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-30),math.rad(-2),0)*G,.25) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-30),math.rad(2),math.rad(-5*math.sin(ga/18)))*E,.25) la.C0=Clerp(la.C0,CFrame.new(1,-.5,0)*CFrame.Angles(math.rad(-15-9*math.sin(ga/18)),math.rad(80),0)*CFrame.Angles(math.rad(0-5*math.sin(ga/18)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.5,-.5)*CFrame.Angles(math.rad(-15-9*math.sin(ga/18)),math.rad(-80),0)*CFrame.Angles(math.rad(0-5*math.sin(ga/18)),0,0),.25)end _a.HipHeight=2 K.Parent=N["Right Arm"] K.Position=Vector3.new(0,-1.5,-0.7) K.Orientation=Vector3.new(-0,90,-45)end elseif X.Value=="snakeskid"then K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ja.C1=Clerp(ja.C1,da,.2/3) ma.C1=Clerp(ma.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) la.C1=Clerp(la.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not P then if aa<_ then W="Idle" ja.C0=Clerp(ja.C0,da*CF(0,0,0+.15*SIN(na/32))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(40),RAD(-10),RAD(0)),0.15/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(10+5*SIN(na/24)))*V,0.15/Animation_Speed) ia.C0=Clerp(ia.C0,CF(-1.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(-10-5*SIN(na/24)))*U,0.15/Animation_Speed) la.C0=Clerp(la.C0,CF(1,-1-.15*SIN(na/32),0)*ANGLES(RAD(0),RAD(90),RAD(0))*ANGLES(RAD(-8+2.5*SIN(na/32)),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-.15*SIN(na/32),0)*ANGLES(RAD(0),RAD(-90),RAD(0))*ANGLES(RAD(-8+2.5*SIN(na/32)),RAD(0),RAD(0)),0.15/Animation_Speed) snap=math.random(1,72) if snap==1 then ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(MRANDOM(-100000-S.PlaybackLoudness/7,100000+S.PlaybackLoudness/7)),RAD(MRANDOM(-99999-S.PlaybackLoudness/7,99999+S.PlaybackLoudness/7)),RAD(MRANDOM(-200-S.PlaybackLoudness/7,48375935+S.PlaybackLoudness/7))),1/Animation_Speed)end elseif aa>=_ then W="Walk" ja.C0=Clerp(ja.C0,da*CF(0,0,-0.1)*ANGLES(RAD(5),RAD(0),RAD(0)),0.15/Animation_Speed) ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(MRANDOM(1,2)-2.5*SIN(Q/12)),RAD(MRANDOM(1,2)),RAD(MRANDOM(1,2))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(35*COS(Q/WALKSPEEDVALUE)),RAD(0),RAD(5))*V,0.35/Animation_Speed) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0-0.2*math.cos(na/12))*CFrame.Angles(math.rad(20+45*math.cos(na/12)),math.rad(0-10*math.cos(na/12)),math.rad(0+2.5*math.cos(na/12)))*F,1/3) la.C0=Clerp(la.C0,CF(1,-1-0.15*COS(Q/WALKSPEEDVALUE*2),-0.2+0.2*COS(Q/WALKSPEEDVALUE))*ANGLES(RAD(0),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(-15)),2/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-0.15*COS(Q/WALKSPEEDVALUE*2),-0.2+-0.2*COS(Q/WALKSPEEDVALUE))*ANGLES(RAD(0),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(15)),2/Animation_Speed)end end else if P==false then end if X.Value=="Fave"then K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ja.C0=Clerp(ja.C0,t*CFrame.new(0,0,0),1) ma.C0=Clerp(ma.C0,v*CFrame.new(),1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*w,1) ia.C0=Clerp(ia.C0,CFrame.new(-1.3,0.7,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-135))*F,1) la.C0=Clerp(la.C0,CFrame.new(.5,-2,0),1) ka.C0=Clerp(ka.C0,CFrame.new(-.9,-1.9,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-25)),1) la.C1=Clerp(la.C1,CFrame.new(),1) ka.C1=Clerp(ka.C1,CFrame.new(),1)end if X.Value=="Krump"then K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ja.C0=Clerp(ja.C0,t*CFrame.new(0+1*math.sin(na/3),0+1*math.cos(na/3),-.75)*CFrame.Angles(math.rad(0),math.rad(-10),math.rad(0)),1) ma.C0=Clerp(ma.C0,v*CFrame.new(),1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))*w,1) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-90))*F,1) la.C0=Clerp(la.C0,CFrame.new(1.5,-1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(70)),1) ka.C0=Clerp(ka.C0,CFrame.new(-.5,-1.25,-.25)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10)),1) la.C1=Clerp(la.C1,CFrame.new(),1) ka.C1=Clerp(ka.C1,CFrame.new(),1)elseif X.Value=="Memer"then K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ja.C0=Clerp(ja.C0,t*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(-9000,9000)),math.rad(math.random(-9000,9000)),math.rad(math.random(-9000,9000))),1) ma.C0=Clerp(ma.C0,v*CFrame.new()*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(90),math.rad(0),math.rad(90))*w,1) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(90),math.rad(0),math.rad(-90))*F,1) la.C0=Clerp(la.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) la.C1=Clerp(la.C1,CFrame.new()*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ka.C1=Clerp(ka.C1,CFrame.new()*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1)elseif X.Value=="Smog"then K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ia.C0=Clerp(ia.C0,CFrame.new(-1,0.5,0,0,0,-1,0,1,0,1,0,0)*CFrame.new(-0.699999988079071+-0.25*math.cos(ga/12.5),0.5+0.20000000298023224*math.cos(ga/6.25),0+0*math.cos(ga/12.5))*CFrame.Angles(math.rad(-25+-90*math.cos(ga/12.5)),math.rad(0+-25*math.cos(ga/12.5)),math.rad(-145+-35*math.cos(ga/12.5))),0.2) ja.C0=Clerp(ja.C0,CFrame.new(0,0,0,-1,0,0,0,0,1,0,1,-0)*CFrame.new(0+0*math.cos(ga/12.5),0+0*math.cos(ga/12.5),-0.5+-0.5*math.cos(ga/6.25))*CFrame.Angles(math.rad(0+0*math.cos(ga/12.5)),math.rad(0+-9*math.cos(ga/12.5)),math.rad(0+0*math.cos(ga/12.5))),0.2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0,0,0,-1,0,1,0,1,0,0)*CFrame.new(-0.5+0*math.cos(ga/12.5),0.5+0.5*math.cos(ga/6.25),0+0*math.cos(ga/12.5))*CFrame.Angles(math.rad(-9+15*math.cos(ga/12.5)),math.rad(15+0*math.cos(ga/6.25)),math.rad(9+0*math.cos(ga/12.5))),0.2) ha.C0=Clerp(ha.C0,CFrame.new(1,0.5,0,0,0,1,0,1,-0,-1,0,0)*CFrame.new(0.699999988079071+-0.25*math.cos(ga/12.5),0.5+0.20000000298023224*math.cos(ga/6.25),0+0*math.cos(ga/12.5))*CFrame.Angles(math.rad(-7.5+90*math.cos(ga/12.5)),math.rad(0+-25*math.cos(ga/12.5)),math.rad(145+-35*math.cos(ga/12.5))),0.2) la.C0=Clerp(la.C0,CFrame.new(1,-1,0,0,0,1,0,1,-0,-1,0,0)*CFrame.new(0.5+0*math.cos(ga/12.5),0.5+0.5*math.cos(ga/6.25),0+0*math.cos(ga/12.5))*CFrame.Angles(math.rad(-9+-15*math.cos(ga/12.5)),math.rad(-15+0*math.cos(ga/6.25)),math.rad(-9+0*math.cos(ga/12.5))),0.2) ma.C0=Clerp(ma.C0,CFrame.new(0,1,0,-1,0,0,0,0,1,0,1,-0)*CFrame.new(0+0*math.cos(ga/12.5),0+0*math.cos(ga/12.5),0+0*math.cos(ga/12.5))*CFrame.Angles(math.rad(-25+15*math.cos(ga/6.25)),math.rad(0+-25*math.cos(ga/12.5)),math.rad(0+0*math.cos(ga/12.5))),0.2)elseif X.Value=="Sit"then K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ja.C0=Clerp(ja.C0,da*CFrame.new(0,0,-1.70)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),0.5) ma.C0=Clerp(ma.C0,Z*CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.5) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.3,0.10)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0))*V,0.5) ia.C0=Clerp(ia.C0,CFrame.new(-1.5,0.3,0.10)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0))*U,0.15) la.C0=Clerp(la.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(45),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),0.5) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(45),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),0.5)elseif X.Value=="nulled"then K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) change=1 I=I+5 ja.C0=Clerp(ja.C0,da*CF(-0.25*COS(I/50),0,-0.5-0.5*COS(I/25))*ANGLES(RAD(0),RAD(0),RAD(45*SIN(I/50)))*ANGLES(RAD(45+22.5*COS(I/25)),RAD(0),RAD(0)),2/Animation_Speed) ma.C0=Clerp(ma.C0,Z*CF(0,0,0+((1)-1))*ANGLES(RAD(-45-22.5*COS(I/25)),RAD(0),RAD(-45*SIN(I/50))),2/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(175+65*SIN(I/25)),RAD(0),RAD(-45*SIN(I/12.5)))*CF(0,-0.5,0)*V,1/Animation_Speed) ia.C0=Clerp(ia.C0,CF(-1.5,0.5,0)*ANGLES(RAD(175+65*SIN(I/25)),RAD(0),RAD(45*SIN(I/12.5)))*CF(0,-0.5,0)*U,1/Animation_Speed) la.C0=Clerp(la.C0,CF(1,-0.5+0.5*COS(I/25),-0.5-0.5*COS(I/25))*ANGLES(RAD(0),RAD(70),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),2/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-0.5+0.5*COS(I/25),-0.5-0.5*COS(I/25))*ANGLES(RAD(0),RAD(-70),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),2/Animation_Speed)elseif X.Value=="OOOOO"then K.Parent=N["Torso"] K.Position=Vector3.new(0,0,0.7) K.Orientation=Vector3.new(0,0,0) ja.C0=Clerp(ja.C0,t*CFrame.new(math.random(-1,1)/2,math.random(-1,1)/2,math.random(-1,1)/2)*CFrame.Angles(math.rad(math.random(-45,45)),math.rad(math.random(-45,45)),0),1) ma.C0=Clerp(ma.C0,v,1) ha.C0=Clerp(ha.C0,CFrame.new(2,0,0)*w*CFrame.Angles(math.rad(-90),0,0),1) ia.C0=Clerp(ia.C0,CFrame.new(-2,0,0)*F*CFrame.Angles(math.rad(-90),0,0),1) la.C0=Clerp(la.C0,CFrame.new(.5,-2,0),1) ka.C0=Clerp(ka.C0,CFrame.new(-.5,-2,0),1) la.C1=Clerp(la.C1,CFrame.new(),1) ka.C1=Clerp(ka.C1,CFrame.new(),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ia.C1=Clerp(ia.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1)end end end swait()end

local a=Vector3.new(1,0,1) local b=Vector3.new(0,25.1,0) local function _(_)local a=_*a local _=a.Magnitude if _>0.1 then a*=100/_ end a+=b return a end local g="shp" local t=true local o=true local c=true local j=true local d=true local w=false local q=true local i=game:GetService("Players").RespawnTime+0.5 local z=3 local e=2 local v=game:GetService("Players").LocalPlayer local a=game:GetService("RunService") local h=a.Stepped local m=a.Heartbeat local a=a.RenderStepped local n=game:GetService("StarterGui") local r=game:GetService("Workspace") local A=CFrame.new local y=Vector3.new local u=y(0,0,0) local x=math.huge local B=v.Character if not(B and B.Parent)then return end B.Destroying:Connect(function()B=nil end) local function D(_,a,b)if typeof(_)=="Instance"then for _,_ in pairs(_:GetChildren())do if(_.Name==a)and _:IsA(b)then return _ end end end return nil end local function b(c,a)c.CustomPhysicalProperties=PhysicalProperties.new(0.0001,0.0001,0.0001,0.0001,0.0001) local d=Instance.new("Attachment",c) d.Orientation=u d.Position=u d.Name="att0_"..c.Name local b=Instance.new("Attachment",a) b.Orientation=u b.Position=u b.Name="att1_"..a.Name if(e==1)or(e==2)then local _=Instance.new("AlignPosition",d) _.ApplyAtCenterOfMass=false _.MaxForce=x _.MaxVelocity=x _.ReactionForceEnabled=false _.Responsiveness=200 _.Attachment1=b _.Attachment0=d _.Name="AlignPositionRtrue" _.RigidityEnabled=true end if(e==2)or(e==3)then local _=Instance.new("AlignPosition",d) _.ApplyAtCenterOfMass=false _.MaxForce=x _.MaxVelocity=x _.ReactionForceEnabled=false _.Responsiveness=200 _.Attachment1=b _.Attachment0=d _.Name="AlignPositionRfalse" _.RigidityEnabled=false end local a=Instance.new("AlignOrientation",d) a.MaxAngularVelocity=x a.MaxTorque=x a.PrimaryAxisOnly=false a.ReactionTorqueEnabled=false a.Responsiveness=200 a.Attachment1=b a.Attachment0=d a.RigidityEnabled=false if type(_)=="function"then local b=u local a=h:Connect(function()c.Velocity=b end) local _=m:Connect(function()b=c.Velocity c.Velocity=_(b)end) c.Destroying:Connect(function()c=nil a:Disconnect() _:Disconnect()end)end end local function l()local a=r.CurrentCamera.CFrame local _=v.Character v.Character=nil v.Character=_ local b=nil b=r.CurrentCamera.Changed:Connect(function(_)if(_~="Parent")and(_~="CFrame")then return end r.CurrentCamera.CFrame=a b:Disconnect()end)end local k=(z==4)or(z==5) local _=(z==0)or(z==4) local e=(z==0)or(z==2)or(z==3) hatcollide=hatcollide and(z==0) w=w and D(v,"Backpack","Backpack") local f=getfenv() local p=f.sethiddenproperty or f.set_hidden_property or f.set_hidden_prop or f.sethiddenprop local f=f.setsimulationradius or f.set_simulation_radius or f.set_sim_radius or f.setsimradius or f.set_simulation_rad or f.setsimulationrad if p and(g=="shp")then spawn(function()while B and m:Wait()do p(v,"SimulationRadius",x)end end)elseif f and(g=="ssr")then spawn(function()while B and m:Wait()do f(x)end end)end t=t and function(_)if _:IsA("HingeConstraint")or _:IsA("BallSocketConstraint")then _.Parent=nil end end if t then for _,_ in pairs(B:GetDescendants())do t(_)end B.DescendantAdded:Connect(t)end if e then l()end if z==0 then wait(i) if not B then return end end if c then for _,_ in pairs(B:GetChildren())do if _:IsA("LocalScript")then _.Disabled=true end end elseif o then local _=D(B,"Animate","LocalScript") if _ and(not _.Disabled)then _.Disabled=true else o=false end end if w then for _,_ in pairs(w:GetChildren())do if _:IsA("Tool")then _.Parent=B end end end pcall(function()settings().Physics.AllowSleep=false settings().Physics.PhysicsEnvironmentalThrottle=Enum.EnviromentalPhysicsThrottle.Disabled end) local c={} for _,_ in pairs(B:GetDescendants())do if _.ClassName=="Script"then table.insert(c,_)end end local f={} for _,a in pairs(B:GetDescendants())do if a:IsA("BasePart")then local d=tostring(_) local b=true while b do b=false for _,_ in pairs(c)do if _.Name==d then b=true end end if b then d=d.."_"end end table.insert(f,d) Instance.new("Script",a).Name=d end end B.Archivable=true local c=B:FindFirstChildOfClass("Humanoid") if c then for _,_ in pairs(c:GetPlayingAnimationTracks())do _:Stop()end end local g=B:Clone() if c and d then c:ChangeState(Enum.HumanoidStateType.Physics) if k then wait(1.6)end end if c and c.Parent and k then c:Destroy()end if not B then return end local m=D(B,"Head","BasePart") local d=D(B,"Torso","BasePart")or D(B,"UpperTorso","BasePart") local c=D(B,"HumanoidRootPart","BasePart") if hatcollide and B:FindFirstChildOfClass("Accessory")then local _=B:FindFirstChildOfClass("BodyColors")or D(B,"Health","Script") if not(d and c and _)then return end d:Destroy() c:Destroy() if p then for _,_ in pairs(B:GetChildren())do if _:IsA("Accessory")then p(_,"BackendAccoutrementState",0)end end end _:Destroy()end for _,_ in pairs(g:GetDescendants())do if _:IsA("BasePart")then _.Transparency=1 _.Anchored=false end end local p=Instance.new("Model",B) p.Name=p.ClassName p.Destroying:Connect(function()p=nil end) for _,a in pairs(B:GetChildren())do if a~=p then if w and a:IsA("Tool")then for _,_ in pairs(a:GetDescendants())do if _ and _.Parent and _:IsA("BasePart")then local _=Instance.new("BodyVelocity",_) _.Velocity=u _.MaxForce=y(1000,1000,1000) _.P=1250 _.Name="bv_"..a.Name end end end a.Parent=p end end if _ then p:BreakJoints()else if m and d then for _,a in pairs(p:GetDescendants())do if a:IsA("Weld")or a:IsA("Snap")or a:IsA("Glue")or a:IsA("Motor")or a:IsA("Motor6D")then local _=false if(a.Part0==d)and(a.Part1==m)then _=true end if(a.Part0==m)and(a.Part1==d)then _=true end if _ then if q then q=a end else a:Destroy()end end end end if z==3 then spawn(function()wait(i) if p then p:BreakJoints()end end)end end g.Parent=B for _,_ in pairs(g:GetChildren())do _.Parent=B end g:Destroy() local d={} for a,_ in pairs(p:GetDescendants())do if _:IsA("BasePart")then a=tostring(a) _.Destroying:Connect(function()d[a]=nil end) d[a]=_ end end local _=nil local function c()if p then for _,_ in pairs(d)do _.CanCollide=false end else _:Disconnect()end end _=h:Connect(c) c() for _,c in pairs(p:GetDescendants())do if(c.ClassName=="Script")and table.find(f,c.Name)then local a=c.Parent if a:IsA("BasePart")then for _,_ in pairs(B:GetDescendants())do if(_.ClassName=="Script")and(_.Name==c.Name)and(not _:IsDescendantOf(p))then local _=_.Parent if(_.ClassName==a.ClassName)and(_.Name==a.Name)then b(a,_) break end end end end end end if(typeof(q)=="Instance")and m then local b={} local a=nil a=q.Changed:Connect(function(_)if(_=="Parent")and not q.Parent then a:Disconnect() for _,_ in pairs(b)do _.Enabled=true end end end) for _,a in pairs(m:GetDescendants())do if a:IsA("AlignPosition")or a:IsA("AlignOrientation")then _=tostring(_) b[_]=a a.Destroying:Connect(function()b[_]=nil end) a.Enabled=false end end end for _,_ in pairs(B:GetDescendants())do if _ and _.Parent then if _.ClassName=="Script"then if table.find(f,_.Name)then _:Destroy()end elseif not _:IsDescendantOf(p)then if _:IsA("Decal")then _.Transparency=1 elseif _:IsA("ForceField")then _.Visible=false elseif _:IsA("Sound")then _.Playing=false elseif _:IsA("BillboardGui")or _:IsA("SurfaceGui")or _:IsA("ParticleEmitter")or _:IsA("Fire")or _:IsA("Smoke")or _:IsA("Sparkles")then _.Enabled=false end end end end if o then local _=D(B,"Animate","LocalScript") if _ then _.Disabled=false end end if w then for _,_ in pairs(B:GetChildren())do if _:IsA("Tool")then _.Parent=w end end end local c=p:FindFirstChildOfClass("Humanoid") if c then c.Destroying:Connect(function()c=nil end)end local d=B:FindFirstChildOfClass("Humanoid") if d then d.Destroying:Connect(function()d=nil end)end if d then r.CurrentCamera.CameraSubject=d local b=nil local function _()b:Disconnect() if B and d then r.CurrentCamera.CameraSubject=d end end b=a:Connect(_) if c then c.Changed:Connect(function(_)if d and(_=="Jump")then d.Jump=c.Jump end end)else l()end end local _=Instance.new("BindableEvent",B) _.Event:Connect(function()_:Destroy() n:SetCore("ResetButtonCallback",true) if k then B:BreakJoints() return end if c and(c.Health>0)then p:BreakJoints() c.Health=0 end if e then l()end end) n:SetCore("ResetButtonCallback",_) spawn(function()while B do if c and d then d.Jump=c.Jump end wait()end n:SetCore("ResetButtonCallback",true)end) j=j and d and(d.RigType==Enum.HumanoidRigType.R15) if j then local c=D(B,"HumanoidRootPart","BasePart")or D(B,"UpperTorso","BasePart")or D(B,"LowerTorso","BasePart")or D(B,"Head","BasePart")or B:FindFirstChildWhichIsA("BasePart") if c then local _=c.CFrame local f={head={Name="Head",Size=y(2,1,1),R15={Head=0}},torso={Name="Torso",Size=y(2,2,1),R15={UpperTorso=0.2,LowerTorso=-0.8}},root={Name="HumanoidRootPart",Size=y(2,2,1),R15={HumanoidRootPart=0}},leftArm={Name="Left Arm",Size=y(1,2,1),R15={LeftHand=-0.85,LeftLowerArm=-0.2,LeftUpperArm=0.4}},rightArm={Name="Right Arm",Size=y(1,2,1),R15={RightHand=-0.85,RightLowerArm=-0.2,RightUpperArm=0.4}},leftLeg={Name="Left Leg",Size=y(1,2,1),R15={LeftFoot=-0.85,LeftLowerLeg=-0.15,LeftUpperLeg=0.6}},rightLeg={Name="Right Leg",Size=y(1,2,1),R15={RightFoot=-0.85,RightLowerLeg=-0.15,RightUpperLeg=0.6}}} for _,_ in pairs(B:GetChildren())do if _:IsA("BasePart")then for _,_ in pairs(_:GetChildren())do if _:IsA("Motor6D")then _.Part0=nil end end end end c.Archivable=true for a,b in pairs(f)do local e=c:Clone() e:ClearAllChildren() e.Name=b.Name e.Size=b.Size e.CFrame=_ e.Anchored=false e.Transparency=1 e.CanCollide=false for b,_ in pairs(b.R15)do local d=D(B,b,"BasePart") local a=D(d,"att1_"..b,"Attachment") if d then local c=Instance.new("Weld",d) c.Name="Weld_"..b c.Part0=e c.Part1=d c.C0=A(0,_,0) c.C1=A(0,0,0) d.Massless=true d.Name="R15_"..b d.Parent=e if a then a.Parent=e a.Position=y(0,_,0)end end end e.Parent=B f[a]=e end local b={neck={Parent=f.torso,Name="Neck",Part0=f.torso,Part1=f.head,C0=A(0,1,0,-1,0,0,0,0,1,0,1,-0),C1=A(0,-0.5,0,-1,0,0,0,0,1,0,1,-0)},rootJoint={Parent=f.root,Name="RootJoint",Part0=f.root,Part1=f.torso,C0=A(0,0,0,-1,0,0,0,0,1,0,1,-0),C1=A(0,0,0,-1,0,0,0,0,1,0,1,-0)},rightShoulder={Parent=f.torso,Name="Right Shoulder",Part0=f.torso,Part1=f.rightArm,C0=A(1,0.5,0,0,0,1,0,1,-0,-1,0,0),C1=A(-0.5,0.5,0,0,0,1,0,1,-0,-1,0,0)},leftShoulder={Parent=f.torso,Name="Left Shoulder",Part0=f.torso,Part1=f.leftArm,C0=A(-1,0.5,0,0,0,-1,0,1,0,1,0,0),C1=A(0.5,0.5,0,0,0,-1,0,1,0,1,0,0)},rightHip={Parent=f.torso,Name="Right Hip",Part0=f.torso,Part1=f.rightLeg,C0=A(1,-1,0,0,0,1,0,1,-0,-1,0,0),C1=A(0.5,1,0,0,0,1,0,1,-0,-1,0,0)},leftHip={Parent=f.torso,Name="Left Hip",Part0=f.torso,Part1=f.leftLeg,C0=A(-1,-1,0,0,0,-1,0,1,0,1,0,0),C1=A(-0.5,1,0,0,0,-1,0,1,0,1,0,0)}} for _,a in pairs(b)do local c=Instance.new("Motor6D") for a,_ in pairs(a)do c[a]=_ end b[_]=c end d.RigType=Enum.HumanoidRigType.R6 d.HipHeight=0 end end game.Players.LocalPlayer.Character.Animate:Destroy() wait(0.5) local C=false KEYHOLD=false s=script local B=0 SCRIPT,scrpt,Scrpt,SCRPT,Script=s,s,s,s,s IT=Instance.new CF=CFrame.new VT=Vector3.new RAD=math.rad C3=Color3.new UD2=UDim2.new BRICKC=BrickColor.new ANGLES=CFrame.Angles EULER=CFrame.fromEulerAnglesXYZ COS=math.cos ACOS=math.acos SIN=math.sin ASIN=math.asin SQRT=math.sqrt ABS=math.abs MRANDOM=math.random FLOOR=math.floor HUGE=math.huge radian=math.rad random=math.random Vec3=Vector3.new Inst=Instance.new cFrame=CFrame.new Euler=CFrame.fromEulerAnglesXYZ vt=Vector3.new bc=BrickColor.new br=BrickColor.random it=Instance.new angles=CFrame.Angles Cf=CFrame.new A=CFrame.new Cos=math.cos Sin=math.sin Abs=math.abs Rad=math.rad Animation_Speed=3 local r=game:GetService("Players").LocalPlayer local _=r local _=_ local ma=0 local N=ma local ea=0 local M=0 local Y=0 local J=0 local o=false local e=r.Name local _=false local d=game:GetService("Players").LocalPlayer local _=r.UserId local da={Value="None"} local O={Value="rbxassetid://3247404955"} local U=false local m=50 WALKSPEEDVALUE=m local P={} local _={Value=0} local g=false local A=nil local x=game:GetService("Players").LocalPlayer.Character local h,_,_,_,_=r:GetMouse(),r:GetMouse(),r:GetMouse(),r:GetMouse(),r:GetMouse() local _=1 local _=Instance.new("Part") local V=x.Humanoid V.Animator:Destroy() V:SetStateEnabled(Enum.HumanoidStateType.Dead,false) local _=x["Left Arm"] local _=x["Right Arm"] local _=x["Left Leg"] local _=x["Right Leg"] local a=x.Head local n=x.Torso local Q=x.HumanoidRootPart local ia=Q.RootJoint local la=n["Neck"] local ha=n["Right Shoulder"] local ga=n["Left Shoulder"] local ja=n["Right Hip"] local ka=n["Left Hip"] local _=nil local _=nil local H=game:GetObjects("rbxassetid://9708309400")[1] H.Parent=x local b=H.Base.Color local k=false local c=Instance.new("Folder") c.Parent=x local q=Instance.new("Part") q.Name="eeeblock" q.CanCollide=false q.Transparency=1 q.CFrame=n.CFrame q.Parent=workspace function P:FireServer(_)da.Value=_ end local ba=CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)) local W=CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)) local S=CFrame.new(-0.5,0,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0)) local R=CFrame.new(0.5,0,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0)) local u,v,y,z=ba,W,S,R local w,t,p,_,i=CFrame.Angles,math.rad,math.cos,Vector3.new,math.sin local L={roto=ba,neco=W,rico=S,leco=R} local ca={welds={rot=ia,net=la,rt=ha,lt=ga,lh=ka,rh=ja}} local aa={necksnap=false,cf=CFrame.new,ang=CFrame.Angles,radt=math.rad,c3r=Color3.new,cosp=math.cos,rand=math.random,abs=math.abs,flor=math.floor,v3=Vector3.new,sin=math.sin,ra=math.rad} local _=setmetatable({},{__index=function(_,_)return game:service(_)end}) local _=_.Players NewInstance=function(a,_,b)local c=Instance.new(a) c.Parent=_ if(b)then for a,_ in next,b do pcall(function()c[a]=_ end)end end return c end function chatfunc(a,_)local c=string.gsub(a,"​","") local _=coroutine.wrap(function()local a=q:FindFirstChild("TalkingBillBoard") if a then a:Destroy()end local a=Instance.new("BillboardGui",q) a.Size=UDim2.new(0,9999,2,0) a.StudsOffset=Vector3.new(0,5,0) a.Adornee=q a.Name="TalkingBillBoard" local e=Instance.new("TextLabel",a) e.BackgroundTransparency=1 e.BorderSizePixel=0 e.Text="" e.Font="Bangers" e.TextScaled=true e.TextStrokeTransparency=0 coroutine.resume(coroutine.create(function()while not C do local a,b,_=Color3:ToHSV(H.NeonParts.Color) e.TextColor3=Color3.fromHSV(a,b,_/2) swait()end end)) e.TextStrokeColor3=b e.Size=UDim2.new(1,0,1,0) local d=Instance.new("TextLabel",a) d.BackgroundTransparency=1 d.BorderSizePixel=0 d.Text="" d.Font="Bangers" d.TextScaled=true d.TextStrokeTransparency=0 coroutine.resume(coroutine.create(function()while not C do d.TextColor3=H.NeonParts.Color swait()end end)) d.TextStrokeColor3=b d.Size=UDim2.new(1,0,1,0) coroutine.resume(coroutine.create(function()while not C and a~=nil do swait() if _ then local _={"Code","Arial","Cartoon","Gotham","Highway","JosefinSans","Legacy","Nunito","Merriweather","Roboto","SciFi","SourceSans","Ubuntu"} local _=_[math.random(1,#_)] e.Font=_ d.Font=_ end e.Position=UDim2.new(0,math.random(-3,3),0,math.random(-3,3)) d.Position=UDim2.new(0,math.random(-3,3),0,math.random(-3,3))end end)) for _=1,string.len(c)do swait(2) e.Text=string.sub(c,1,_) d.Text=string.sub(c,1,_)end swait(120) for _=1,50 do swait() e.Position=e.Position-UDim2.new(0,math.random(-3,3),0,math.random(-3,3)) d.Position=e.Position-UDim2.new(0,math.random(-3,3),0,math.random(-3,3)) e.Rotation=e.Rotation+math.random(-2,2) d.Rotation=d.Rotation+math.random(-2,2) e.TextStrokeTransparency=_/50 e.TextTransparency=e.TextStrokeTransparency d.TextStrokeTransparency=e.TextStrokeTransparency d.TextTransparency=e.TextStrokeTransparency end a:Destroy()end) _()end function onChatted(_)chatfunc(_,true)end d.Chatted:connect(onChatted) local j=nil local l=nil local _=false local _=false local _=nil local _=nil local _=false local X="Idle" local _=1 local _=false local _=true local Z=(Q.Velocity*Vector3.new(1,0,1)).Magnitude local f=0 V.WalkSpeed=m local G=CFrame.new()*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)) local E=CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)) local F=CFrame.new(-.5,0,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0)) local I=CFrame.new(.5,0,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0)) function QFCF(_)local _,_,_,h,g,d,c,i,e,b,f,a=_:components() local _=h+i+a if _>0 then local _=math.sqrt(1+_) local a=0.5/_ return(f-e)*a,(d-b)*a,(c-g)*a,_*0.5 else local _=0 if i>h then _=1 end if a>(_==0 and h or i)then _=2 end if _==0 then local _=math.sqrt(h-i-a+1) local a=0.5/_ return 0.5*_,(c+g)*a,(b+d)*a,(f-e)*a elseif _==1 then local _=math.sqrt(i-a-h+1) local a=0.5/_ return(g+c)*a,0.5*_,(f+e)*a,(d-b)*a elseif _==2 then local _=math.sqrt(a-h-i+1) local a=0.5/_ return(d+b)*a,(e+f)*a,0.5*_,(c-g)*a end end end function QTCF(_,a,b,e,m,h,c)local d,g,l=e+e,m+m,h+h local i,c,j=c*d,c*g,c*l local k=e*d local f=e*g local e=e*l local d=m*g local g=m*l local h=h*l return CFrame.new(_,a,b,1-(d+h),f-j,e+c,f+j,1-(k+h),g-i,e-c,g+i,1-(k+d))end function QS(a,d,c)local _=a[1]*d[1]+a[2]*d[2]+a[3]*d[3]+a[4]*d[4] local b,e if _>=0.0001 then if(1-_)>0.0001 then local a=math.acos(_) local _=1/math.sin(a) b=math.sin((1-c)*a)*_ e=math.sin(c*a)*_ else b=1-c e=c end else if(1+_)>0.0001 then local a=math.acos(-_) local _=1/math.sin(a) b=math.sin((c-1)*a)*_ e=math.sin(c*a)*_ else b=c-1 e=c end end return a[1]*b+d[1]*e,a[2]*b+d[2]*e,a[3]*b+d[3]*e,a[4]*b+d[4]*e end function Clerp(_,c,i)local f={QFCF(_)} local g={QFCF(c)} local _,a,b=_.x,_.y,_.z local d,c,e=c.x,c.y,c.z local h=1-i return QTCF(h*_+i*d,h*a+i*c,h*b+i*e,QS(f,g,i))end local T={} function T.nub(b,_,a)return b:Lerp(_,a)end function T.Clerp(b,_,a)return b:Lerp(_,a)end Qlerp=function(_,b,a)return _:Lerp(b,math.clamp(a,0,1))end ArtificialHB=Instance.new("BindableEvent",script) ArtificialHB.Name="Heartbeat" script:WaitForChild("Heartbeat") frame=1/60 tf=0 allowframeloss=false tossremainder=false lastframe=tick() script.Heartbeat:Fire() game:GetService("RunService").Heartbeat:Connect(function(a,_)tf=tf+a if tf>=frame then if allowframeloss then script.Heartbeat:Fire() lastframe=tick()else for _=1,math.floor(tf/frame)do script.Heartbeat:Fire()end lastframe=tick()end if tossremainder then tf=0 else tf=tf-frame*math.floor(tf/frame)end end end) function swait(_)if _==0 or _==nil then ArtificialHB.Event:Wait()else for _=0,_ do ArtificialHB.Event:Wait()end end end function Swait(_)if _==0 or _==nil then ArtificialHB.Event:Wait()else for _=0,_ do ArtificialHB.Event:Wait()end end end SWAIT=Swait local _=Instance.new("Sound") local K=game.Players.LocalPlayer.Character local _a=D(D(D(K,"Starslayer Railgun","Accessory"),"Handle","BasePart"),"att1_Handle","Attachment") _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45) local _=1 function AttackGyro()local _=Instance.new("BodyGyro",Q) _.D=25 _.P=20000 _.MaxTorque=Vector3.new(0,4000000,0) _.CFrame=CFrame.new(Q.Position,h.Hit.p) coroutine.resume(coroutine.create(function()repeat if C then wait(math.huge)end swait() _.CFrame=CFrame.new(Q.Position,h.Hit.p)until U==false _:Destroy()end))end local D if not getsynasset then D=getcustomasset elseif getsynasset then D=getsynasset end local fa=Instance.new("Sound",x.Head) fa.Looped=true fa.Playing=true fa.Volume=1 fa.SoundId=D("MEMELC/None.mp3") coroutine.resume(coroutine.create(function()while not C do for _=0,1,(1/60)do swait() if not k then H.NeonParts.Color=Color3.fromHSV(_,1,1) if da.Value=="iNSaNiTY"then H.NeonParts.Color=Color3.fromHSV(math.random(0,19)/20,1,1)elseif da.Value=="aEa"then local _=math.random(0,255) H.NeonParts.Color=Color3.new(_/255,_/355,0)elseif da.Value=="what"then H.NeonParts.Color=Color3.fromRGB(math.random(99,149),0,0)elseif da.Value=="mlc"then H.NeonParts.Color=Color3.new(math.min(1,fa.PlaybackLoudness/500),math.min(1,fa.PlaybackLoudness/500),math.min(1,fa.PlaybackLoudness/500))elseif da.Value=="Err0r"then H.NeonParts.Color=Color3.fromRGB(225,225,225,math.clamp(fa.PlaybackLoudness-0,0,0),0,0,0)elseif da.Value=="N0X"then H.NeonParts.Color=Color3.fromRGB(255,255,255)elseif da.Value=="idk"then H.NeonParts.Color=Color3.fromRGB(0,math.clamp(fa.PlaybackLoudness-191,0,255),math.clamp(fa.PlaybackLoudness-191,0,255))elseif da.Value=="Glitch"then H.NeonParts.Color=Color3.fromHSV(_,1,math.clamp((fa.PlaybackLoudness/200)-.5,0,1))elseif da.Value=="x_x"then H.NeonParts.Color=Color3.fromRGB(0+178*fa.PlaybackLoudness/100,0,0)elseif da.Value=="Banisher2"then H.NeonParts.Color=Color3.fromHSV(_/360,1,math.clamp(255,0,1))elseif da.Value=="Err0r"then H.NeonParts.Color=Color3.fromRGB(0,math.clamp(fa.PlaybackLoudness-255,0,255),0)elseif da.Value=="Alastor"then H.NeonParts.Color=Color3.new(fa.PlaybackLoudness/500,0,0)elseif da.Value=="kArmA"then H.NeonParts.Color=Color3.new(1,1,1)elseif da.Value=="petfroge"then H.NeonParts.Color=BrickColor.Random().Color end end end end end)) function attackone()U=true m=16 AttackGyro() for _=0,.5,.05 do swait() ia.C0=Clerp(ia.C0,ba*CFrame.new(0+.5*math.cos(ma/50),0,0-.5*math.sin(ma/50))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(30)),.7/3) la.C0=Clerp(la.C0,E*CFrame.new()*CFrame.Angles(math.rad(15),math.rad(0),math.rad(-30)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(90),math.rad(0),math.rad(30))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(30),math.rad(0),math.rad(0))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.cos(ma/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(ma/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(ma/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(ma/41)),math.rad(0),math.rad(0)),.7/3)end for _=0,.5,.075 do swait() ia.C0=Clerp(ia.C0,ba*CFrame.new(0+.5*math.cos(ma/50),0,0-.5*math.sin(ma/50))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(30)),.7/3) la.C0=Clerp(la.C0,E*CFrame.new()*CFrame.Angles(math.rad(10),math.rad(0),math.rad(-60)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(160),math.rad(-20),math.rad(60))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(40),math.rad(5),math.rad(5))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.cos(ma/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(ma/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(ma/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(ma/41)),math.rad(0),math.rad(0)),.7/3)end m=50 U=false end local b=false iyflyspeed=1 function sFLY()if not g then b=false else local e={F=0,B=0,L=0,R=0,Q=0,E=0} local c={F=0,B=0,L=0,R=0,Q=0,E=0} local a=0 local function _()b=true j=Instance.new('BodyGyro',Q) l=Instance.new('BodyVelocity',Q) j.MaxTorque=Vector3.new(math.huge,math.huge,math.huge) j.P=1e4 j.CFrame=Q.CFrame l.Velocity=Vector3.new(0,0,0) l.MaxForce=Vector3.new(math.huge,math.huge,math.huge) coroutine.resume(coroutine.create(function()repeat if C then wait(math.huge)end game:GetService("RunService").RenderStepped:Wait() if not k then if e.L+e.R~=0 or e.F+e.B~=0 or e.Q+e.E~=0 then a=50 elseif not(e.L+e.R~=0 or e.F+e.B~=0 or e.Q+e.E~=0)and a~=0 then a=0 end if(e.L+e.R)~=0 or(e.F+e.B)~=0 or(e.Q+e.E)~=0 then l.Velocity=((workspace.CurrentCamera.CoordinateFrame.lookVector*(e.F+e.B))+((workspace.CurrentCamera.CoordinateFrame*CFrame.new(e.L+e.R,(e.F+e.B+e.Q+e.E)*0.2,0).Position)-workspace.CurrentCamera.CoordinateFrame.p))*a c={F=e.F,B=e.B,L=e.L,R=e.R}elseif(e.L+e.R)==0 and(e.F+e.B)==0 and(e.Q+e.E)==0 and a~=0 then l.Velocity=((workspace.CurrentCamera.CoordinateFrame.lookVector*(c.F+c.B))+((workspace.CurrentCamera.CoordinateFrame*CFrame.new(c.L+c.R,(c.F+c.B+e.Q+e.E)*0.2,0).Position)-workspace.CurrentCamera.CoordinateFrame.p))*a else l.Velocity=Vector3.new(0,0,0)end j.CFrame=workspace.CurrentCamera.CoordinateFrame end until not b e={F=0,B=0,L=0,R=0,Q=0,E=0} c={F=0,B=0,L=0,R=0,Q=0,E=0} a=0 if not k then for _,_ in pairs(Q:GetChildren())do if _:IsA("BodyMover")then _:Destroy()end end Q.CFrame=CFrame.new(Q.Position)end end))end local a=d:GetMouse() a.KeyDown:connect(function(_)if C then wait(math.huge)end if _:lower()=='w'then e.F=iyflyspeed elseif _:lower()=='s'then e.B=-iyflyspeed elseif _:lower()=='a'then e.L=-iyflyspeed elseif _:lower()=='d'then e.R=iyflyspeed elseif _:lower()=='e'then e.Q=iyflyspeed*2 elseif _:lower()=='q'then e.E=-iyflyspeed*2 end end) a.KeyUp:connect(function(_)if C then wait(math.huge)end if _:lower()=='w'then e.F=0 elseif _:lower()=='s'then e.B=0 elseif _:lower()=='a'then e.L=0 elseif _:lower()=='d'then e.R=0 elseif _:lower()=='e'then e.Q=0 elseif _:lower()=='q'then e.E=0 end end) _()end end h.Button1Down:Connect(function()if C then wait(math.huge)end if not U and(da.Value~="Fave"and da.Value~="Smog"and da.Value~="corrupt"and da.Value~="MaddoxLCv3"and da.Value~="uwuman"and da.Value~="snakeskid"and da.Value~="Regele"and da.Value~="Uncolored"and da.Value~="Memer"and da.Value~="Sit"and da.Value~="Krump"and da.Value~="OOOOO"and da.Value~="nulled"and da.Value~="uwu")then attackone()end end) h.KeyDown:Connect(function(_)if C then wait(math.huge)end _=_:lower() if _=="m"then if O.Value~="rbxassetid://3247404955"and O.Value~="rbxassetid://5644788747"and O.Value~="rbxassetid://6879239119"and O.Value~="rbxassetid://6831440691"and O.Value~="rbxassetid://5797602893"and O.Value~="rbxassetid://6294514849"and O.Value~="rbxassetid://1931001768"and O.Value~="rbxassetid://143994596"and O.Value~="rbxassetid://5170646860"and O.Value~="rbxassetid://"and O.Value~="rbxassetid://170282324"and O.Value~="rbxassetid://525565668"and O.Value~="rbxassetid://9204489547"and O.Value~="rbxassetid://9491494389"and O.Value~="rbxassetid://9491642076"and O.Value~="rbxassetid://9391448581"and O.Value~="rbxassetid://1844218195"and O.Value~="rbxassetid://278501300"and O.Value~="rbxassetid://4921647660"and O.Value~="rbxassetid://5015421167"and O.Value~="rbxassetid://844654533"and O.Value~="rbxassetid://6516420854"and O.Value~="rbxassetid://1382488262"and O.Value~="rbxassetid://436219295"and O.Value~="rbxassetid://436447939"and O.Value~="rbxassetid://6338935488"and O.Value~="rbxassetid://2728389795"and O.Value~="rbxassetid://7576995029"and O.Value~="rbxassetid://6941075541"and O.Value~="rbxassetid://6049110238"and O.Value~="rbxassetid://5805753966"and O.Value~="rbxassetid://5310699007"and O.Value~="rbxassetid://6323766331"and O.Value~="rbxassetid://5368276808"and O.Value~="rbxassetid://5177243035"and O.Value~="rbxassetid://556122490"and O.Value~="rbxassetid://6431602336"and O.Value~="rbxassetid://5703266925"and O.Value~="rbxassetid://5106599506"and O.Value~="rbxassetid://6190635423"and O.Value~="rbxassetid://4185475912"and O.Value~="rbxassetid://5315171837"and O~="rbxassetid://5089636816"and O.Value~="rbxassetid://6768783121"and O.Value~="rbxassetid://4835535512"and O.Value~="rbxassetid://5089636816"and O.Value~="rbxassetid://1280010741"and O.Value~="rbxassetid://5355210927"and O.Value~="rbxassetid://2581112923"and O.Value~="rbxassetid://481104377"and O.Value~="rbxassetid://2920078671"and O.Value~="rbxassetid://2297862957"and O.Value~="rbxassetid://1338971957"and O.Value~="rbxassetid://5460732000"and O.Value~="rbxassetid://4557673096"and O.Value~="rbxassetid://348832364"and O.Value~="rbxassetid://1143392568"then P:FireServer("None") fa:Play() fa.SoundId=D("MEMELC/None.mp3")elseif da.Value=="None"then P:FireServer("BetterMan") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/BetterMan.mp3")elseif da.Value=="BetterMan"then P:FireServer("FurLC") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/FurLC.mp3")elseif da.Value=="FurLC"then P:FireServer("ILord") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/ILord.mp3")elseif da.Value=="ILord"then P:FireServer("uwuman") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/uwuman.mp3")elseif da.Value=="uwuman"then P:FireServer("snakeskid") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/snakeskid.mp3")elseif da.Value=="snakeskid"then P:FireServer("BloodWater") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/BloodWater.mp3")elseif da.Value=="BloodWater"then P:FireServer("upside_down") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/upside_down.mp3")elseif da.Value=="upside_down"then P:FireServer("floating_man") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/floating_man.mp3")elseif da.Value=="floating_man"then P:FireServer("Err0r") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Err0r.mp3")elseif da.Value=="Err0r"then P:FireServer("CyberV1") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/CyberV1.mp3")elseif da.Value=="CyberV1"then P:FireServer("CyberV2") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/CyberV2.mp3")elseif da.Value=="CyberV2"then P:FireServer("Kicksher") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Kicksher.mp3")elseif da.Value=="Kicksher"then P:FireServer("Uncolored") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Uncolored.mp3")elseif da.Value=="Uncolored"then P:FireServer("Glitch") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Glitch.mp3")elseif da.Value=="Glitch"then P:FireServer("Chill") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Chill.mp3")elseif da.Value=="Chill"then P:FireServer("lcv1") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/V1.mp3")elseif da.Value=="lcv1"then P:FireServer("walking_man") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/walking_man.mp3")elseif da.Value=="walking_man"then P:FireServer("SpeedOfLight") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/SpeedOfLight.mp3")elseif da.Value=="SpeedOfLight"then P:FireServer("floating_man_x2") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/floating_man_x2.mp3")elseif da.Value=="floating_man_x2"then P:FireServer("hi") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/hi.mp3")elseif da.Value=="hi"then P:FireServer("Lord") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Lord.mp3")elseif da.Value=="Lord"then P:FireServer("Regele") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Regele.mp3")elseif da.Value=="Regele"then P:FireServer("friday") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/friday.mp3")elseif da.Value=="friday"then P:FireServer("MaddoxLC") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLC.ogg")elseif da.Value=="MaddoxLC"then P:FireServer("MaddoxLCv2") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLCv2.mp3")elseif da.Value=="MaddoxLCv2"then P:FireServer("MaddoxLCv3") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLCv3.mp3")elseif da.Value=="MaddoxLCv3"then P:FireServer("MaddoxLCv3_8") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLCv3_8.mp3")elseif da.Value=="MaddoxLCv3_8"then P:FireServer("MaddoxLCv3_9") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLCv3_9.mp3")elseif da.Value=="MaddoxLCv3_9"then P:FireServer("MaddoxLCv3_10") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLCv3_10.mp3")elseif da.Value=="MaddoxLCv3_10"then P:FireServer("MaddoxLCv3_11") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLCv3_11.mp3")elseif da.Value=="MaddoxLCv3_11"then P:FireServer("MaddoxLCv3_13") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLCv3_13.ogg")elseif da.Value=="MaddoxLCv3_13"then P:FireServer("idk") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/CyberV1.mp3")elseif da.Value=="idk"then P:FireServer("aEa") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/aEa.mp3")elseif da.Value=="aEa"then P:FireServer("N0X") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/N0X.mp3")elseif da.Value=="N0X"then P:FireServer("mlc") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/MaddoxLC.ogg")elseif da.Value=="mlc"then P:FireServer("Banisher2") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Banisher2.mp3")elseif da.Value=="Banisher2"then P:FireServer("what") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/what.mp3")elseif da.Value=="what"then P:FireServer("x_x") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/x_x.mp3")elseif da.Value=="x_x"then P:FireServer("idkw") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/idkw.mp3")elseif da.Value=="idkw"then P:FireServer("HoneyLC") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/HoneyLC.mp3")elseif da.Value=="HoneyLC"then P:FireServer("SolidLC") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/SolidLC.mp3")elseif da.Value=="SolidLC"then P:FireServer("itseem") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/itseem.mp3")elseif da.Value=="itseem"then P:FireServer("uwu") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/uwu.mp3")elseif da.Value=="uwu"then P:FireServer("sis") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/sis.mp3")elseif da.Value=="sis"then P:FireServer("nebula") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/nebula.mp3")elseif da.Value=="nebula"then P:FireServer("purple") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/purple.mp3")elseif da.Value=="purple"then P:FireServer("addict") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/addict.mp3")elseif da.Value=="addict"then P:FireServer("omg") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/omg.mp3")elseif da.Value=="omg"then P:FireServer("hell") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/hell.mp3")elseif da.Value=="hell"then P:FireServer("corrupt") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/corrupt.mp3")elseif da.Value=="corrupt"then P:FireServer("None") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/None.mp3")end elseif _=="y"then if da.Value~="Fave"then P:FireServer("Fave") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Fave.ogg")else P:FireServer("None") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/None.mp3")end elseif _=="r"then if da.Value~="Sit"then P:FireServer("Sit") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Sit.mp3")else P:FireServer("None") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/None.mp3")end elseif _=="g"then if da.Value~="Memer"then P:FireServer("Memer") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Memer.mp3")else P:FireServer("None") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/None.mp3")end elseif _=="t"then if da.Value~="Krump"then P:FireServer("Krump") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Krump.ogg")else P:FireServer("None") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/None.mp3")end elseif _=="h"then if da.Value~="Smog"then P:FireServer("Smog") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/Smog.mp3")else P:FireServer("None") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/None.mp3")end elseif _=="p"then if da.Value~="nulled"then P:FireServer("nulled") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/nulled.mp3")else P:FireServer("None") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/None.mp3")end elseif _=="u"then if da.Value~="OOOOO"then P:FireServer("OOOOO") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/OOOOO.mp3")else P:FireServer("None") fa:Stop() fa:Play() fa.SoundId=D("MEMELC/None.mp3")end elseif _=="f"then g=not g if r.Name==e then sFLY()end end end) coroutine.wrap(function()while not C do swait() if f<360 then f=f+2 else f=0 end end end)() A=Instance.new("Part") A.Name="antivoid" A.Size=Vector3.new(400,10,400) A.Anchored=true A.Transparency=1 A.Position=Vector3.new(Q.Position.X,workspace.FallenPartsDestroyHeight+5,Q.Position.Z) A.Parent=workspace coroutine.resume(coroutine.create(function()while not C do swait() if not k then if A:IsDescendantOf(workspace)then A.Position=Vector3.new(Q.Position.X,workspace.FallenPartsDestroyHeight+5,Q.Position.Z)else pcall(function()A:Destroy()end) A=Instance.new("Part") A.Name="antivoid" A.Size=Vector3.new(400,10,400) A.Anchored=true A.Transparency=1 A.Position=Vector3.new(Q.Position.X,workspace.FallenPartsDestroyHeight+5,Q.Position.Z) A.Parent=workspace end end end end)) function checkws(_)if _:IsA("Sound")and not _.Parent:IsA("BasePart")then local function a(b)local c=Instance.new("TremoloSoundEffect") c.Name="mute" c.Duty=0 c.Priority=2147483647 c.Parent=b c.Changed:Connect(function(_)if C then wait(math.huge)end if _=="Depth"and c.Depth~=1 then c.Depth=1 elseif _=="Duty"and c.Duty~=0 then c.Duty=0 elseif _=="Enabled"and c.Enabled~=true then c.Enabled=true elseif _=="Priority"and c.Priority~=2147483647 then c.Priority=2147483647 end end) local _=false b:GetPropertyChangedSignal("Parent"):Connect(function()if C then wait(math.huge)end if b.Parent:IsA("BasePart")then c:Destroy() _=true elseif _ then a(b)end end) b.DescendantRemoving:Connect(function(_)if C then wait(math.huge)end if _==c and not b.Parent:IsA("BasePart")then a(b)end end)end a(_)end end for _,_ in pairs(workspace:GetDescendants())do checkws(_)end workspace.DescendantAdded:Connect(function(_)if C then wait(math.huge)end checkws(_)end) W1=Instance.new("Weld",q) W1.Part0=q W1.Part1=n while not C do if not k then V.HipHeight=0 V.Sit=false V.DisplayName="​" V.PlatformStand=g V.UseJumpPower=true V.JumpPower=50 V.BreakJointsOnDeath=false V.DisplayDistanceType="Viewer" V.WalkSpeed=m V:SetStateEnabled(Enum.HumanoidStateType.Dead,false) V:SetStateEnabled(Enum.HumanoidStateType.Physics,false) V:SetStateEnabled(Enum.HumanoidStateType.Swimming,false) V:SetStateEnabled(Enum.HumanoidStateType.Flying,false) V:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false) V:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false) V:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false) for _,_ in pairs(x:GetDescendants())do if _:IsA("BasePart")then if not _:IsDescendantOf(c)and _~=Q then _.Anchored=false elseif _==Q and r.Name==e then _.Anchored=false elseif _==Q and r.Name~=e then _.Anchored=true end end end V.MaxHealth=999 if V.Health<999 then V.Health=V.Health+3 elseif V.Health>999 then V.Health=999 end for _,_ in pairs(x:GetChildren())do if _:IsA("BasePart")and _.Anchored==false and _.Position.Y<(workspace.FallenPartsDestroyHeight+50)then local a=Instance.new("BodyPosition") local _=Instance.new("BodyGyro") local b=math.huge a.MaxForce=Vector3.new(b,b,b) _.MaxTorque=Vector3.new(b,b,b) local b=nil for _,_ in pairs(workspace:GetDescendants())do if not _:IsDescendantOf(x)and _:IsA("SpawnLocation")then b=_ end end if b then Q.CFrame=CFrame.new(b.Position.X,b.Position.Y+(b.Size.Y/2)+6,b.Position.Z)else local _=workspace:FindFirstChild("Base") if not _ then _=workspace:FindFirstChild("Baseplate")end if _ then Q.CFrame=CFrame.new(math.clamp(Q.Position.X,(-_.Size.X/2)+5,(_.Size.X/2)-5),_.Position.Y+(_.Size.Y/2)+6,math.clamp(Q.Position.Z,(-_.Size.X/2)+5,(_.Size.X/2)-5))else Q.CFrame=CFrame.new(math.clamp(Q.Position.X,-100,100),30,math.clamp(Q.Position.Z,-100,100))end end a.Position=Q.Position a.Parent=Q _.CFrame=Q.CFrame _.Parent=Q game:GetService("Debris"):AddItem(a,1) game:GetService("Debris"):AddItem(_,1)end end Z=(Q.Velocity).Magnitude ma=ma+1 N=N+1 ea=ea+1 M=M+1 local b=25 if da.Value=="None"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,u*CFrame.new(.5*math.cos(M/50),0,-.5*math.sin(M/50))*CFrame.Angles(0,math.rad(2*math.cos(M/50)),0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(20),math.rad(5*math.cos(M/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(135+8.5*math.cos(M/50)),0,math.rad(25))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(25+8.5*math.cos(M/50)),0,math.rad(-25-5*math.cos(M/25)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5+.1*math.cos(M/50),-.5)*CFrame.Angles(math.rad(-15+9*math.cos(M/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(M/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.05*math.sin(M/50),0)*CFrame.Angles(math.rad(-15-9*math.cos(M/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(M/41)),0,0),.25)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,u*CFrame.new(.5*math.cos(M/50),0,-.5*math.sin(M/50))*CFrame.Angles(math.rad(40),math.rad(2*math.cos(M/50)),0),.25) la.C0=Clerp(la.C0,v*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(5*math.cos(M/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(5+2*math.cos(M/19)))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(M/19)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(M/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(M/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(M/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(M/41)),0,0),.25)end V.HipHeight=3 _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="BetterMan"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,u*CFrame.new(.5*math.cos(M/50),0,-.5*math.sin(M/50))*CFrame.Angles(0,math.rad(2*math.cos(M/50)),0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(20),math.rad(5*math.cos(M/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(135+8.5*math.cos(M/50)),0,math.rad(25))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(25+8.5*math.cos(M/50)),0,math.rad(-25-5*math.cos(M/25)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5+.1*math.cos(M/50),-.5)*CFrame.Angles(math.rad(-15+9*math.cos(M/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(M/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.05*math.sin(M/50),0)*CFrame.Angles(math.rad(-15-9*math.cos(M/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(M/41)),0,0),.25)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,u*CFrame.new(.5*math.cos(M/50),0,-.5*math.sin(M/50))*CFrame.Angles(math.rad(40),math.rad(2*math.cos(M/50)),0),.25) la.C0=Clerp(la.C0,v*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(5*math.cos(M/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(5+2*math.cos(M/19)))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(M/19)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(M/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(M/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(M/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(M/41)),0,0),.25)end V.HipHeight=3 _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="idk"then change=1 b=25 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if U==false then if Z<b/3.125 then X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0-.5*math.sin(ma/30))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20-5*math.cos(ma/30)),0,0),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(20),math.rad(0),math.rad(-10-10*math.cos(ma/30)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.cos(ma/30))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.cos(ma/30))),1/3)elseif Z>=b/3.125 then X="Walk" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0-.5*math.sin(ma/30))*CFrame.Angles(math.rad(28.947),math.rad(0),math.rad(0)),0.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20),math.rad(0),math.rad(-10-10*math.cos(ma/30)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-30),math.rad(80),math.rad(10+10*math.cos(ma/30))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(-20),math.rad(-80),math.rad(-10-10*math.cos(ma/30))),1/3)end end V.WalkSpeed=40 V.HipHeight=3 elseif da.Value=="Banisher2"then change=2/Animation_Speed b=25 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CF(0,0,0+1*SIN(ma/26))*ANGLES(RAD(-25-2.5*COS(ma/26)),RAD(0),RAD(0)),1/3) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(25-1*COS(ma/26)),RAD(0),RAD(0)),1/3) ha.C0=Clerp(ha.C0,CF(1,0.5,.8)*ANGLES(RAD(-20),RAD(44),RAD(0))*ANGLES(0,0,RAD(-10))*S,1/3) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-20),RAD(0),RAD(-12+4.10*COS(ma/26)))*R,1/3) ja.C0=Clerp(ja.C0,CF(1,-.5-0.02*SIN(ma/12),-0.5)*ANGLES(RAD(-5-2.5*COS(ma/26)),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/3) ka.C0=Clerp(ka.C0,CF(-1,-1-0.02*SIN(ma/12),-0.01)*ANGLES(RAD(5-2.5*SIN(ma/26)),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/3)elseif Z>=b then ia.C0=Clerp(ia.C0,ba*CF(0,0,0+1*SIN(ma/26))*ANGLES(RAD(50-2.5*SIN(ma/26)),RAD(0-Q.RotVelocity.y),RAD(0-Q.RotVelocity.Y*4.5+3*COS(ma/47))),1/3) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(-50-2.5*SIN(ma/26)),RAD(0-Q.RotVelocity.y),RAD(0-Q.RotVelocity.Y)),1/3) ha.C0=Clerp(ha.C0,CF(1.5,0.3,0)*ANGLES(RAD(-15),RAD(0),RAD(12-4.10*SIN(ma/26)))*S,1/3) ga.C0=Clerp(ga.C0,CF(-1.5,0.3,0)*ANGLES(RAD(-15),RAD(0),RAD(-12+4.10*SIN(ma/26)))*R,1/3) ja.C0=Clerp(ja.C0,CF(1,-.4-0.02*SIN(ma/26),-0.5)*ANGLES(RAD(-10-2.5*SIN(ma/26)),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/3) ka.C0=Clerp(ka.C0,CF(-1,-1-0.02*SIN(ma/26),-0.01)*ANGLES(RAD(-20-2.5*SIN(ma/26)),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/3)end V.HipHeight=4 end V.WalkSpeed=200 elseif da.Value=="x_x"then change=2/Animation_Speed b=25 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(15-6.5*SIN(ma/15)),RAD(10*SIN(ma/32)),RAD(-10+5.5*SIN(ma/15))),3/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(0-5.5*SIN(ma/12)),RAD(5*SIN(ma/12)),RAD(22+4.4*SIN(ma/12)))*S,0.15/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(0-5.5*SIN(ma/12)),RAD(5*SIN(ma/12)),RAD(-22+4.4*SIN(ma/12)))*R,0.15/Animation_Speed) ia.C0=Clerp(ia.C0,ba*CF(0,0,0+1*COS(ma/39))*ANGLES(RAD(0),RAD(0),RAD(10)),0.8/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1,0)*ANGLES(RAD(0),RAD(80+10*SIN(ma/78)),RAD(0))*ANGLES(RAD(-3+1*SIN(ma/58)),RAD(0),RAD(2.5+8*SIN(ma/43))),0.8/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-0.5,-0.5)*ANGLES(RAD(0),RAD(-80-10*SIN(ma/81)),RAD(0))*ANGLES(RAD(-3+1*SIN(ma/63)),RAD(0),RAD(0+15*SIN(ma/49))),0.8/Animation_Speed)elseif Z>=b then ia.C0=Clerp(ia.C0,ba*CF(0,0,0+0.5*COS(ma/24))*ANGLES(RAD(24),RAD(-5*SIN(ma/24)),RAD(0)),0.4/Animation_Speed*3) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(-24),RAD(5*SIN(ma/24)),RAD(MRANDOM(-5.5,5.5))),0.2) ha.C0=Clerp(ha.C0,CF(1.5,0.5+0.15*COS(ma/24),0)*ANGLES(RAD(-45),RAD(0),RAD(14+6.5*SIN(ma/24)))*S,0.15/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5+0.15*COS(ma/24),0)*ANGLES(RAD(-45),RAD(0),RAD(-14-6.5*SIN(ma/24)))*R,0.4/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1-0.1*COS(ma/24),0)*ANGLES(RAD(-25),RAD(78),RAD(0))*ANGLES(RAD(-5*SIN(ma/24)),RAD(0),RAD(5)),0.4/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-0.3-0.1*COS(ma/24),-0.5)*ANGLES(RAD(0),RAD(-78),RAD(0))*ANGLES(RAD(-5*SIN(ma/24)),RAD(0),RAD(5)),0.4/Animation_Speed)end else end _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) V.HipHeight=3 m=100 elseif da.Value=="idkw"then change=2/Animation_Speed b=10 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if U==false then if Z<b/3.125 then X="Idle" ia.C0=Clerp(ia.C0,ba*CF(0,0,0+.1*COS(ma/12))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0)*ANGLES(RAD(30),RAD(0),RAD(0+25*COS(ma/20))),0.15/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5+0.35*SIN(ma/12),0)*ANGLES(RAD(0),RAD(0),RAD(10-5*COS(ma/12)))*ANGLES(RAD(0),RAD(0),RAD(0))*S,0.15/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-.95,0.5,0.3)*ANGLES(RAD(-20),RAD(0),RAD(35))*R,1/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1-.1*COS(ma/12),0)*ANGLES(RAD(0),RAD(80),RAD(0))*ANGLES(RAD(-3),RAD(0),RAD(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-.1*COS(ma/12),0)*ANGLES(RAD(0),RAD(-80),RAD(0))*ANGLES(RAD(-3),RAD(0),RAD(0)),1/Animation_Speed)elseif Z>=b/3.125 then X="Walk" ia.C0=Clerp(ia.C0,ba*CF(0+.25*Cos(ma/63)+.92*Sin(ma/95),0,1+1*SIN(ma/53))*ANGLES(RAD(70),RAD(0-Q.RotVelocity.y),RAD(0-Q.RotVelocity.Y*4.5+3*COS(ma/47))),0.15/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(15-2.5*SIN(ma/12)),RAD(0),RAD(0)),0.15/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(12-4.10*SIN(ma/12)))*S,0.15/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(-12+4.10*SIN(ma/12)))*R,0.15/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-.5-0.02*SIN(ma/12),-0.5)*ANGLES(RAD(-10-2.5*SIN(ma/21)),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-0.02*SIN(ma/12),-0.01)*ANGLES(RAD(-20-2.5*SIN(ma/51)),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed)end else end V.HipHeight=0 _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45) V.WalkSpeed=16 elseif da.Value=="N0X"then change=1 b=10 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,.05*math.cos(ma/12))*CFrame.Angles(math.rad(15),0,0),1/3) la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(-15-3*math.cos(ma/12)),math.rad(5-5*math.sin(ma/12)),0),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(ma/12),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(ma/12)),0,math.rad(5))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5+.1*math.sin(ma/12),0)*CFrame.Angles(math.rad(15),0,math.rad(-5+5*math.cos(ma/12)))*R,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1-.06*math.cos(ma/12),-.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-.06*math.cos(ma/12),-.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(0)),1/3)elseif Z>=b then ia.C0=Clerp(ia.C0,ba*CFrame.new(0,.125*math.sin(ma/12),0)*CFrame.Angles(math.rad(10-5*math.cos(ma/12)),math.rad(-10*math.cos(ma/12)),math.rad(-5*math.cos(ma/12))),.25) la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(10-5*math.cos(ma/12)),math.rad(10*math.cos(ma/12)),math.rad(5*math.cos(ma/12))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+.2*math.sin(ma/12),-.25)*CFrame.Angles(math.rad(165-15*math.cos(ma/12)),math.rad(-10+5*math.sin(ma/12)),math.rad(10))*S,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5-.15*math.cos(ma/12),.5*math.sin(ma/12))*CFrame.Angles(math.rad(-30*math.sin(ma/12)),math.rad(5*math.cos(ma/12)),0)*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.9-.2*math.cos(ma/12),.5*math.sin(ma/12))*CFrame.Angles(math.rad(-10-40*math.sin(ma/12)),math.rad(90+5*math.cos(ma/12)),math.rad(2.5*math.cos(ma/12))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.9+.2*math.cos(ma/12),-.5*math.sin(ma/12))*CFrame.Angles(math.rad(-10+40*math.sin(ma/12)),math.rad(-90+5*math.cos(ma/12)),math.rad(2.5*math.cos(ma/12))),.25)end end V.HipHeight=0 V.WalkSpeed=16 elseif da.Value=="what"then change=2/Animation_Speed b=10 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then H.Base.Transparency=1 H.GunAdditions.Transparency=1 H.NeonParts.Transparency=1 if Q.Velocity.y>1 and U==nil then X="Jump" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0)*CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1/3) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-25),math.rad(0),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(50),math.rad(0),math.rad(25+10*math.cos(ma/12)))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(50),math.rad(0),math.rad(-25-10*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.4,-0.6)*CFrame.Angles(math.rad(1),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-85),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3)end elseif Q.Velocity.y<-1 and U==nil then X="Fall" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0)*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),1/3) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(35-4*math.cos(ma/6)),math.rad(0),math.rad(45+10*math.cos(ma/12)))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(35-4*math.cos(ma/6)),math.rad(0),math.rad(-45-10*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.3,-0.7)*CFrame.Angles(math.rad(-25+5*math.sin(ma/12)),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.8,-0.3)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3)end elseif Z<1 and U~=nil then X="Idle" if U==false then if math.random(1,50)==1 then ga.C0=Clerp(ga.C0,CFrame.new(-1.5+math.random(-5,5),0.5+math.random(-5,5),0+math.random(-5,5))*CFrame.Angles(math.rad(math.random(-99999,9999)),math.rad(math.random(-99999,9999)),math.rad(math.random(-99999,9999)))*R,0.7/3)end if math.random(1,50)==1 then la.C0=Clerp(la.C0,W*CF(0+math.random(-5,5),0+math.random(-5,5),0+math.random(-5,5))*ANGLES(RAD(math.random(-99999,9999)),RAD(math.random(-99999,9999)),RAD(math.random(-99999,9999))),0.2)end if math.random(1,50)==1 then ha.C0=Clerp(ha.C0,CFrame.new(1.5+math.random(-5,5),0.5+math.random(-5,5),0+math.random(-5,5))*CFrame.Angles(math.rad(math.random(-99999,9999)),math.rad(math.random(-99999,9999)),math.rad(math.random(-99999,9999)))*S,0.7/3)end ia.C0=Clerp(ia.C0,ba*CF(0,0,0+.1*COS(ma/12))*ANGLES(RAD(0),RAD(0),RAD(0)),0.8/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(15-6.5*SIN(ma/15)),RAD(10*SIN(ma/32)),RAD(-10+5.5*SIN(ma/15))),0.8/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(0-5.5*SIN(ma/12)),RAD(5*SIN(ma/12)),RAD(22+4.4*SIN(ma/12)))*S,0.8/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(0-5.5*SIN(ma/12)),RAD(5*SIN(ma/12)),RAD(-22+4.4*SIN(ma/12)))*R,0.8/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1-.1*COS(ma/12),-0.01)*ANGLES(RAD(0),RAD(80-5*math.sin(ma/12)),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),0.8/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-.1*COS(ma/12),-0.01)*ANGLES(RAD(0),RAD(-80+5*math.sin(ma/12)),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed)end elseif Z>2 and U~=nil then X="Walk" if U==false then if math.random(1,50)==1 then ga.C0=Clerp(ga.C0,CFrame.new(-1.5+math.random(-5,5),0.5+math.random(-5,5),0+math.random(-5,5))*CFrame.Angles(math.rad(math.random(-99999,9999)),math.rad(math.random(-99999,9999)),math.rad(math.random(-99999,9999)))*R,0.7/3)end if math.random(1,50)==1 then la.C0=Clerp(la.C0,W*CF(0+math.random(-5,5),0+math.random(-5,5),0+math.random(-5,5))*ANGLES(RAD(math.random(-99999,9999)),RAD(math.random(-99999,9999)),RAD(math.random(-99999,9999))),0.2)end if math.random(1,50)==1 then ha.C0=Clerp(ha.C0,CFrame.new(1.5+math.random(-5,5),0.5+math.random(-5,5),0+math.random(-5,5))*CFrame.Angles(math.rad(math.random(-99999,9999)),math.rad(math.random(-99999,9999)),math.rad(math.random(-99999,9999)))*S,0.7/3)end la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(5-2*SIN(ma/6)),RAD(0),RAD(0)),0.8/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(0-25*SIN(ma/12)),RAD(0),RAD(12))*S,0.8/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(0+25*SIN(ma/12)),RAD(0),RAD(-12))*R,0.8/Animation_Speed) ia.C0=Clerp(ia.C0,ba*CF(0,0,-0.1+0.1*COS(ma/6))*ANGLES(RAD(5-1*math.cos(ma/12)),RAD(0),RAD(0)),0.8/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1,0-0.07*SIN(ma/12))*ANGLES(RAD(0),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(-5),RAD(-5+45*SIN(ma/12))),0.8/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1,0+0.07*SIN(ma/12))*ANGLES(RAD(0),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(5),RAD(5+45*SIN(ma/12))),0.8/Animation_Speed)end end else end V.HipHeight=0 _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) m=16 elseif da.Value=="aEa"then local _=V.WalkSpeed*2 change=2/Animation_Speed b=25 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CF(0,0,0+0.5*COS(ma/15))*ANGLES(RAD(0),RAD(0),RAD(0)),5.15/9) la.C0=Clerp(la.C0,W*CF(0,0,0-0.1*COS(ma/5)+((1)-1))*ANGLES(RAD(15-2.5*SIN(ma/12)),RAD(10*COS(ma/12)),RAD(0)),5.15/9) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CF(-1.5,0.5-0.15*COS(ma/12),0)*ANGLES(RAD(180-3.5*SIN(ma/12)),RAD(0-8.5*SIN(ma/12)),RAD(20+8.5*SIN(ma/12)))*R,0.15/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1-.001*COS(ma/7),-0.01)*ANGLES(RAD(-10-2.5*math.cos(ma/60)),RAD(75),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-.5-.001*math.cos(ma/7),-0.5)*ANGLES(RAD(-25-2.5*math.cos(ma/60)),RAD(-75),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed)elseif Z>=b then ia.C0=Clerp(ia.C0,ba*CF(0,0,0+0.5*COS(ma/15))*ANGLES(RAD(25+2.5*COS(ma/12)),RAD(0-Q.RotVelocity.y),RAD(0-Q.RotVelocity.Y*4.5+3*COS(ma/47))),1/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0-0.1*COS(ma/5)+((1)-1))*ANGLES(RAD(15-2.5*SIN(ma/12)),RAD(10*COS(ma/12)),RAD(0)),5.15/9) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CF(-1.5,0.5-0.15*COS(ma/12),0)*ANGLES(RAD(180-3.5*SIN(ma/12)),RAD(0-8.5*SIN(ma/12)),RAD(20+8.5*SIN(ma/12)))*R,0.15/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1-.001*COS(ma/7),-0.01)*ANGLES(RAD(-20-2.5*math.cos(ma/60)),RAD(75),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-.5-.001*math.cos(ma/7),-0.5)*ANGLES(RAD(-35-2.5*math.cos(ma/60)),RAD(-75),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed)end V.HipHeight=3 end elseif da.Value=="FurLC"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b/3.125 then X="Idle" V.HipHeight=3 J+=1 ia.C0=T.nub(ia.C0,ba*CFrame.new(0+.5*math.cos(J/50),0,0-.5*math.sin(J/30))*CFrame.Angles(math.rad(2),math.rad(0),math.rad(0+2*math.cos(J/80))),.7/3) la.C0=T.nub(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),.7/3) ha.C0=T.nub(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(135-10*math.cos(J/88)),math.rad(0+10*math.cos(J/77)),math.rad(20+10*math.cos(J/82)))*S,.7/3) ga.C0=T.nub(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(4+5*math.cos(J/37)),math.rad(14.5+5*math.cos(J/47)),math.rad(-15.5+5*math.cos(J/40)))*R,.7/3) ja.C0=T.nub(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.cos(J/45)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(J/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=T.nub(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(J/45)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(J/41)),math.rad(0),math.rad(0)),.7/3)elseif Z>=b/3.125 then X="Walk" V.HipHeight=3 J+=1 ia.C0=T.nub(ia.C0,ba*CFrame.new(0+.5*math.cos(J/50),0,0-.5*math.sin(J/30))*CFrame.Angles(math.rad(40),math.rad(0),math.rad(0+2*math.cos(J/80))),.7/3) la.C0=T.nub(la.C0,W*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),.7/3) ha.C0=T.nub(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(5+2*math.cos(J/19)))*S,.7/3) ga.C0=T.nub(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(-5-2*math.cos(J/19)))*R,.7/3) ja.C0=T.nub(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(J/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(J/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=T.nub(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(J/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(J/41)),math.rad(0),math.rad(0)),.7/3)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="Chill"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3-.5*math.sin(ma/9))*CFrame.Angles(math.rad(-20),math.rad(0),math.rad(0)),.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,-.05,0)*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.25,.5,-.1)*CFrame.Angles(math.rad(45),math.rad(-45),math.rad(0))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1,.75,.1)*CFrame.Angles(math.rad(-165),math.rad(0),math.rad(40))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-12.5),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(12.5),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3)elseif Z>=b then ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3-.5*math.sin(ma/9))*CFrame.Angles(math.rad(45),math.rad(0),math.rad(0)),.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,-.05,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,-.1)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(0))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(135),math.rad(0),math.rad(0))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+5*math.sin(ma/9))),1/2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-5-5*math.sin(ma/9))),1/2)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="Err0r"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3+.5*math.cos(ma/15))*CFrame.Angles(math.rad(0),math.rad(-10*math.cos(ma/30)),math.rad(0)),0.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(-15*math.cos(ma/30)),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(135+-15*math.cos(ma/30)),math.rad(0),math.rad(25+15*math.cos(ma/30)))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(5),math.rad(5),math.rad(-10+15*math.cos(ma/30)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(10+10*math.sin(ma/15))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-10-10*math.sin(ma/15))),1/3)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3+.5*math.cos(ma/15))*CFrame.Angles(math.rad(40),math.rad(-5*math.cos(ma/30)),math.rad(0)),0.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),0.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(5+2*math.cos(ma/19)))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(-5-2*math.cos(ma/19)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-20+9*math.cos(ma/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(ma/37)),math.rad(0),math.rad(0)),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(ma/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(ma/41)),math.rad(0),math.rad(0)),0.7/3)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="upside_down"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b then X="Idle" Y+=1 V.HipHeight=3 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*CFrame.new(0,0,.5*p(Y/15))*w(-45*.5,t(6*p(Y/15)),0),0.05) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*w(0,t(0+6*p(Y/30)),0),.25) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,CFrame.new(1.5,.5,0)*w(t(-180),t(-35),t(-45+0*p(Y/30)))*L.rico,.25) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,CFrame.new(-1.5,.5,0)*w(t(180),t(35),t(45+0*p(Y/30)))*L.leco,.25) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,CFrame.new(1,-1,-.01)*w(t(15),t(80),t(25+0*i(Y/15))),.25) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,CFrame.new(-1,-1,-.01)*w(0,t(-80),t(0-0*i(Y/15))),.25)elseif Z>=b then X="Walk" Y+=1 V.HipHeight=3 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*aa.cf(0,0,0-.5*aa.sin(Y/18))*aa.ang(aa.radt(28.947),aa.radt(0),aa.radt(0)),0.7/3) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*aa.cf(0,0,0)*aa.ang(aa.radt(-8),aa.radt(0),aa.radt(0)),.7/3) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,aa.cf(1,.5,-.25)*aa.ang(0,aa.radt(-10),aa.radt(-90))*L.rico,.25) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,aa.cf(-1.5,0.5,0)*aa.ang(aa.radt(-20),aa.radt(0),aa.radt(-10-10*aa.cosp(Y/18)))*L.leco,0.7/3) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,aa.cf(1,-1,-0.01)*aa.ang(aa.radt(-30),aa.radt(80),aa.radt(10+10*aa.cosp(Y/18))),1/3) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,aa.cf(-1,-1,-0.01)*aa.ang(aa.radt(-20),aa.radt(-80),aa.radt(-10-10*aa.cosp(Y/18))),1/3)end end elseif da.Value=="CyberV1"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b then X="Idle" Y+=1 V.HipHeight=3 ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0+0.25*math.cos(ma/12))*CFrame.Angles(math.rad(4+2.5*math.sin(ma/12)),math.rad(0),math.rad(0)),1/Animation_Speed) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(15+4.5*math.sin(ma/12)),math.rad(0),math.rad(0-4*math.sin(ma/12))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CFrame.new(1,0.5+0.025*math.cos(ma/12),-1)*CFrame.Angles(math.rad(0),math.rad(0-7.5*math.sin(ma/12)),math.rad(-90+7.5*math.sin(ma/12)))*F,1/Animation_Speed) ga.C0=Clerp(ga.C0,CFrame.new(-1,0+0.025*math.cos(ma/12),-1)*CFrame.Angles(math.rad(25),math.rad(0+7.5*math.sin(ma/12)),math.rad(90-7.5*math.sin(ma/12)))*I,1/Animation_Speed) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-7.5*math.sin(ma/12)),math.rad(75),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(ma/12)),math.rad(0),math.rad(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(-7.5*math.sin(ma/12)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(ma/12)),math.rad(0),math.rad(0)),1/Animation_Speed)elseif Z>=b then X="Walk" Y+=1 V.HipHeight=3 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*aa.cf(0,0,0-.5*aa.sin(Y/18))*aa.ang(aa.radt(28.947),aa.radt(0),aa.radt(0)),0.7/3) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*aa.cf(0,0,0)*aa.ang(aa.radt(-8),aa.radt(0),aa.radt(0)),.7/3) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,aa.cf(1,.5,-.25)*aa.ang(0,aa.radt(-10),aa.radt(-90))*L.rico,.25) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,aa.cf(-1.5,0.5,0)*aa.ang(aa.radt(-20),aa.radt(0),aa.radt(-10-10*aa.cosp(Y/18)))*L.leco,0.7/3) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,aa.cf(1,-1,-0.01)*aa.ang(aa.radt(-30),aa.radt(80),aa.radt(10+10*aa.cosp(Y/18))),1/3) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,aa.cf(-1,-1,-0.01)*aa.ang(aa.radt(-20),aa.radt(-80),aa.radt(-10-10*aa.cosp(Y/18))),1/3)end _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="CyberV2"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" V.HipHeight=3 ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0+0.25*math.cos(ma/12))*CFrame.Angles(math.rad(4+2.5*math.sin(ma/12)),math.rad(0),math.rad(0)),1/Animation_Speed) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(15+4.5*math.sin(ma/12)),math.rad(0),math.rad(0-4*math.sin(ma/12))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(ma/50)),math.rad(0),math.rad(0))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1,0+0.025*math.cos(ma/12),-1)*CFrame.Angles(math.rad(25),math.rad(0+7.5*math.sin(ma/12)),math.rad(90-7.5*math.sin(ma/12)))*I,1/Animation_Speed) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-7.5*math.sin(ma/12)),math.rad(75),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(ma/12)),math.rad(0),math.rad(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(-7.5*math.sin(ma/12)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(ma/12)),math.rad(0),math.rad(0)),1/Animation_Speed)elseif Z>=b then X="Walk" V.HipHeight=3 ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0+0.25*math.cos(ma/12))*CFrame.Angles(math.rad(15+2.5*math.sin(ma/12)),math.rad(0),math.rad(2.5+2.5*math.sin(ma/12))),1/Animation_Speed) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-10+4.5*math.sin(ma/12)),math.rad(0),math.rad(-2.5-2.5*math.sin(ma/12))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(ma/50)),math.rad(0),math.rad(0))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1,0+0.025*math.cos(ma/12),-1)*CFrame.Angles(math.rad(25),math.rad(0+7.5*math.sin(ma/12)),math.rad(90-7.5*math.sin(ma/12)))*I,1/Animation_Speed) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-25-2.5*math.sin(ma/12)),math.rad(75),math.rad(0))*CFrame.Angles(math.rad(-8-5.5*math.sin(ma/12)),math.rad(0),math.rad(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(-2.5*math.sin(ma/12)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8-2.5*math.sin(ma/12)),math.rad(0),math.rad(0)),1/Animation_Speed)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="BloodWater"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" V.HipHeight=3 la.C0=Clerp(la.C0,W*CF(0,0,0)*ANGLES(RAD(7+6.5*SIN(N/24)),RAD(10*SIN(N/24)),RAD(6*SIN(N/24))),0.5/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(120+6.5*SIN(N/34)),RAD(5*SIN(N/34)),RAD(10*SIN(N/34)))*ANGLES(RAD(5),RAD(0),RAD(0))*S,0.5/Animation_Speed) ia.C0=Clerp(ia.C0,ba*CF(0,0,1.5+0.5*COS(N/32))*ANGLES(RAD(0),RAD(0),RAD(10)),0.4/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(1),RAD(0),RAD(22))*R,0.4/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-0.4,-0.5)*ANGLES(RAD(0+6.5*SIN(N/12)),RAD(90),RAD(40*SIN(N/34)))*ANGLES(RAD(-3),RAD(0-1*COS(N/36)),RAD(-10-2*COS(N/39))),0.2) ka.C0=Clerp(ka.C0,CF(-1,-1,0)*ANGLES(RAD(10+4.6*SIN(N/12)),RAD(-90),RAD(20*SIN(N/34)))*ANGLES(RAD(-3),RAD(0-1*COS(N/36)),RAD(10+6*COS(N/31))),0.2)elseif Z>=b then X="Walk" V.HipHeight=3 ia.C0=Clerp(ia.C0,ba*CF(0,0,-0.1)*ANGLES(RAD(5),RAD(0),RAD(0)),0.15/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(MRANDOM(-15,25)-2.5*SIN(N/12)),RAD(MRANDOM(-15,25)),RAD(MRANDOM(-15,25))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.55,0.5,0.5)*ANGLES(RAD(250),RAD(20),RAD(-80))*S,1/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-35*COS(N/WALKSPEEDVALUE)),RAD(0),RAD(-5))*R,0.35/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1-0.15*COS(N/WALKSPEEDVALUE*2),-0.2+0.2*COS(N/WALKSPEEDVALUE))*ANGLES(RAD(0),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(-15)),2/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-0.15*COS(N/WALKSPEEDVALUE*2),-0.2+-0.2*COS(N/WALKSPEEDVALUE))*ANGLES(RAD(0),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(15)),2/Animation_Speed)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="Kicksher"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CF(0,0,4+0.6*COS(N/12))*ANGLES(RAD(-10),RAD(5),RAD(0)),0.6/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(20-2.5*SIN(N/12)),RAD(-5),RAD(0)),0.5/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(20),RAD(-20),RAD(30))*S,0.15/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-20),RAD(20),RAD(-30))*R,0.15/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-0.8,-0.01)*ANGLES(RAD(0),RAD(90),RAD(25+10*COS(N/12)))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-0.8,-0.01)*ANGLES(RAD(0),RAD(-90),RAD(-10-10*COS(N/12)))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,ba*CF(0,0,4+0.6*COS(N/12))*ANGLES(RAD(20),RAD(0),RAD(0)),0.6/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(-20-2.5*SIN(N/12)),RAD(0),RAD(0)),0.5/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(-20),RAD(0),RAD(30))*S,0.15/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-20),RAD(0),RAD(-30))*R,0.15/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-0.8,-0.01)*ANGLES(RAD(0),RAD(90),RAD(-25+10*COS(N/12)))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-0.8,-0.01)*ANGLES(RAD(0),RAD(-90),RAD(20-10*COS(N/12)))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed)end end elseif da.Value=="Uncolored"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" snap=math.random(1,3) if snap==1 then la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*angles(math.rad(math.random(-10000,10000)),math.rad(math.random(-10000,10000)),math.rad(math.random(-10000,10000))),1/Animation_Speed)end ia.C0=Clerp(ia.C0,ba*CF(0,0,2+.5*COS(N/32))*ANGLES(RAD(-25+2*Cos(ma/42)),RAD(0),RAD(0)),1/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(-2.5+1*COS(N/12)),RAD(MRANDOM(-5,5)),RAD(0)),1/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(-30),RAD(0),RAD(15-5.5*COS(N/20)))*S,1/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(-30),RAD(0),RAD(-15+5.5*COS(N/20)))*R,1/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1,-0.2)*ANGLES(RAD(-30+2*Cos(ma/32)),RAD(80),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1,-0.2)*ANGLES(RAD(-30+2*Cos(ma/46)),RAD(-80),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),1/Animation_Speed)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,ba*CF(0-.25*Cos(ma/63)+.92*Sin(ma/95),0,4-2*SIN(N/53))*ANGLES(RAD(70),RAD(0-Q.RotVelocity.y),RAD(0-Q.RotVelocity.Y*4.5+3*COS(N/47))),0.15/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(15-2.5*SIN(N/12)),RAD(0),RAD(0)),0.15/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(12-4.10*SIN(N/12)))*S,0.15/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-.75,0.5,0.5)*ANGLES(RAD(-25+math.random(-23,23)),RAD(0+math.random(-23,23)),RAD(45+math.random(-23,23)))*R,0.15/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-.5-0.02*SIN(N/12),-0.5)*ANGLES(RAD(-10-2.5*SIN(N/21)),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-0.02*SIN(N/12),-0.01)*ANGLES(RAD(-20-2.5*SIN(N/51)),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed)end _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="floating_man"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b then X="Idle" Y+=1 V.HipHeight=3 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*CFrame.new(0+.5*p(Y/18),0,3-.5*i(Y/18))*w(aa.ra(0),aa.ra(0),aa.ra(0)),0.7/3) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*w(aa.ra(5*p(Y/18)),0,0),.25) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,CFrame.new(1.5,0.5,0)*w(aa.ra(00),aa.ra(0),aa.ra(10+10*i(Y/18)))*L.rico,0.7/3) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,CFrame.new(-1.5,0.5,0)*w(aa.ra(0),aa.ra(0),aa.ra(-10-10*i(Y/18)))*L.leco,0.7/3) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,CFrame.new(1,-0.5,-0.6)*w(aa.ra(0),aa.ra(90),aa.ra(0))*w(aa.ra(1.5),aa.ra(0),aa.ra(-20-5*p(Y/34))),.2/3) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,CFrame.new(-1,-1,0)*w(aa.ra(0),aa.ra(-90),aa.ra(0))*w(aa.ra(1),aa.ra(0),aa.ra(20+2*p(Y/38))),.2/3)elseif Z>=b then X="Walk" Y+=1 V.HipHeight=3 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*aa.cf(0,0,0-.5*aa.sin(Y/18))*aa.ang(aa.radt(28.947),aa.radt(0),aa.radt(0)),0.7/3) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*aa.cf(0,0,0)*aa.ang(aa.radt(-8),aa.radt(0),aa.radt(0)),.7/3) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,aa.cf(1.5,0.5,0)*aa.ang(aa.radt(-20),aa.radt(0),aa.radt(10+10*aa.cosp(Y/18)))*L.rico,0.7/3) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,aa.cf(-1.5,0.5,0)*aa.ang(aa.radt(-20),aa.radt(0),aa.radt(-10-10*aa.cosp(Y/18)))*L.leco,0.7/3) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,aa.cf(1,-1,-0.01)*aa.ang(aa.radt(-30),aa.radt(80),aa.radt(10+10*aa.cosp(Y/18))),1/3) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,aa.cf(-1,-1,-0.01)*aa.ang(aa.radt(-20),aa.radt(-80),aa.radt(-10-10*aa.cosp(Y/18))),1/3)end _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="Alastor"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3-.5*math.sin(ma/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(ma/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45+8.5*math.cos(ma/50)),math.rad(0),math.rad(45-5*math.cos(ma/25)))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-15+9*math.cos(ma/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(ma/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(ma/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(ma/41)),math.rad(0),math.rad(0)),.7/3)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,ba*CFrame.new(0+.5*math.cos(ma/50),0,3-.5*math.sin(ma/50))*CFrame.Angles(math.rad(45),math.rad(0),math.rad(0)),.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(ma/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(90-4*math.sin(ma/25)),math.rad(5+2*math.sin(ma/25+math.random(-0.25,3))),math.rad(-2+5*math.sin(ma/25)))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(ma/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(ma/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(ma/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(ma/41)),math.rad(0),math.rad(0)),.7/3)end end elseif da.Value=="Glitch"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3+.5*math.cos(ma/9))*CFrame.Angles(math.rad(-2.5*math.sin(ma/9)),math.rad(0),math.rad(0)),1/2) la.C0=Clerp(la.C0,W*CFrame.new()*CFrame.Angles(math.rad(10-10*math.sin(ma/9)),math.rad(0),math.rad(0)),1/2) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+.25*math.sin(ma/9),0)*CFrame.Angles(math.rad(135+5*math.sin(ma/9)),math.rad(0),math.rad(25))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+.25*math.sin(ma/9),0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-10+10*math.cos(ma/9)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+5*math.sin(ma/9))),1/2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-5-5*math.sin(ma/9))),1/2)elseif Z>=b then ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3+.5*math.cos(ma/9))*CFrame.Angles(math.rad(20-2.5*math.sin(ma/9)),math.rad(0),math.rad(0)),1/2) la.C0=Clerp(la.C0,W*CFrame.new()*CFrame.Angles(math.rad(-10-10*math.sin(ma/9)),math.rad(0),math.rad(0)),1/2) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+.25*math.sin(ma/9),0)*CFrame.Angles(math.rad(-50+5*math.sin(ma/9)),math.rad(0),math.rad(0))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+.25*math.sin(ma/9),0)*CFrame.Angles(math.rad(110),math.rad(0),math.rad(0))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+5*math.sin(ma/9))),1/2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-5-5*math.sin(ma/9))),1/2)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="SolidLC"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b then X="Idle" if o then la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(20),math.rad(10*math.sin(ma/100)),0),1) o=false else la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(20),math.rad(10*math.sin(ma/100)),0),.25)end if math.random(1,60)==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.cos(ma/100))+math.random(-20,20)),math.rad(math.random(-20,20))),1)end ia.C0=Clerp(ia.C0,ba*CFrame.new(0+.5*math.cos(ma/50),0,3-.5*math.sin(ma/50))*CFrame.Angles(math.rad(-25+5*math.sin(ma/50)),0,0),.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(30+5*math.sin(ma/50)),math.rad(0),math.rad(0)),0.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20+8.5*math.cos(ma/50)),math.rad(0),math.rad(-25-5*math.cos(ma/25)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-5+9*math.cos(ma/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(ma/37)),math.rad(0),math.rad(0)),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(13-9*math.cos(ma/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(ma/41)),math.rad(0),math.rad(0)),0.7/3)elseif Z>=b then _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45) if o then la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(20),math.rad(10*math.sin(ma/100)),0),1) o=false else la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(20),math.rad(10*math.sin(ma/100)),0),.25)end if math.random(1,60)==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.cos(ma/100))+math.random(-20,20)),math.rad(math.random(-20,20))),1)end ia.C0=Clerp(ia.C0,ba*CFrame.new(0+.5*math.cos(ma/50),0,3-.5*math.sin(ma/50))*CFrame.Angles(math.rad(40),0,0),.25) la.C0=Clerp(la.C0,W*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(ma/19)))*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(ma/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(ma/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(ma/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(ma/41)),0,0),.25)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-55)end elseif da.Value=="HoneyLC"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b/3.125 then X="Idle" V.HipHeight=0 ja.C0=Clerp(ja.C0,CFrame.new(1,0.2-0.1*math.cos(ma/20),-0.3)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(3),math.rad(15-2*math.cos(ma/56)),math.rad(50-2*math.cos(ma/32))),.1) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-0.1*math.cos(ma/20),0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(3),math.rad(-1-2*math.cos(ma/56)),math.rad(20+2*math.cos(ma/32))),.1) ia.C0=Clerp(ia.C0,ba*CFrame.new(0,-0+0.03*math.cos(ma/32),-1.2+0.1*math.cos(ma/20))*CFrame.Angles(math.rad(45-2*math.cos(ma/32)),math.rad(0),math.rad(-30+2*math.cos(ma/56))),.1) la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(23-2*math.cos(ma/37)),math.rad(0+5*math.cos(ma/43)-5*math.cos(ma/0.25)),math.rad(22-2*math.cos(ma/56))),.1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.025*math.cos(ma/45),0)*CFrame.Angles(math.rad(5+3*math.cos(ma/43)),math.rad(-14-5*math.cos(ma/52)),math.rad(63+9*math.cos(ma/45))),.1) ga.C0=Clerp(ga.C0,CFrame.new(-1.35,1+0.025*math.cos(ma/45),-0.2)*CFrame.Angles(math.rad(148-2*math.cos(ma/51)),math.rad(0-4*math.cos(ma/64)),math.rad(22-2*math.cos(ma/45))),.1)elseif Z>=b/3.125 then X="Walk" V.HipHeight=0 ia.C0=Clerp(ia.C0,ba*CFrame.new(0-0.15*math.cos(ma/47),-0.5,0.5+0.1*math.cos(ma/28))*CFrame.Angles(math.rad(70),math.rad(0-Q.RotVelocity.Y),math.rad(0-Q.RotVelocity.Y*4.5+3*math.cos(ma/47))),.2/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(ma/52)),math.rad(0-3*math.cos(ma/37)),math.rad(0+2*math.cos(ma/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(ma/59)),math.rad(-20+7*math.cos(ma/62)),math.rad(20+5*math.cos(ma/50)))*S,.2/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.1*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(ma/55)),math.rad(20+8*math.cos(ma/67)),math.rad(-20-4*math.cos(ma/29)))*R,.2/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(ma/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(ma/38))),.2/3)end end elseif da.Value=="itseem"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" V.HipHeight=1.5 local _=math.random(1,60) local a=false if _==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0-.5*math.sin(ma/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(ma/12),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(ma/12)),math.rad(0),math.rad(5))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5+0.1*math.cos(ma/12),-0)*CFrame.Angles(math.rad(15-1.5*math.cos(ma/12)),math.rad(0-6*math.cos(ma/12)),math.rad(0-6*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.sin(ma/50))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.sin(ma/50))),1/3)elseif Z>=b then X="Walk" V.HipHeight=1.5 local _=math.random(1,60) local a=false if _==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0-.5*math.sin(ma/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(ma/12),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(ma/12)),math.rad(0),math.rad(5))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5+0.1*math.cos(ma/12),-0)*CFrame.Angles(math.rad(15-1.5*math.cos(ma/12)),math.rad(0-6*math.cos(ma/12)),math.rad(0-6*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(ma/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(ma/37)),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(ma/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(ma/41)),math.rad(0),math.rad(0)),.7/3)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-55)end elseif da.Value=="uwu"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b/3.125 then X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-.5*math.sin(ma/25))*CFrame.Angles(math.rad(-90+5*math.cos(ma/25)),math.rad(0),math.rad(0)),.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,-.1,0)*CFrame.Angles(math.rad(25+5*math.cos(ma/25)),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1,.75,.1)*CFrame.Angles(math.rad(-165.1-5*math.cos(ma/25)),math.rad(0),math.rad(-40))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1,.75,.1)*CFrame.Angles(math.rad(-165-5*math.cos(ma/25)),math.rad(0),math.rad(40))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0+10*math.cos(ma/25)),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(25+10*math.cos(ma/25)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3)elseif Z>=b/3.125 then X="Walk" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-.5*math.sin(ma/25))*CFrame.Angles(math.rad(-90+5*math.cos(ma/25)),math.rad(0),math.rad(0)),.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,-.1,0)*CFrame.Angles(math.rad(25+5*math.cos(ma/25)),math.rad(0),math.rad(0)),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1,.75,.1)*CFrame.Angles(math.rad(-165.1-5*math.cos(ma/25)),math.rad(0),math.rad(-40))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1,.75,.1)*CFrame.Angles(math.rad(-165-5*math.cos(ma/25)),math.rad(0),math.rad(40))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0+10*math.cos(ma/25)),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(25+10*math.cos(ma/25)),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.7/3)end _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="nebula"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b/3.125 then X="Idle" V.HipHeight=1.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0-.5*math.sin(ma/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(140+5*math.cos(N/32)),math.rad(0),math.rad(0))*S,0.8/10) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5))*R,0.8/10) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(80+10*math.sin(ma/78)),math.rad(0))*CFrame.Angles(math.rad(-3+1*math.sin(ma/58)),math.rad(0),math.rad(2.5+8*math.sin(ma/43))),0.8) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(0),math.rad(-80-10*math.sin(ma/81)),math.rad(0))*CFrame.Angles(math.rad(-3+1*math.sin(ma/63)),math.rad(0),math.rad(0+15*math.sin(ma/49))),0.8)elseif Z>=b/3.125 then X="Walk" V.HipHeight=1.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0-0.15*math.cos(ma/47),-0.5,0.5+0.1*math.cos(ma/28))*CFrame.Angles(math.rad(70),math.rad(0-Q.RotVelocity.Y),math.rad(0-Q.RotVelocity.Y*4.5+3*math.cos(ma/47))),.2/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(ma/52)),math.rad(0-3*math.cos(ma/37)),math.rad(0+2*math.cos(ma/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(ma/59)),math.rad(-20+7*math.cos(ma/62)),math.rad(20+5*math.cos(ma/50)))*S,.2/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.1*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(ma/55)),math.rad(20+8*math.cos(ma/67)),math.rad(-20-4*math.cos(ma/29)))*R,.2/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(ma/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(ma/38))),.2/3)end end elseif da.Value=="purple"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then if math.random(1,32+fa.PlaybackLoudness/7)==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(math.random(-100000-fa.PlaybackLoudness/7,100000+fa.PlaybackLoudness/7)),math.rad(math.random(-99999-fa.PlaybackLoudness/7,99999+fa.PlaybackLoudness/7)),math.rad(math.random(-200-fa.PlaybackLoudness/7,48375935+fa.PlaybackLoudness/7))),1/2)end if math.random(1,20+fa.PlaybackLoudness/7)==1 then ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.sin(ma/12),0)*CFrame.Angles(math.rad(math.random(-90-fa.PlaybackLoudness/7,90+fa.PlaybackLoudness/7)),math.rad(math.random(-30-fa.PlaybackLoudness/7,30+fa.PlaybackLoudness/7)),math.rad(math.random(-50-fa.PlaybackLoudness/7,50+fa.PlaybackLoudness/7)))*S,1/2) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.05*math.sin(ma/12),0)*CFrame.Angles(math.rad(math.random(-10000-fa.PlaybackLoudness/7,10000+fa.PlaybackLoudness/7)),math.rad(math.random(-900-fa.PlaybackLoudness/7,900+fa.PlaybackLoudness/7)),math.rad(math.random(-20-fa.PlaybackLoudness/7,20+fa.PlaybackLoudness/7)))*R,1/2)end V.HipHeight=1.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,1.5+1*math.cos(ma/39))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10)),0.8) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1/2) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(ma/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(40+fa.PlaybackLoudness/7.5),math.rad(0),math.rad(-10))*R,1) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(80+10*math.sin(ma/78)),math.rad(0))*CFrame.Angles(math.rad(-3+1*math.sin(ma/58)),math.rad(0),math.rad(2.5+8*math.sin(ma/43))),0.8) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.5,-0.5)*CFrame.Angles(math.rad(0),math.rad(-80-10*math.sin(ma/81)),math.rad(0))*CFrame.Angles(math.rad(-3+1*math.sin(ma/63)),math.rad(0),math.rad(0+15*math.sin(ma/49))),0.8)elseif Z>=b then X="Walk" V.HipHeight=1.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0-0.15*math.cos(ma/47),-0.5,0.5+0.1*math.cos(ma/28))*CFrame.Angles(math.rad(70),math.rad(0-Q.RotVelocity.Y),math.rad(0-Q.RotVelocity.Y*4.5+3*math.cos(ma/47))),.2/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(ma/52)),math.rad(0-3*math.cos(ma/37)),math.rad(0+2*math.cos(ma/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(ma/59)),math.rad(-20+7*math.cos(ma/62)),math.rad(20+5*math.cos(ma/50)))*S,.2/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.1*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(ma/55)),math.rad(20+8*math.cos(ma/67)),math.rad(-20-4*math.cos(ma/29)))*R,.2/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(ma/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(ma/38))),.2/3)end end elseif da.Value=="addict"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then if math.random(1,20+fa.PlaybackLoudness/7)==1 then ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.sin(ma/12),0)*CFrame.Angles(math.rad(math.random(-90-fa.PlaybackLoudness/7,90+fa.PlaybackLoudness/7)),math.rad(math.random(-30-fa.PlaybackLoudness/7,30+fa.PlaybackLoudness/7)),math.rad(math.random(-50-fa.PlaybackLoudness/7,50+fa.PlaybackLoudness/7)))*S,1/2) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.05*math.sin(ma/12),0)*CFrame.Angles(math.rad(math.random(-10000-fa.PlaybackLoudness/7,10000+fa.PlaybackLoudness/7)),math.rad(math.random(-900-fa.PlaybackLoudness/7,900+fa.PlaybackLoudness/7)),math.rad(math.random(-20-fa.PlaybackLoudness/7,20+fa.PlaybackLoudness/7)))*R,1/2)end V.HipHeight=1.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,1.5+1*math.cos(ma/39))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10)),0.8) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(15-2.5*math.sin(N/12)),math.rad(math.random(-25,25)),math.rad(0)),0.15) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.sin(ma/12),0)*CFrame.Angles(math.rad(100+2*math.cos(ma/12)),math.rad(0),math.rad(15+3*math.cos(ma/12)-3*math.sin(ma/12)))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0))*S,1/2) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(0),math.rad(math.random(-25,25)),math.rad(-12))*R,0.15) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-17+9.4*math.cos(ma/26)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.5,-0.5)*CFrame.Angles(math.rad(-22+10.8*math.cos(ma/32)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1)elseif Z>=b then X="Walk" V.HipHeight=1.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0-0.15*math.cos(ma/47),-0.5,0.5+0.1*math.cos(ma/28))*CFrame.Angles(math.rad(70),math.rad(0-Q.RotVelocity.Y),math.rad(0-Q.RotVelocity.Y*4.5+3*math.cos(ma/47))),.2/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(ma/52)),math.rad(0-3*math.cos(ma/37)),math.rad(0+2*math.cos(ma/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(ma/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.1*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(ma/55)),math.rad(20+8*math.cos(ma/67)),math.rad(-20-4*math.cos(ma/29)))*R,.2/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(ma/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(ma/38))),.2/3)end end elseif da.Value=="omg"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" V.HipHeight=0 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,-0.1,-0.1+0.05*math.cos(ma/12))*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),0.15/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(160),0,math.rad(15-5*math.sin(ma/25)))*S,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.025*math.cos(ma/12),0)*CFrame.Angles(math.rad(0),math.rad(0+7.5*math.sin(ma/12)),math.rad(-12-7.5*math.sin(ma/12)))*R,0.15/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1-0.05*math.cos(ma/12),-0.01)*CFrame.Angles(math.rad(20),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),0.15/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-0.05*math.cos(ma/12),-0.01)*CFrame.Angles(math.rad(5),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),0.15/3) la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(20),math.rad(-10-2.5*math.sin(ma/10)),math.rad(20*math.cos(ma/10))),1/3)elseif Z>=b then V.HipHeight=0 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-0.175+0.025*math.cos(ma/3.5)+-math.sin(ma/3.5)/7)*CFrame.Angles(math.rad(9-2.5*math.cos(ma/3.5)),math.rad(0),math.rad(10*math.cos(ma/7))),0.15) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(0+math.random(-15,15)),math.rad(0+math.random(-15,15)),math.rad(0+math.random(-15,15))),0.35/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.925-0.5*math.cos(ma/7)/2,0.5*math.cos(ma/7)/2)*CFrame.Angles(math.rad(-15-35*math.cos(ma/7))+-math.sin(ma/7)/2.5,math.rad(90-2*math.cos(ma/7)),math.rad(0))*CFrame.Angles(math.rad(0+2.5*math.cos(ma/7)),math.rad(0),math.rad(0)),0.3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.925+0.5*math.cos(ma/7)/2,-0.5*math.cos(ma/7)/2)*CFrame.Angles(math.rad(-15+35*math.cos(ma/7))+math.sin(ma/7)/2.5,math.rad(-90-2*math.cos(ma/7)),math.rad(0))*CFrame.Angles(math.rad(0-2.5*math.cos(ma/7)),math.rad(0),math.rad(0)),0.3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-60-5*math.cos(ma/12)),math.rad(0-2.5*math.cos(ma/12)),math.rad(5+2.5*math.cos(ma/12)))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1,0.5+0.05*math.sin(ma/30),0.025*math.cos(ma/20))*CFrame.Angles(math.rad(-70)*math.cos(ma/7),math.rad(-90),math.rad(-5)),0.1)end end elseif da.Value=="hell"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then V.HipHeight=2.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3-.5*math.sin(ma/50))*CFrame.Angles(math.rad(50+4*math.sin(ma/100)),math.rad(0),math.rad(0)),0.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20),math.rad(10*math.cos(ma/100)),math.rad(0)),1) if math.random(1,60)==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.cos(ma/100))+math.random(-20,20)),math.rad(math.random(-20,20))),1)end ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(40.6-4*math.sin(ma/50)),math.rad(0),math.rad(0))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(40),math.rad(0),math.rad(-10-10*math.sin(ma/50)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(5+10*math.sin(ma/45))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-5-10*math.sin(ma/45))),1/3)elseif Z>=b then X="Walk" V.HipHeight=2.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0-0.15*math.cos(ma/47),-0.5,0.5+0.1*math.cos(ma/28))*CFrame.Angles(math.rad(70),math.rad(0-Q.RotVelocity.Y),math.rad(0-Q.RotVelocity.Y*4.5+3*math.cos(ma/47))),.2/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(ma/52)),math.rad(0-3*math.cos(ma/37)),math.rad(0+2*math.cos(ma/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(ma/59)),math.rad(-20+7*math.cos(ma/62)),math.rad(20+5*math.cos(ma/50)))*S,.2/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.1*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(ma/55)),math.rad(20+8*math.cos(ma/67)),math.rad(-20-4*math.cos(ma/29)))*R,.2/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(ma/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(ma/38))),.2/3)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="corrupt"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" V.HipHeight=2 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,.5*math.cos(ea/50))*CFrame.Angles(math.rad(25),math.rad(2*math.cos(ea/50)),0),.25) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(15),math.rad(0),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(25),0,math.rad(5+2*math.cos(ea/50)))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(25),0,math.rad(-5-2*math.sin(ea/50)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(9*math.cos(ea/50)),math.rad(80),0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-5+9*math.sin(ea/50)),math.rad(-80),0),.25)elseif Z>=b then X="Walk" V.HipHeight=2 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,.5*math.cos(ea/50))*CFrame.Angles(math.rad(30),0,0),.25) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(-5),math.rad(0),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-15),0,math.rad(5+2*math.cos(ea/50)))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-15),0,math.rad(-5-2*math.sin(ea/50)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-10+9*math.cos(ea/50)),math.rad(80),0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15+9*math.sin(ea/50)),math.rad(-80),0),.25)end _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="sis"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b/3.125 then X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3-.5*math.sin(ma/50))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(20),math.rad(10*math.cos(ma/100)),math.rad(0)),1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-199-4*math.sin(ma/50)),math.rad(0),math.rad(10))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(20),math.rad(0),math.rad(-10-10*math.sin(ma/50)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.sin(ma/50))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.sin(ma/50))),1/3)elseif Z>=b/3.125 then X="Walk" ia.C0=Clerp(ia.C0,ba*CFrame.new(0-0.15*math.cos(ma/47),-0.5,0.5+0.1*math.cos(ma/28))*CFrame.Angles(math.rad(70),math.rad(0-Q.RotVelocity.Y),math.rad(0-Q.RotVelocity.Y*4.5+3*math.cos(ma/47))),.2/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-17-5*math.cos(ma/52)),math.rad(0-3*math.cos(ma/37)),math.rad(0+2*math.cos(ma/78))),.2/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5+0.05*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-4*math.cos(ma/59)),math.rad(-20+7*math.cos(ma/62)),math.rad(20+5*math.cos(ma/50)))*S,.2/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5+0.1*math.cos(ma/28),0)*CFrame.Angles(math.rad(-8-3*math.cos(ma/55)),math.rad(20+8*math.cos(ma/67)),math.rad(-20-4*math.cos(ma/29)))*R,.2/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.6)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(1.5),math.rad(0),math.rad(-20-5*math.cos(ma/34))),.2/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(20+2*math.cos(ma/38))),.2/3)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="lcv1"then change=1 if X=="Walk"and Z>1 then ia.C1=Clerp(ia.C1,G*CFrame.new(0,0,0.1+0.05*math.cos(ma/6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)-a.RotVelocity.Y/30),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,.95-.2*math.sin(ma/12),-.15*math.sin(ma/12))*CFrame.Angles(math.rad(-5),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-10+35*math.cos(ma/12))),0.6/3) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,.95+.2*math.sin(ma/12),.15*math.sin(ma/12))*CFrame.Angles(math.rad(-5),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10+35*math.cos(ma/12))),0.6/3)elseif(X~="Walk")or(Z<1)then ia.C1=Clerp(ia.C1,G*CFrame.new()*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.7/3) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.7/3)end if Q.Velocity.y>1 and U==nil then X="Jump" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0)*CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1/3) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-25),math.rad(0),math.rad(10)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-50),math.rad(0),math.rad(0+10*math.cos(ma/12)))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(50),math.rad(0),math.rad(-25-10*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.4,-0.6)*CFrame.Angles(math.rad(1),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-85),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3)end elseif Q.Velocity.y<-1 and U==nil then X="Fall" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0)*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),1/3) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-15),math.rad(2.5),math.rad(5+5*math.cos(ma/12))),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-90-4*math.cos(ma/6)),math.rad(0),math.rad(0+10*math.cos(ma/12)))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(35-4*math.cos(ma/6)),math.rad(0),math.rad(-45-10*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.3,-0.7)*CFrame.Angles(math.rad(-25+5*math.sin(ma/12)),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.8,-0.3)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3)end elseif Z<1 and U~=nil then X="Idle" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0+0.05*math.cos(ma/12))*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),1/3) la.C0=Clerp(la.C0,E*CFrame.new()*CFrame.Angles(math.rad(-15-3*math.cos(ma/12)),math.rad(5),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(ma/12),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(ma/12)),math.rad(0),math.rad(5))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5+0.1*math.cos(ma/12),-0)*CFrame.Angles(math.rad(15-1.5*math.cos(ma/12)),math.rad(0-6*math.cos(ma/12)),math.rad(0-6*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1.1-0.05*math.cos(ma/12),0)*CFrame.Angles(math.rad(15),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1.1-0.05*math.cos(ma/12),0)*CFrame.Angles(math.rad(10),math.rad(-70),math.rad(0))*CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1/3)end elseif Z>2 and U~=nil then X="Walk" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0+0.05*math.cos(ma/12))*CFrame.Angles(math.rad(20),math.rad(0+2.5*math.cos(ma/12)),math.rad(0-2.5*math.cos(ma/12))),1/3) la.C0=Clerp(la.C0,E*CFrame.new()*CFrame.Angles(math.rad(-20-3*math.cos(ma/12)),math.rad(0-2.5*math.cos(ma/12)),math.rad(0-2.5*math.cos(ma/12))),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-60-5*math.cos(ma/12)),math.rad(0-2.5*math.cos(ma/12)),math.rad(5+2.5*math.cos(ma/12)))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0-0.2*math.cos(ma/12))*CFrame.Angles(math.rad(20-45*math.cos(ma/12)),math.rad(0-10*math.cos(ma/12)),math.rad(0+2.5*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(85),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-85),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1/3)end end V.WalkSpeed=10 elseif da.Value=="SpeedOfLight"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then V.HipHeight=1.5 X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,math.cos(ma/15))*CFrame.Angles(math.rad(20*math.sin(ma/15)),0,0),.25) la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(10-5*math.cos(ma/12)),math.rad(10*math.cos(ma/12)),math.rad(5*math.cos(ma/12))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(ma/12),0)*CFrame.Angles(math.rad(-75+1.75*math.cos(ma/12)),0,math.rad(5))*S,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1,0.5,-0.6)*CFrame.Angles(math.rad(165),math.rad(0),math.rad(50))*R,0.15/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.4,-0.5)*CFrame.Angles(math.rad(0+6.5*math.sin(ma/12)),math.rad(90),math.rad(40*math.sin(ma/34)))*CFrame.Angles(math.rad(-3),math.rad(0-1*math.cos(ma/36)),math.rad(-10-2*math.cos(ma/39))),0.2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(10+4.6*math.sin(ma/12)),math.rad(-90),math.rad(20*math.sin(ma/34)))*CFrame.Angles(math.rad(-3),math.rad(0-1*math.cos(ma/36)),math.rad(10+6*math.cos(ma/31))),0.2)elseif Z>=b then V.HipHeight=1.5 X="Walk" la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(10-2*math.sin(ma/3)),math.rad(0),math.rad(0-5*math.sin(ma/6))),0.8) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20),math.rad(0),math.rad(-12))*R,0.8) ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-0.1+0.15*math.sin(ma/3))*CFrame.Angles(math.rad(15+3*math.sin(ma/3)),math.rad(0),math.rad(0+5*math.sin(ma/6))),0.8) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5+70*math.sin(ma/6))),0.8) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(5+70*math.sin(ma/6))),0.8)end end elseif da.Value=="mlc"then change=1 if X=="Walk"and Z>1 then ia.C1=Clerp(ia.C1,G*CFrame.new(0,0,0.1+0.05*math.cos(ma/6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)-a.RotVelocity.Y/30),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,.95-.2*math.sin(ma/12),-.15*math.sin(ma/12))*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-10+35*math.cos(ma/12))),0.6/3) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,.95+.2*math.sin(ma/12),.15*math.sin(ma/12))*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10+35*math.cos(ma/12))),0.6/3)elseif(X~="Walk")or(Z<1)then ia.C1=Clerp(ia.C1,G*CFrame.new()*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.7/3) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.7/3)end if Q.Velocity.y>1 and U==nil then X="Jump" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0)*CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1/3) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-25),math.rad(0),math.rad(10)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(170),math.rad(0),math.rad(0+10*math.cos(ma/12)))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(50),math.rad(0),math.rad(-25-10*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.4,-0.6)*CFrame.Angles(math.rad(1),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-85),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3)end elseif Q.Velocity.y<-1 and U==nil then X="Fall" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0)*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),1/3) la.C0=Clerp(la.C0,E*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-15),math.rad(2.5),math.rad(5+5*math.cos(ma/12))),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(175-4*math.cos(ma/6)),math.rad(0),math.rad(0+10*math.cos(ma/12)))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(35-4*math.cos(ma/6)),math.rad(0),math.rad(-45-10*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.3,-0.7)*CFrame.Angles(math.rad(-25+5*math.sin(ma/12)),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-0.8,-0.3)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(-1*math.sin(ma/6)),math.rad(0),math.rad(0)),1/3)end elseif Z<1 and U~=nil then X="Idle" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0+0.05*math.sin(ma/32))*CFrame.Angles(math.rad(15),math.rad(0),math.rad(0)),1/3) la.C0=Clerp(la.C0,E*CFrame.new()*CFrame.Angles(math.rad(-15-3*math.cos(ma/32)),math.rad(0),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+0.1*math.cos(ma/32),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(ma/32)),math.rad(0),math.rad(5))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5+0.1*math.cos(ma/32),-0)*CFrame.Angles(math.rad(15-1.5*math.cos(ma/32)),math.rad(0-6*math.cos(ma/32)),math.rad(0-6*math.cos(ma/32)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1.1-0.05*math.sin(ma/32),0)*CFrame.Angles(math.rad(15),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1.1-0.05*math.sin(ma/32),0)*CFrame.Angles(math.rad(10),math.rad(-70),math.rad(0))*CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1/3)end elseif Z>2 and U~=nil then X="Walk" if U==false then ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0+0.05*math.sin(ma/12))*CFrame.Angles(math.rad(15),math.rad(0+2.5*math.cos(ma/12)),math.rad(0-2.5*math.cos(ma/12))),1/3) la.C0=Clerp(la.C0,E*CFrame.new()*CFrame.Angles(math.rad(-5-3*math.cos(ma/12)),math.rad(0-2.5*math.cos(ma/12)),math.rad(0-2.5*math.cos(ma/12))),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(150),math.rad(0-2.5*math.cos(ma/12)),math.rad(5+2.5*math.cos(ma/12)))*F,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0-0.2*math.cos(ma/12))*CFrame.Angles(math.rad(5-45*math.cos(ma/12)),math.rad(0-10*math.cos(ma/12)),math.rad(0+2.5*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(85),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-85),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1/3)end end V.HipHeight=0 V.WalkSpeed=10 elseif da.Value=="MaddoxLC"then HipVal=3 change=1 b=25 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if U==false then if Z<b then X="Idle" V.HipHeight=HipVal ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0-.5*math.sin(ma/20))*CFrame.Angles(math.rad(-30.9-5*math.cos(ma/20)),0,0),.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(35-2*math.cos(ma/20)),math.rad(0),math.rad(0)),0.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(130),math.rad(0),math.rad(15))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20+8.5*math.cos(ma/20)),math.rad(0),math.rad(-25-5*math.cos(ma/20)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0+38*math.cos(ma/20)),math.rad(80),math.rad(0))*CFrame.Angles(0,0,math.rad(15-25*math.cos(ma/20))),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-30.9+38*math.cos(ma/20)),math.rad(-80),math.rad(0))*CFrame.Angles(0,0,math.rad(-15+25*math.cos(ma/20))),0.7/3)elseif Z>=b then X="Walk" V.HipHeight=HipVal ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0-.5*math.sin(ma/20))*CFrame.Angles(math.rad(40-1*math.cos(ma/20)),0,0),.25) la.C0=Clerp(la.C0,W*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(ma/19)))*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-50+35*math.cos(ma/20)),math.rad(80),math.rad(0))*CFrame.Angles(0,0,math.rad(15-25*math.cos(ma/20))),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-35+35*math.cos(ma/20)),math.rad(-80),math.rad(0))*CFrame.Angles(0,0,math.rad(-15+25*math.cos(ma/20))),0.7/3)end end elseif da.Value=="MaddoxLCv2"then HipVal=3 change=1 b=25 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if U==false then if Z<b then X="Idle" V.HipHeight=HipVal moving=false Y+=1 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*CFrame.new(0,0,0+.5*math.cos(Y/25))*CFrame.Angles(math.rad(0-1*math.cos(Y/54*1.2)),math.rad(0-2*math.cos(Y/54*1.5)),math.rad(-35)),1) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(0-3*math.cos(Y/54*1.2)),math.rad(0-4*math.cos(Y/54*1.5)),math.rad(35)),1) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(75+8.5*math.cos(Y/25)),math.rad(-20),math.rad(40))*L.rico,1) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(25+8.5*math.cos(Y/25)),math.rad(0),math.rad(-25-5*math.cos(Y/25)))*L.leco,1) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.sin(Y/25)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.sin(Y/25)),math.rad(0),math.rad(0)),1) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15+9*math.sin(Y/25)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.sin(Y/25)),math.rad(0),math.rad(0)),1)elseif Z>=b then X="Walk" V.HipHeight=HipVal moving=true Y+=1 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*CFrame.new(0,0,0+.5*math.cos(Y/25))*CFrame.Angles(math.rad(45),math.rad(0-2*math.cos(Y/54*1.5)),math.rad(-30)),1) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(-45-3*math.cos(Y/54*1.2)),math.rad(0-4*math.cos(Y/54*1.5)),math.rad(30)),1) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(-2),math.rad(14))*L.rico,1) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,CFrame.new(-.5,.5,-.5)*CFrame.Angles(math.rad(89),math.rad(0),math.rad(89))*L.leco,1) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,CFrame.new(1,-.5,0)*CFrame.Angles(math.rad(-15+9*math.sin(Y/25)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.sin(Y/25)),math.rad(0),math.rad(0)),1) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,CFrame.new(-1,-1,-.7)*CFrame.Angles(math.rad(-15+9*math.sin(Y/25)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.sin(Y/25)),math.rad(0),math.rad(0)),1)end end elseif da.Value=="walking_man"then local a=0 ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then V.HipHeight=0 V.WalkSpeed=50 local _=math.random(1,60) local b=false if _==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) b=true b=false end ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0+0.05*math.cos(ma/12))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-0)),1/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(20-2.5*math.sin(a/12)),math.rad(0),math.rad(30*math.cos(ma/12))),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(20),math.rad(0),math.rad(-10-10*math.sin(a/50)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1-0.05*math.cos(ma/12),-0.01)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-0.05*math.cos(ma/12),-0.01)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),1/3)elseif Z>=b then X="Walk" V.HipHeight=0 V.WalkSpeed=50 la.C0=Clerp(la.C0,W*CFrame.new(0,0,0+((1)-1))*CFrame.Angles(math.rad(10-2*math.sin(ma/3)),math.rad(0),math.rad(0-5*math.sin(ma/6))),0.8) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-20),math.rad(0),math.rad(-12))*R,0.8) ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-0.1+0.15*math.sin(ma/3))*CFrame.Angles(math.rad(15+3*math.sin(ma/3)),math.rad(0),math.rad(0+5*math.sin(ma/6))),0.8) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5+70*math.sin(ma/6))),0.8) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(5+70*math.sin(ma/6))),0.8)end end elseif da.Value=="floating_man_x2"then V.HipHeight=1.5 ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b/3.125 then X="Idle" V.HipHeight=1.5 la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(7+6.5*math.sin(ma/24)),math.rad(10*math.sin(ma/24)),math.rad(-55+0*math.sin(ma/24))),0.5/3) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,1*math.cos(ma/15))*CFrame.Angles(math.rad(-45*.5*math.sin(ma/15)),0,0),.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(0-5.5*math.sin(ma/12)),math.rad(5*math.sin(ma/12)),math.rad(-22+4.4*math.sin(ma/12)))*R,0.15) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.4,-0.5)*CFrame.Angles(math.rad(0+6.5*math.sin(ma/12)),math.rad(90),math.rad(40*math.sin(ma/34)))*CFrame.Angles(math.rad(-3),math.rad(0-1*math.cos(ma/36)),math.rad(-10-2*math.cos(ma/39))),0.2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(10+4.6*math.sin(ma/12)),math.rad(-90),math.rad(20*math.sin(ma/34)))*CFrame.Angles(math.rad(-3),math.rad(0-1*math.cos(ma/36)),math.rad(10+6*math.cos(ma/31))),0.2)elseif Z>=b then X="Walk" V.HipHeight=1.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0-.5*math.sin(ma/12))*CFrame.Angles(math.rad(40+1*math.cos(ma/12)),0,0),.25) la.C0=Clerp(la.C0,W*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(ma/19)))*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-5-9*math.cos(ma/12)),math.rad(80),math.rad(0)),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-9-9*math.cos(ma/12)),math.rad(-80),math.rad(0)),0.7/3)end end elseif da.Value=="hi"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then V.HipHeight=1 if Z<b then local _=false ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-.5*math.sin(ma/12.5))*CFrame.Angles(math.rad(40),0,0),.25) if _ then la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(-25),math.rad(10*math.sin(ma/25)),0),1) _=false else la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(-25),math.rad(10*math.sin(ma/25)),0),.25)end ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(40),0,math.rad(-10-10*math.sin(ma/25)))*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10*math.sin(ma/25))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10*math.sin(ma/25))),.25)elseif Z>=b then X="Walk" V.HipHeight=1 local _=false ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-.5*math.sin(ma/12.5))*CFrame.Angles(math.rad(40),0,0),.25) if _ then la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(-25),math.rad(10*math.sin(ma/25)),0),1) _=false else la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(-25),math.rad(10*math.sin(ma/25)),0),.25)end ha.C0=Clerp(ha.C0,CFrame.new(1.55,0.5,0.5)*CFrame.Angles(math.rad(250),math.rad(20),math.rad(-80))*S,1/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(90-4*math.sin(ma/25)),math.rad(5+2*math.sin(ma/25+math.random(-0.25,3))),math.rad(-2+5*math.sin(ma/25)))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-30-4*math.sin(ma/25-math.random(0.25,3))),math.rad(80),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-4*math.sin(ma/25-math.random(-0.25,3))),math.rad(-80),math.rad(0)),.7/3)end end elseif da.Value=="Lord"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" V.HipHeight=2 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,math.cos(ma/25),-math.sin(ma/25))*CFrame.Angles(math.rad(5*math.sin(ma/25)),0,0),.25) la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(5*math.cos(ma/25)),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(160),0,math.rad(15-5*math.sin(ma/25)))*S,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-15+5*math.sin(ma/25)))*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-1-.1*math.sin(ma/25),-.01)*CFrame.Angles(0,math.rad(80),0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.5-.25*math.sin(ma/25),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)elseif Z>=b then V.HipHeight=2 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,math.cos(ma/25),-math.sin(ma/25))*CFrame.Angles(math.rad(5*math.sin(ma/25)),0,math.rad(70)),.25) la.C0=Clerp(la.C0,W*CFrame.Angles(0,0,math.rad(-70))*CFrame.Angles(math.rad(5*math.cos(ma/25)),0,0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1,.5,-.25)*CFrame.Angles(0,math.rad(-10),math.rad(-90))*S,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-20+5*math.sin(ma/25)))*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-1-.1*math.sin(ma/25),-.01)*CFrame.Angles(0,math.rad(80),0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.5-.25*math.sin(ma/25),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)end end elseif da.Value=="Regele"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" V.HipHeight=3 Y+=1 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*CFrame.new(0,math.cos(Y/18),-math.sin(Y/18))*CFrame.Angles(math.rad(5*math.sin(Y/25)),0,0),.25) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*CFrame.Angles(math.rad(5*math.cos(Y/18)),0,0),.25) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(0,0,math.rad(15-5*math.sin(Y/18)))*L.rico,.25) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-15+5*math.sin(Y/18)))*L.leco,.25) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,CFrame.new(1,-1-.1*math.sin(Y/18),-.01)*CFrame.Angles(0,math.rad(80),0),.25) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,CFrame.new(-1,-.5-.25*math.sin(Y/18),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)elseif Z>=b then V.HipHeight=3 Y+=1 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*CFrame.new(0,math.cos(Y/18),-math.sin(Y/18))*CFrame.Angles(math.rad(5*math.sin(Y/18)),0,math.rad(70)),.25) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*CFrame.Angles(0,0,math.rad(-70))*CFrame.Angles(math.rad(5*math.cos(Y/18)),0,0),.25) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,CFrame.new(1,.5,-.25)*CFrame.Angles(0,math.rad(-10),math.rad(-90))*L.rico,.25) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-20+5*math.sin(Y/18)))*L.leco,.25) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,CFrame.new(1,-1-.1*math.sin(Y/18),-.01)*CFrame.Angles(0,math.rad(80),0),.25) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,CFrame.new(-1,-.5-.25*math.sin(Y/18),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)end _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="friday"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b/3.125 then X="Idle" V.HipHeight=2.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0+.5*math.cos(ma/4))*CFrame.Angles(math.rad(0),math.rad(-10*math.cos(ma/13)),math.rad(0)),0.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(-15*math.cos(ma/13)),math.rad(0)),1/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(135+-15*math.cos(ma/13)),math.rad(0),math.rad(25+15*math.cos(ma/13)))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(5),math.rad(5),math.rad(-10+15*math.cos(ma/13)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(10+10*math.sin(ma/4))),1/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-80),math.rad(-10-10*math.sin(ma/4))),1/3)elseif Z>=b/3.125 then X="Walk" V.HipHeight=2.5 ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,0+.5*math.cos(ma/15))*CFrame.Angles(math.rad(40),math.rad(-5*math.cos(ma/30)),math.rad(0)),0.7/3) la.C0=Clerp(la.C0,W*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),0.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(5+2*math.cos(ma/19)))*S,0.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(0),math.rad(-5-2*math.cos(ma/19)))*R,0.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-0.5,-0.5)*CFrame.Angles(math.rad(-20+9*math.cos(ma/74)),math.rad(80),math.rad(0))*CFrame.Angles(math.rad(0+5*math.cos(ma/37)),math.rad(0),math.rad(0)),0.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(ma/54)),math.rad(-80),math.rad(0))*CFrame.Angles(math.rad(0-5*math.cos(ma/41)),math.rad(0),math.rad(0)),0.7/3)end _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="ILord"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then V.HipHeight=2.3 X="Idle" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-.5*math.sin(ma/25))*CFrame.Angles(math.rad(20),0,0),.25) if o then la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(20),math.rad(10*math.sin(ma/50)),0),1) o=false else la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(20),math.rad(10*math.sin(ma/50)),0),.25)end if math.random(1,60)==1 then la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.sin(ma/50))+math.random(-20,20)),math.rad(math.random(-20,20))),1)end ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-10),0,0)*S,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(ma/25)))*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.cos(ma/25))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.cos(ma/25))),.25)elseif Z>=b then V.HipHeight=2.3 X="Walk" ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-.5*math.sin(ma/25))*CFrame.Angles(math.rad(20),0,0),.25) if o then la.C0=Clerp(la.C0,W,1) o=false else la.C0=Clerp(la.C0,W,.25)end if math.random(1,60)==1 then la.C0=Clerp(la.C0,W*CFrame.Angles(math.rad(math.random(-20,20)),math.rad(math.random(-20,20)),math.rad(math.random(-20,20))),1)end ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-10),0,0)*S,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.cos(ma/25)))*R,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.cos(ma/25))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.cos(ma/25))),.25)end end elseif da.Value=="kArmA"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" local _=math.random(1,60) local a=false if _==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3-.5*math.sin(ma/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(ma/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(20),math.rad(5+2*math.sin(ma/25+math.random(-0.25,3))),math.rad(-2+5*math.sin(ma/25)))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-20-4*math.sin(ma/25-math.random(0.25,3))),math.rad(80),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-10-4*math.sin(ma/25-math.random(-0.25,3))),math.rad(-80),math.rad(0)),.7/3)elseif Z>=b then X="Walk" local _=math.random(1,60) local a=false if _==1 then la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(500,500)),math.rad(math.random(500,500)),math.rad(math.random(500,500))),1) a=true a=false end ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,3-.5*math.sin(ma/25))*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.8/3) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(25-math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3)),math.rad(math.random(0.25,3))),.7/3) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(ma/25)),math.rad(math.random(-0.25,3)),math.rad(math.random(0.25,3)))*S,.7/3) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(90-4*math.sin(ma/25)),math.rad(5+2*math.sin(ma/25+math.random(-0.25,3))),math.rad(-2+5*math.sin(ma/25)))*R,.7/3) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(-30-4*math.sin(ma/25-math.random(0.25,3))),math.rad(80),math.rad(0)),.7/3) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-4*math.sin(ma/25-math.random(-0.25,3))),math.rad(-80),math.rad(0)),.7/3)end end elseif da.Value=="uwuman"then ia.C1=Clerp(ia.C1,ba*CFrame.new(0,0,0),0.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-0.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3) ja.C1=Clerp(ja.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) if U==false then if Z<b/3.125 then X="Idle" V.HipHeight=3 Y+=1 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*CFrame.new(0,.25*math.cos(Y/16),.4*math.sin(Y/16))*CFrame.Angles(math.rad(10-2.5*math.cos(Y/16)),0,0),.1) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*CFrame.Angles(math.rad(16.5-1.5*math.cos(Y/16)),math.rad(2.5-5.5*math.cos(Y/16)),math.rad(-16.5*math.cos(Y/15+.4*math.cos(Y/20)))),.1) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,CFrame.new(1.45,.6+.05*math.sin(Y/16),0)*CFrame.Angles(math.rad(5+5*math.cos(Y/16)),math.rad(-5),math.rad(28+4*math.sin(Y/16)))*L.rico,.1) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,CFrame.new(-1.45,.6+.05*math.sin(Y/16),0)*CFrame.Angles(math.rad(5+5*math.cos(Y/16)),math.rad(5),math.rad(-28-4*math.sin(Y/16)))*L.leco,.1) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,CFrame.new(1,-.45+.1*math.sin(Y/16),-.4)*CFrame.Angles(math.rad(-21.5+10*math.sin(Y/16)),math.rad(65),math.rad(2.5)),.1) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,CFrame.new(-1,-.85+.1*math.sin(Y/16),-.1)*CFrame.Angles(math.rad(-11.5+5*math.sin(Y/16)),math.rad(-65),math.rad(-2.5)),.1)elseif Z>=b/3.125 then X="Walk" V.HipHeight=3 Y+=1 local _=((Q.Velocity*Q.CFrame.RightVector).X+(Q.Velocity*Q.CFrame.RightVector).Z)/50 local a=((Q.Velocity*Q.CFrame.LookVector).X+(Q.Velocity*Q.CFrame.LookVector).Z)/50 ca.welds.rot.C0=T.Clerp(ca.welds.rot.C0,L.roto*CFrame.new(0,0,.6*math.sin(Y/16)*_*a)*CFrame.new(_+(1.5*_)*math.sin(Y/16),a-a*math.cos(Y/16),-.185+.045*math.cos(Y/56))*CFrame.Angles(math.rad((-15*a*math.sin(Y/16))+(a*20)),math.rad(-_*50),math.rad(math.cos(Y/16))),.1) ca.welds.net.C0=T.Clerp(ca.welds.net.C0,L.neco*CFrame.Angles(math.rad((25+20*a*math.sin(Y/16))+(-a)*18),math.rad(_*5),math.rad(-_*45-1)),.1) ca.welds.rt.C0=T.Clerp(ca.welds.rt.C0,CFrame.new(1.45+.0*math.cos(Y/16),.5,0)*CFrame.Angles(math.rad((10*a*math.cos(Y/16))-a*25),math.rad(a*5),math.rad(18-(_*28)+a*-10*math.sin(Y/16)))*L.rico,.1) ca.welds.lt.C0=T.Clerp(ca.welds.lt.C0,CFrame.new(-1.45+.0*math.cos(Y/16),.5,0)*CFrame.Angles(math.rad((10*a*math.cos(Y/16))-a*25),math.rad(-a*5),math.rad(-18-(_*28)+a*10*math.sin(Y/16)))*L.leco,.1) ca.welds.rh.C0=T.Clerp(ca.welds.rh.C0,CFrame.new(1,-.8,-.15)*CFrame.Angles(math.rad(-20-(20*math.cos(Y/16))*a),math.rad(85),math.rad((5*a)-_*15)),.1) ca.welds.lh.C0=T.Clerp(ca.welds.lh.C0,CFrame.new(-1,-.6,-.3)*CFrame.Angles(math.rad(-20-(20*math.cos(Y/16))*a),math.rad(-85),math.rad((-5*a)-_*15)),.1)end _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="MaddoxLCv3"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ia.C0=Qlerp(ia.C0,ba*CFrame.new(0,-.08*math.sin(ea/60),-.1+.1*math.cos(ea/60))*CFrame.Angles(math.rad(5*math.sin(ea/60)),0,math.rad(-5)),.25) la.C0=Qlerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(4+2*math.sin(ea/60)),0,math.rad(5)),.25) ha.C0=Qlerp(ha.C0,CFrame.new(1.5,0.5+.1*math.cos(ea/60),0)*CFrame.Angles(math.rad(-2*math.cos(ea/60)),0,math.rad(5*math.cos(ea/60)))*S,.25) ga.C0=Qlerp(ga.C0,CFrame.new(-1.5,0.5+.1*math.cos(ea/60),0)*CFrame.Angles(math.rad(-2*math.cos(ea/60)),0,math.rad(-5*math.cos(ea/60)))*R,.25) ja.C0=Qlerp(ja.C0,CFrame.new(1,-.9-.1*math.cos(ea/60),-0.01)*CFrame.Angles(0,math.rad(85),math.rad(5*math.sin(ea/60))),.25) ka.C0=Qlerp(ka.C0,CFrame.new(-1,-.9-.1*math.cos(ea/60),-0.01)*CFrame.Angles(0,math.rad(-85),math.rad(-5*math.sin(ea/60))),.25)elseif Z>=b then X="Walk" _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ia.C0=Qlerp(ia.C0,ba*CFrame.new(0,0,.055*math.sin(ea/5))*CFrame.Angles(math.rad(15),0,math.rad(5*math.sin(ea/10))),.25) la.C0=Qlerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(-5),0,math.rad(-5*math.sin(ea/10))),.25) ha.C0=Qlerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(25*math.sin(ea/10)),0,math.rad(5))*S,.25) ga.C0=Qlerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-25*math.sin(ea/10)),0,math.rad(-5))*R,.25) ja.C0=Qlerp(ja.C0,CFrame.new(1,-.8-.25*math.cos(ea/10),-.35+.3*math.sin(ea/10))*CFrame.Angles(0,math.rad(90-5*math.sin(ea/10)),math.rad(-45*math.sin(ea/10))),.25) ka.C0=Qlerp(ka.C0,CFrame.new(-1,-.8+.25*math.cos(ea/10),-.35-.3*math.sin(ea/10))*CFrame.Angles(0,math.rad(-90-5*math.sin(ea/10)),math.rad(-45*math.sin(ea/10))),.25)end end elseif da.Value=="MaddoxLCv3_8"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,u*CFrame.new(0,0,.5*math.cos(ea/24))*CFrame.Angles(math.rad(-14*math.sin(ea/24)),0,0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(3*math.cos(ea/24)),0,math.rad(5*math.sin(ea/48))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(135+15*math.sin(ea/24)),0,math.rad(26))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5+.3*math.cos(ea/24),0)*CFrame.Angles(math.rad(-14*math.sin(ea/24)),0,math.rad(-10+10*math.sin(ea/24)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+15*math.sin(ea/24))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(0,math.rad(-80),math.rad(-5-15*math.sin(ea/24))),.25)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,u*CFrame.new(0,0,.5*math.cos(ea/24))*CFrame.Angles(math.rad(45-5*math.sin(ea/24)),0,0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(-45+3*math.sin(ea/24)),0,math.rad(5*math.sin(ea/48))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45-3*math.sin(ea/24)),0,0)*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45-3*math.sin(ea/24)),0,0)*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(-15)),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(0,math.rad(-80),math.rad(15)),.25)end V.HipHeight=2 _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="MaddoxLCv3_9"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,u*CFrame.new(0,0,0.5*math.sin(ea/15))*CFrame.Angles(math.rad(-15*math.cos(ea/30)),math.rad(-15*math.cos(ea/30)),0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(15*math.sin(ea/30)),0,math.rad(-15*math.sin(ea/30))),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5-.125*math.sin(ea/30),0)*CFrame.Angles(math.rad(135+-15*math.cos(ea/30)),0,math.rad(25+15*math.cos(ea/30)))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5-.125*math.cos(ea/30),0)*CFrame.Angles(math.rad(15*math.cos(ea/30)),math.rad(5),math.rad(-10+15*math.cos(ea/30)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5+.25*math.sin(ea/30),-.5)*CFrame.Angles(math.rad(-15),math.rad(80),math.rad(15+15*math.sin(ea/30))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.25*math.cos(ea/30),0)*CFrame.Angles(0,math.rad(-80),math.rad(-10-10*math.sin(ea/30))),.25)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,u*CFrame.new(0,0,0.5*math.sin(ea/15))*CFrame.Angles(math.rad(45),math.rad(0-2*math.sin(ea/30)),0),.25) la.C0=Clerp(la.C0,v*CFrame.new(0,0,0+1-1)*CFrame.Angles(math.rad(-45+3*math.sin(ea/54*1.2)),math.rad(0-4*math.sin(ea/30)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(-2),0)*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-45),math.rad(2),0)*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5+.1*math.cos(ea/15),-.5)*CFrame.Angles(math.rad(-15+9*math.cos(ea/15)),math.rad(80),0)*CFrame.Angles(0,0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.1*math.sin(ea/15),0)*CFrame.Angles(math.rad(-15+9*math.cos(ea/15)),math.rad(-80),0)*CFrame.Angles(0,0,0),.25)end V.HipHeight=2 _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="MaddoxLCv3_10"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,u*CFrame.new(0,.5*math.sin(ea/50),.5*math.cos(ea/50))*CFrame.Angles(math.rad(15*math.cos(ea/50)),0,0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(20-13*math.cos(ea/50)),math.rad(5*math.cos(ea/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(.6,.4,-.8)*CFrame.Angles(math.rad(-10+2*math.cos(ea/50)),0,math.rad(-90))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-.6,.4,-.7)*CFrame.Angles(math.rad(5*math.cos(ea/50)),0,math.rad(90))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5+.1*math.cos(ea/50),-.5)*CFrame.Angles(0,math.rad(80),0)*CFrame.Angles(0,0,math.rad(-3+15*math.sin(ea/50))),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.9+.1*math.sin(ea/50),0)*CFrame.Angles(0,math.rad(-80),0)*CFrame.Angles(0,0,math.rad(-3-15*math.sin(ea/50))),.25)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,u*CFrame.new(0,0,.5*math.cos(ea/50))*CFrame.Angles(math.rad(56),math.rad(2*math.cos(ea/50)),0),.25) la.C0=Clerp(la.C0,v*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),math.rad(5*math.cos(ea/50)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-16),0,math.rad(5+2*math.cos(ea/19)))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-16),0,math.rad(-5-2*math.cos(ea/19)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(ea/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(ea/37)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(ea/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(ea/41)),0,0),.25)end V.HipHeight=2 _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="MaddoxLCv3_11"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,u*CFrame.new(0,0,.5*math.sin(ea/15))*CFrame.Angles(math.rad(7.5*math.cos(ea/15)),0,0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(15+5*math.cos(ea/15)),math.rad(10*math.cos(ea/15*.5)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5-.25*math.cos(ea/15),0)*CFrame.Angles(0,0,math.rad(15-17*math.cos(ea/15)))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5-.25*math.cos(ea/15),0)*CFrame.Angles(0,0,math.rad(-15+17*math.cos(ea/15)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5+.1*math.cos(ea/15),-.5)*CFrame.Angles(math.rad(-15),math.rad(80),0)*CFrame.Angles(math.rad(-3+5*math.cos(ea/15)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.05*math.sin(ea/15),0)*CFrame.Angles(0,math.rad(-80),0)*CFrame.Angles(math.rad(-3+5*math.cos(ea/15)),0,0),.25)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,u*CFrame.new(0,0,.5*math.sin(ea/15))*CFrame.Angles(math.rad(56),0,0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(-45+5*math.cos(ea/15)),math.rad(10*math.cos(ea/15*.5)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5-.125*math.cos(ea/15),0)*CFrame.Angles(math.rad(-16),0,math.rad(4-5*math.cos(ea/15)))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5-.125*math.cos(ea/15),0)*CFrame.Angles(math.rad(-16),0,math.rad(-4+5*math.cos(ea/15)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5+.1*math.cos(ea/15),-.5)*CFrame.Angles(math.rad(-15),math.rad(80),0)*CFrame.Angles(math.rad(-3+5*math.cos(ea/15)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1+.05*math.sin(ea/15),0)*CFrame.Angles(0,math.rad(-80),0)*CFrame.Angles(math.rad(-3+5*math.cos(ea/15)),0,0),.25)end V.HipHeight=2 _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0)end elseif da.Value=="MaddoxLCv3_13"then ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,u*CFrame.new(0,-.25*math.sin(ea/18),1*math.cos(ea/18))*CFrame.Angles(math.rad(7.5*math.cos(ea/18)),math.rad(7.5*math.sin(ea/18*.5)),0),.25) la.C0=Clerp(la.C0,v*CFrame.Angles(math.rad(15+5*math.sin(ea/18)),math.rad(5*math.sin(ea/18*.5)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,.5+.25*math.sin(ea/18),0)*CFrame.Angles(math.rad(170-1*math.sin(ea/18)),0,math.rad(0))*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,.5+.25*math.cos(ea/18),0)*CFrame.Angles(math.rad(-17*math.sin(ea/18)),0,math.rad(-15))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5-.1*math.cos(ea/18),-.5)*CFrame.Angles(math.rad(5-25*math.sin(ea/18)),math.rad(80),0)*CFrame.Angles(math.rad(-3),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1-.05*math.sin(ea/18),0)*CFrame.Angles(math.rad(-25*math.sin(ea/18)),math.rad(-80),0)*CFrame.Angles(math.rad(-3),0,0),.25)elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,u*CFrame.new(0,0,1*math.cos(ea/18))*CFrame.Angles(math.rad(60),0,math.rad(0-2*math.sin(ea/18*.5))),.25) la.C0=Clerp(la.C0,v*CFrame.new(0,0,0+1-1)*CFrame.Angles(math.rad(-60+3*math.sin(ea/18*.5)),math.rad(0+4*math.sin(ea/18*.5)),0),.25) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(-30),math.rad(-2),0)*y,.25) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(-30),math.rad(2),math.rad(-5*math.sin(ea/18)))*z,.25) ja.C0=Clerp(ja.C0,CFrame.new(1,-.5,0)*CFrame.Angles(math.rad(-15-9*math.sin(ea/18)),math.rad(80),0)*CFrame.Angles(math.rad(0-5*math.sin(ea/18)),0,0),.25) ka.C0=Clerp(ka.C0,CFrame.new(-1,-.5,-.5)*CFrame.Angles(math.rad(-15-9*math.sin(ea/18)),math.rad(-80),0)*CFrame.Angles(math.rad(0-5*math.sin(ea/18)),0,0),.25)end V.HipHeight=2 _a.Parent=K["Right Arm"] _a.Position=Vector3.new(0,-1.5,-0.7) _a.Orientation=Vector3.new(-0,90,-45)end elseif da.Value=="snakeskid"then _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ia.C1=Clerp(ia.C1,ba,.2/3) la.C1=Clerp(la.C1,CFrame.new(0,-.5,0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3) ja.C1=Clerp(ja.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1) ka.C1=Clerp(ka.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1) if not U then if Z<b then X="Idle" ia.C0=Clerp(ia.C0,ba*CF(0,0,0+.15*SIN(ma/32))*ANGLES(RAD(0),RAD(0),RAD(0)),0.15/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(40),RAD(-10),RAD(0)),0.15/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(10+5*SIN(ma/24)))*S,0.15/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(-10-5*SIN(ma/24)))*R,0.15/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-1-.15*SIN(ma/32),0)*ANGLES(RAD(0),RAD(90),RAD(0))*ANGLES(RAD(-8+2.5*SIN(ma/32)),RAD(0),RAD(0)),0.15/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-.15*SIN(ma/32),0)*ANGLES(RAD(0),RAD(-90),RAD(0))*ANGLES(RAD(-8+2.5*SIN(ma/32)),RAD(0),RAD(0)),0.15/Animation_Speed) snap=math.random(1,72) if snap==1 then la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(MRANDOM(-100000-fa.PlaybackLoudness/7,100000+fa.PlaybackLoudness/7)),RAD(MRANDOM(-99999-fa.PlaybackLoudness/7,99999+fa.PlaybackLoudness/7)),RAD(MRANDOM(-200-fa.PlaybackLoudness/7,48375935+fa.PlaybackLoudness/7))),1/Animation_Speed)end elseif Z>=b then X="Walk" ia.C0=Clerp(ia.C0,ba*CF(0,0,-0.1)*ANGLES(RAD(5),RAD(0),RAD(0)),0.15/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(MRANDOM(1,2)-2.5*SIN(N/12)),RAD(MRANDOM(1,2)),RAD(MRANDOM(1,2))),1/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(35*COS(N/WALKSPEEDVALUE)),RAD(0),RAD(5))*S,0.35/Animation_Speed) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0-0.2*math.cos(ma/12))*CFrame.Angles(math.rad(20+45*math.cos(ma/12)),math.rad(0-10*math.cos(ma/12)),math.rad(0+2.5*math.cos(ma/12)))*I,1/3) ja.C0=Clerp(ja.C0,CF(1,-1-0.15*COS(N/WALKSPEEDVALUE*2),-0.2+0.2*COS(N/WALKSPEEDVALUE))*ANGLES(RAD(0),RAD(90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(-15)),2/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-1-0.15*COS(N/WALKSPEEDVALUE*2),-0.2+-0.2*COS(N/WALKSPEEDVALUE))*ANGLES(RAD(0),RAD(-90),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(15)),2/Animation_Speed)end end else if U==false then end if da.Value=="Fave"then _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0),1) la.C0=Clerp(la.C0,E*CFrame.new(),1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*F,1) ga.C0=Clerp(ga.C0,CFrame.new(-1.3,0.7,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-135))*I,1) ja.C0=Clerp(ja.C0,CFrame.new(.5,-2,0),1) ka.C0=Clerp(ka.C0,CFrame.new(-.9,-1.9,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-25)),1) ja.C1=Clerp(ja.C1,CFrame.new(),1) ka.C1=Clerp(ka.C1,CFrame.new(),1)end if da.Value=="Krump"then _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ia.C0=Clerp(ia.C0,G*CFrame.new(0+1*math.sin(ma/3),0+1*math.cos(ma/3),-.75)*CFrame.Angles(math.rad(0),math.rad(-10),math.rad(0)),1) la.C0=Clerp(la.C0,E*CFrame.new(),1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))*F,1) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-90))*I,1) ja.C0=Clerp(ja.C0,CFrame.new(1.5,-1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(70)),1) ka.C0=Clerp(ka.C0,CFrame.new(-.5,-1.25,-.25)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(10)),1) ja.C1=Clerp(ja.C1,CFrame.new(),1) ka.C1=Clerp(ka.C1,CFrame.new(),1)elseif da.Value=="Memer"then _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ia.C0=Clerp(ia.C0,G*CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(-9000,9000)),math.rad(math.random(-9000,9000)),math.rad(math.random(-9000,9000))),1) la.C0=Clerp(la.C0,E*CFrame.new()*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(90),math.rad(0),math.rad(90))*F,1) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(90),math.rad(0),math.rad(-90))*I,1) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,-0.01)*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ja.C1=Clerp(ja.C1,CFrame.new()*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1) ka.C1=Clerp(ka.C1,CFrame.new()*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),1)elseif da.Value=="Smog"then _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ga.C0=Clerp(ga.C0,CFrame.new(-1,0.5,0,0,0,-1,0,1,0,1,0,0)*CFrame.new(-0.699999988079071+-0.25*math.cos(ea/12.5),0.5+0.20000000298023224*math.cos(ea/6.25),0+0*math.cos(ea/12.5))*CFrame.Angles(math.rad(-25+-90*math.cos(ea/12.5)),math.rad(0+-25*math.cos(ea/12.5)),math.rad(-145+-35*math.cos(ea/12.5))),0.2) ia.C0=Clerp(ia.C0,CFrame.new(0,0,0,-1,0,0,0,0,1,0,1,-0)*CFrame.new(0+0*math.cos(ea/12.5),0+0*math.cos(ea/12.5),-0.5+-0.5*math.cos(ea/6.25))*CFrame.Angles(math.rad(0+0*math.cos(ea/12.5)),math.rad(0+-9*math.cos(ea/12.5)),math.rad(0+0*math.cos(ea/12.5))),0.2) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0,0,0,-1,0,1,0,1,0,0)*CFrame.new(-0.5+0*math.cos(ea/12.5),0.5+0.5*math.cos(ea/6.25),0+0*math.cos(ea/12.5))*CFrame.Angles(math.rad(-9+15*math.cos(ea/12.5)),math.rad(15+0*math.cos(ea/6.25)),math.rad(9+0*math.cos(ea/12.5))),0.2) ha.C0=Clerp(ha.C0,CFrame.new(1,0.5,0,0,0,1,0,1,-0,-1,0,0)*CFrame.new(0.699999988079071+-0.25*math.cos(ea/12.5),0.5+0.20000000298023224*math.cos(ea/6.25),0+0*math.cos(ea/12.5))*CFrame.Angles(math.rad(-7.5+90*math.cos(ea/12.5)),math.rad(0+-25*math.cos(ea/12.5)),math.rad(145+-35*math.cos(ea/12.5))),0.2) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0,0,0,1,0,1,-0,-1,0,0)*CFrame.new(0.5+0*math.cos(ea/12.5),0.5+0.5*math.cos(ea/6.25),0+0*math.cos(ea/12.5))*CFrame.Angles(math.rad(-9+-15*math.cos(ea/12.5)),math.rad(-15+0*math.cos(ea/6.25)),math.rad(-9+0*math.cos(ea/12.5))),0.2) la.C0=Clerp(la.C0,CFrame.new(0,1,0,-1,0,0,0,0,1,0,1,-0)*CFrame.new(0+0*math.cos(ea/12.5),0+0*math.cos(ea/12.5),0+0*math.cos(ea/12.5))*CFrame.Angles(math.rad(-25+15*math.cos(ea/6.25)),math.rad(0+-25*math.cos(ea/12.5)),math.rad(0+0*math.cos(ea/12.5))),0.2)elseif da.Value=="Sit"then _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ia.C0=Clerp(ia.C0,ba*CFrame.new(0,0,-1.70)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),0.5) la.C0=Clerp(la.C0,W*CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),0.5) ha.C0=Clerp(ha.C0,CFrame.new(1.5,0.3,0.10)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0))*S,0.5) ga.C0=Clerp(ga.C0,CFrame.new(-1.5,0.3,0.10)*CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0))*R,0.15) ja.C0=Clerp(ja.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(45),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),0.5) ka.C0=Clerp(ka.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(45),math.rad(-90),math.rad(0))*CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),0.5)elseif da.Value=="nulled"then _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) change=1 B=B+5 ia.C0=Clerp(ia.C0,ba*CF(-0.25*COS(B/50),0,-0.5-0.5*COS(B/25))*ANGLES(RAD(0),RAD(0),RAD(45*SIN(B/50)))*ANGLES(RAD(45+22.5*COS(B/25)),RAD(0),RAD(0)),2/Animation_Speed) la.C0=Clerp(la.C0,W*CF(0,0,0+((1)-1))*ANGLES(RAD(-45-22.5*COS(B/25)),RAD(0),RAD(-45*SIN(B/50))),2/Animation_Speed) ha.C0=Clerp(ha.C0,CF(1.5,0.5,0)*ANGLES(RAD(175+65*SIN(B/25)),RAD(0),RAD(-45*SIN(B/12.5)))*CF(0,-0.5,0)*S,1/Animation_Speed) ga.C0=Clerp(ga.C0,CF(-1.5,0.5,0)*ANGLES(RAD(175+65*SIN(B/25)),RAD(0),RAD(45*SIN(B/12.5)))*CF(0,-0.5,0)*R,1/Animation_Speed) ja.C0=Clerp(ja.C0,CF(1,-0.5+0.5*COS(B/25),-0.5-0.5*COS(B/25))*ANGLES(RAD(0),RAD(70),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),2/Animation_Speed) ka.C0=Clerp(ka.C0,CF(-1,-0.5+0.5*COS(B/25),-0.5-0.5*COS(B/25))*ANGLES(RAD(0),RAD(-70),RAD(0))*ANGLES(RAD(0),RAD(0),RAD(0)),2/Animation_Speed)elseif da.Value=="OOOOO"then _a.Parent=K["Torso"] _a.Position=Vector3.new(0,0,0.7) _a.Orientation=Vector3.new(0,0,0) ia.C0=Clerp(ia.C0,G*CFrame.new(math.random(-1,1)/2,math.random(-1,1)/2,math.random(-1,1)/2)*CFrame.Angles(math.rad(math.random(-45,45)),math.rad(math.random(-45,45)),0),1) la.C0=Clerp(la.C0,E,1) ha.C0=Clerp(ha.C0,CFrame.new(2,0,0)*F*CFrame.Angles(math.rad(-90),0,0),1) ga.C0=Clerp(ga.C0,CFrame.new(-2,0,0)*I*CFrame.Angles(math.rad(-90),0,0),1) ja.C0=Clerp(ja.C0,CFrame.new(.5,-2,0),1) ka.C0=Clerp(ka.C0,CFrame.new(-.5,-2,0),1) ja.C1=Clerp(ja.C1,CFrame.new(),1) ka.C1=Clerp(ka.C1,CFrame.new(),1) ha.C1=Clerp(ha.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1) ga.C1=Clerp(ga.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1)end end end swait()end
--boo!
